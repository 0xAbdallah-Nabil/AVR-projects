
avoiding_car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005004  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000150  00800060  00005004  00005098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000022  008001b0  008001b0  000051e8  2**0
                  ALLOC
  3 .stab         00003a08  00000000  00000000  000051e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001ec9  00000000  00000000  00008bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  0000aab9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000258  00000000  00000000  0000acb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000028f3  00000000  00000000  0000af11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000168f  00000000  00000000  0000d804  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014df  00000000  00000000  0000ee93  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  00010374  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000357  00000000  00000000  00010594  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000cfc  00000000  00000000  000108eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000115e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 b2 0e 	jmp	0x1d64	; 0x1d64 <__vector_1>
       8:	0c 94 df 0e 	jmp	0x1dbe	; 0x1dbe <__vector_2>
       c:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__vector_3>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 3c 19 	jmp	0x3278	; 0x3278 <__vector_6>
      1c:	0c 94 09 19 	jmp	0x3212	; 0x3212 <__vector_7>
      20:	0c 94 d6 18 	jmp	0x31ac	; 0x31ac <__vector_8>
      24:	0c 94 a3 18 	jmp	0x3146	; 0x3146 <__vector_9>
      28:	0c 94 70 18 	jmp	0x30e0	; 0x30e0 <__vector_10>
      2c:	0c 94 3d 18 	jmp	0x307a	; 0x307a <__vector_11>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__divsf3+0xca>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__addsf3+0x4>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <_fpadd_parts+0x30>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__fixunssfsi+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e4 e0       	ldi	r30, 0x04	; 4
     162:	f0 e5       	ldi	r31, 0x50	; 80
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	a0 3b       	cpi	r26, 0xB0	; 176
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
     170:	11 e0       	ldi	r17, 0x01	; 1
     172:	a0 eb       	ldi	r26, 0xB0	; 176
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a2 3d       	cpi	r26, 0xD2	; 210
     17c:	b1 07       	cpc	r27, r17
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 6f 19 	call	0x32de	; 0x32de <main>
     184:	0c 94 00 28 	jmp	0x5000	; 0x5000 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <__fixunssfsi>:
     18c:	ef 92       	push	r14
     18e:	ff 92       	push	r15
     190:	0f 93       	push	r16
     192:	1f 93       	push	r17
     194:	7b 01       	movw	r14, r22
     196:	8c 01       	movw	r16, r24
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	40 e0       	ldi	r20, 0x00	; 0
     19e:	5f e4       	ldi	r21, 0x4F	; 79
     1a0:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__gesf2>
     1a4:	88 23       	and	r24, r24
     1a6:	8c f0       	brlt	.+34     	; 0x1ca <__fixunssfsi+0x3e>
     1a8:	c8 01       	movw	r24, r16
     1aa:	b7 01       	movw	r22, r14
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	40 e0       	ldi	r20, 0x00	; 0
     1b2:	5f e4       	ldi	r21, 0x4F	; 79
     1b4:	0e 94 1a 03 	call	0x634	; 0x634 <__subsf3>
     1b8:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fixsfsi>
     1bc:	9b 01       	movw	r18, r22
     1be:	ac 01       	movw	r20, r24
     1c0:	20 50       	subi	r18, 0x00	; 0
     1c2:	30 40       	sbci	r19, 0x00	; 0
     1c4:	40 40       	sbci	r20, 0x00	; 0
     1c6:	50 48       	sbci	r21, 0x80	; 128
     1c8:	06 c0       	rjmp	.+12     	; 0x1d6 <__fixunssfsi+0x4a>
     1ca:	c8 01       	movw	r24, r16
     1cc:	b7 01       	movw	r22, r14
     1ce:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fixsfsi>
     1d2:	9b 01       	movw	r18, r22
     1d4:	ac 01       	movw	r20, r24
     1d6:	b9 01       	movw	r22, r18
     1d8:	ca 01       	movw	r24, r20
     1da:	1f 91       	pop	r17
     1dc:	0f 91       	pop	r16
     1de:	ff 90       	pop	r15
     1e0:	ef 90       	pop	r14
     1e2:	08 95       	ret

000001e4 <__floatundisf>:
     1e4:	a2 e0       	ldi	r26, 0x02	; 2
     1e6:	b0 e0       	ldi	r27, 0x00	; 0
     1e8:	e8 ef       	ldi	r30, 0xF8	; 248
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__prologue_saves__>
     1f0:	12 2f       	mov	r17, r18
     1f2:	b3 2e       	mov	r11, r19
     1f4:	a4 2e       	mov	r10, r20
     1f6:	95 2e       	mov	r9, r21
     1f8:	86 2e       	mov	r8, r22
     1fa:	37 2e       	mov	r3, r23
     1fc:	28 2e       	mov	r2, r24
     1fe:	9a 83       	std	Y+2, r25	; 0x02
     200:	c2 2e       	mov	r12, r18
     202:	d3 2e       	mov	r13, r19
     204:	e4 2e       	mov	r14, r20
     206:	f5 2e       	mov	r15, r21
     208:	a7 01       	movw	r20, r14
     20a:	96 01       	movw	r18, r12
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	80 e0       	ldi	r24, 0x00	; 0
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	21 17       	cp	r18, r17
     216:	a1 f4       	brne	.+40     	; 0x240 <__floatundisf+0x5c>
     218:	3b 15       	cp	r19, r11
     21a:	91 f4       	brne	.+36     	; 0x240 <__floatundisf+0x5c>
     21c:	4a 15       	cp	r20, r10
     21e:	81 f4       	brne	.+32     	; 0x240 <__floatundisf+0x5c>
     220:	59 15       	cp	r21, r9
     222:	71 f4       	brne	.+28     	; 0x240 <__floatundisf+0x5c>
     224:	68 15       	cp	r22, r8
     226:	61 f4       	brne	.+24     	; 0x240 <__floatundisf+0x5c>
     228:	73 15       	cp	r23, r3
     22a:	51 f4       	brne	.+20     	; 0x240 <__floatundisf+0x5c>
     22c:	82 15       	cp	r24, r2
     22e:	41 f4       	brne	.+16     	; 0x240 <__floatundisf+0x5c>
     230:	aa 81       	ldd	r26, Y+2	; 0x02
     232:	9a 17       	cp	r25, r26
     234:	29 f4       	brne	.+10     	; 0x240 <__floatundisf+0x5c>
     236:	c7 01       	movw	r24, r14
     238:	b6 01       	movw	r22, r12
     23a:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__floatunsisf>
     23e:	aa c0       	rjmp	.+340    	; 0x394 <__floatundisf+0x1b0>
     240:	21 2f       	mov	r18, r17
     242:	3b 2d       	mov	r19, r11
     244:	4a 2d       	mov	r20, r10
     246:	59 2d       	mov	r21, r9
     248:	68 2d       	mov	r22, r8
     24a:	73 2d       	mov	r23, r3
     24c:	82 2d       	mov	r24, r2
     24e:	9a 81       	ldd	r25, Y+2	; 0x02
     250:	00 e2       	ldi	r16, 0x20	; 32
     252:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__lshrdi3>
     256:	c9 01       	movw	r24, r18
     258:	da 01       	movw	r26, r20
     25a:	80 30       	cpi	r24, 0x00	; 0
     25c:	e0 e0       	ldi	r30, 0x00	; 0
     25e:	9e 07       	cpc	r25, r30
     260:	e1 e0       	ldi	r30, 0x01	; 1
     262:	ae 07       	cpc	r26, r30
     264:	e0 e0       	ldi	r30, 0x00	; 0
     266:	be 07       	cpc	r27, r30
     268:	80 f4       	brcc	.+32     	; 0x28a <__floatundisf+0xa6>
     26a:	8f 3f       	cpi	r24, 0xFF	; 255
     26c:	91 05       	cpc	r25, r1
     26e:	a1 05       	cpc	r26, r1
     270:	b1 05       	cpc	r27, r1
     272:	31 f0       	breq	.+12     	; 0x280 <__floatundisf+0x9c>
     274:	28 f0       	brcs	.+10     	; 0x280 <__floatundisf+0x9c>
     276:	28 e0       	ldi	r18, 0x08	; 8
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	40 e0       	ldi	r20, 0x00	; 0
     27c:	50 e0       	ldi	r21, 0x00	; 0
     27e:	16 c0       	rjmp	.+44     	; 0x2ac <__floatundisf+0xc8>
     280:	20 e0       	ldi	r18, 0x00	; 0
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	40 e0       	ldi	r20, 0x00	; 0
     286:	50 e0       	ldi	r21, 0x00	; 0
     288:	11 c0       	rjmp	.+34     	; 0x2ac <__floatundisf+0xc8>
     28a:	80 30       	cpi	r24, 0x00	; 0
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	9f 07       	cpc	r25, r31
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	af 07       	cpc	r26, r31
     294:	f1 e0       	ldi	r31, 0x01	; 1
     296:	bf 07       	cpc	r27, r31
     298:	28 f0       	brcs	.+10     	; 0x2a4 <__floatundisf+0xc0>
     29a:	28 e1       	ldi	r18, 0x18	; 24
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	40 e0       	ldi	r20, 0x00	; 0
     2a0:	50 e0       	ldi	r21, 0x00	; 0
     2a2:	04 c0       	rjmp	.+8      	; 0x2ac <__floatundisf+0xc8>
     2a4:	20 e1       	ldi	r18, 0x10	; 16
     2a6:	30 e0       	ldi	r19, 0x00	; 0
     2a8:	40 e0       	ldi	r20, 0x00	; 0
     2aa:	50 e0       	ldi	r21, 0x00	; 0
     2ac:	02 2e       	mov	r0, r18
     2ae:	04 c0       	rjmp	.+8      	; 0x2b8 <__floatundisf+0xd4>
     2b0:	b6 95       	lsr	r27
     2b2:	a7 95       	ror	r26
     2b4:	97 95       	ror	r25
     2b6:	87 95       	ror	r24
     2b8:	0a 94       	dec	r0
     2ba:	d2 f7       	brpl	.-12     	; 0x2b0 <__floatundisf+0xcc>
     2bc:	fc 01       	movw	r30, r24
     2be:	eb 55       	subi	r30, 0x5B	; 91
     2c0:	ff 4f       	sbci	r31, 0xFF	; 255
     2c2:	80 81       	ld	r24, Z
     2c4:	29 01       	movw	r4, r18
     2c6:	3a 01       	movw	r6, r20
     2c8:	48 0e       	add	r4, r24
     2ca:	51 1c       	adc	r5, r1
     2cc:	61 1c       	adc	r6, r1
     2ce:	71 1c       	adc	r7, r1
     2d0:	49 82       	std	Y+1, r4	; 0x01
     2d2:	21 2f       	mov	r18, r17
     2d4:	3b 2d       	mov	r19, r11
     2d6:	4a 2d       	mov	r20, r10
     2d8:	59 2d       	mov	r21, r9
     2da:	68 2d       	mov	r22, r8
     2dc:	73 2d       	mov	r23, r3
     2de:	82 2d       	mov	r24, r2
     2e0:	9a 81       	ldd	r25, Y+2	; 0x02
     2e2:	04 2d       	mov	r16, r4
     2e4:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__lshrdi3>
     2e8:	c9 01       	movw	r24, r18
     2ea:	da 01       	movw	r26, r20
     2ec:	4c 01       	movw	r8, r24
     2ee:	5d 01       	movw	r10, r26
     2f0:	80 e2       	ldi	r24, 0x20	; 32
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	84 19       	sub	r24, r4
     2f6:	95 09       	sbc	r25, r5
     2f8:	04 c0       	rjmp	.+8      	; 0x302 <__floatundisf+0x11e>
     2fa:	cc 0c       	add	r12, r12
     2fc:	dd 1c       	adc	r13, r13
     2fe:	ee 1c       	adc	r14, r14
     300:	ff 1c       	adc	r15, r15
     302:	8a 95       	dec	r24
     304:	d2 f7       	brpl	.-12     	; 0x2fa <__floatundisf+0x116>
     306:	c1 14       	cp	r12, r1
     308:	d1 04       	cpc	r13, r1
     30a:	e1 04       	cpc	r14, r1
     30c:	f1 04       	cpc	r15, r1
     30e:	41 f0       	breq	.+16     	; 0x320 <__floatundisf+0x13c>
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	a0 e0       	ldi	r26, 0x00	; 0
     316:	b0 e0       	ldi	r27, 0x00	; 0
     318:	88 2a       	or	r8, r24
     31a:	99 2a       	or	r9, r25
     31c:	aa 2a       	or	r10, r26
     31e:	bb 2a       	or	r11, r27
     320:	90 e2       	ldi	r25, 0x20	; 32
     322:	49 16       	cp	r4, r25
     324:	51 04       	cpc	r5, r1
     326:	61 04       	cpc	r6, r1
     328:	71 04       	cpc	r7, r1
     32a:	59 f4       	brne	.+22     	; 0x342 <__floatundisf+0x15e>
     32c:	0f 2e       	mov	r0, r31
     32e:	f0 e0       	ldi	r31, 0x00	; 0
     330:	ef 2e       	mov	r14, r31
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	ff 2e       	mov	r15, r31
     336:	f0 e8       	ldi	r31, 0x80	; 128
     338:	0f 2f       	mov	r16, r31
     33a:	ff e4       	ldi	r31, 0x4F	; 79
     33c:	1f 2f       	mov	r17, r31
     33e:	f0 2d       	mov	r31, r0
     340:	21 c0       	rjmp	.+66     	; 0x384 <__floatundisf+0x1a0>
     342:	af e1       	ldi	r26, 0x1F	; 31
     344:	4a 16       	cp	r4, r26
     346:	51 04       	cpc	r5, r1
     348:	61 04       	cpc	r6, r1
     34a:	71 04       	cpc	r7, r1
     34c:	59 f4       	brne	.+22     	; 0x364 <__floatundisf+0x180>
     34e:	0f 2e       	mov	r0, r31
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	ef 2e       	mov	r14, r31
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	ff 2e       	mov	r15, r31
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	0f 2f       	mov	r16, r31
     35c:	ff e4       	ldi	r31, 0x4F	; 79
     35e:	1f 2f       	mov	r17, r31
     360:	f0 2d       	mov	r31, r0
     362:	10 c0       	rjmp	.+32     	; 0x384 <__floatundisf+0x1a0>
     364:	61 e0       	ldi	r22, 0x01	; 1
     366:	70 e0       	ldi	r23, 0x00	; 0
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	09 80       	ldd	r0, Y+1	; 0x01
     36e:	04 c0       	rjmp	.+8      	; 0x378 <__floatundisf+0x194>
     370:	66 0f       	add	r22, r22
     372:	77 1f       	adc	r23, r23
     374:	88 1f       	adc	r24, r24
     376:	99 1f       	adc	r25, r25
     378:	0a 94       	dec	r0
     37a:	d2 f7       	brpl	.-12     	; 0x370 <__floatundisf+0x18c>
     37c:	0e 94 ae 05 	call	0xb5c	; 0xb5c <__floatsisf>
     380:	7b 01       	movw	r14, r22
     382:	8c 01       	movw	r16, r24
     384:	c5 01       	movw	r24, r10
     386:	b4 01       	movw	r22, r8
     388:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__floatunsisf>
     38c:	a8 01       	movw	r20, r16
     38e:	97 01       	movw	r18, r14
     390:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
     394:	22 96       	adiw	r28, 0x02	; 2
     396:	e2 e1       	ldi	r30, 0x12	; 18
     398:	0c 94 59 25 	jmp	0x4ab2	; 0x4ab2 <__epilogue_restores__>

0000039c <_fpadd_parts>:
     39c:	a0 e0       	ldi	r26, 0x00	; 0
     39e:	b0 e0       	ldi	r27, 0x00	; 0
     3a0:	e4 ed       	ldi	r30, 0xD4	; 212
     3a2:	f1 e0       	ldi	r31, 0x01	; 1
     3a4:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__prologue_saves__>
     3a8:	dc 01       	movw	r26, r24
     3aa:	2b 01       	movw	r4, r22
     3ac:	fa 01       	movw	r30, r20
     3ae:	9c 91       	ld	r25, X
     3b0:	92 30       	cpi	r25, 0x02	; 2
     3b2:	08 f4       	brcc	.+2      	; 0x3b6 <_fpadd_parts+0x1a>
     3b4:	39 c1       	rjmp	.+626    	; 0x628 <_fpadd_parts+0x28c>
     3b6:	eb 01       	movw	r28, r22
     3b8:	88 81       	ld	r24, Y
     3ba:	82 30       	cpi	r24, 0x02	; 2
     3bc:	08 f4       	brcc	.+2      	; 0x3c0 <_fpadd_parts+0x24>
     3be:	33 c1       	rjmp	.+614    	; 0x626 <_fpadd_parts+0x28a>
     3c0:	94 30       	cpi	r25, 0x04	; 4
     3c2:	69 f4       	brne	.+26     	; 0x3de <_fpadd_parts+0x42>
     3c4:	84 30       	cpi	r24, 0x04	; 4
     3c6:	09 f0       	breq	.+2      	; 0x3ca <_fpadd_parts+0x2e>
     3c8:	2f c1       	rjmp	.+606    	; 0x628 <_fpadd_parts+0x28c>
     3ca:	11 96       	adiw	r26, 0x01	; 1
     3cc:	9c 91       	ld	r25, X
     3ce:	11 97       	sbiw	r26, 0x01	; 1
     3d0:	89 81       	ldd	r24, Y+1	; 0x01
     3d2:	98 17       	cp	r25, r24
     3d4:	09 f4       	brne	.+2      	; 0x3d8 <_fpadd_parts+0x3c>
     3d6:	28 c1       	rjmp	.+592    	; 0x628 <_fpadd_parts+0x28c>
     3d8:	ad e9       	ldi	r26, 0x9D	; 157
     3da:	b0 e0       	ldi	r27, 0x00	; 0
     3dc:	25 c1       	rjmp	.+586    	; 0x628 <_fpadd_parts+0x28c>
     3de:	84 30       	cpi	r24, 0x04	; 4
     3e0:	09 f4       	brne	.+2      	; 0x3e4 <_fpadd_parts+0x48>
     3e2:	21 c1       	rjmp	.+578    	; 0x626 <_fpadd_parts+0x28a>
     3e4:	82 30       	cpi	r24, 0x02	; 2
     3e6:	a9 f4       	brne	.+42     	; 0x412 <_fpadd_parts+0x76>
     3e8:	92 30       	cpi	r25, 0x02	; 2
     3ea:	09 f0       	breq	.+2      	; 0x3ee <_fpadd_parts+0x52>
     3ec:	1d c1       	rjmp	.+570    	; 0x628 <_fpadd_parts+0x28c>
     3ee:	9a 01       	movw	r18, r20
     3f0:	ad 01       	movw	r20, r26
     3f2:	88 e0       	ldi	r24, 0x08	; 8
     3f4:	ea 01       	movw	r28, r20
     3f6:	09 90       	ld	r0, Y+
     3f8:	ae 01       	movw	r20, r28
     3fa:	e9 01       	movw	r28, r18
     3fc:	09 92       	st	Y+, r0
     3fe:	9e 01       	movw	r18, r28
     400:	81 50       	subi	r24, 0x01	; 1
     402:	c1 f7       	brne	.-16     	; 0x3f4 <_fpadd_parts+0x58>
     404:	e2 01       	movw	r28, r4
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	11 96       	adiw	r26, 0x01	; 1
     40a:	9c 91       	ld	r25, X
     40c:	89 23       	and	r24, r25
     40e:	81 83       	std	Z+1, r24	; 0x01
     410:	08 c1       	rjmp	.+528    	; 0x622 <_fpadd_parts+0x286>
     412:	92 30       	cpi	r25, 0x02	; 2
     414:	09 f4       	brne	.+2      	; 0x418 <_fpadd_parts+0x7c>
     416:	07 c1       	rjmp	.+526    	; 0x626 <_fpadd_parts+0x28a>
     418:	12 96       	adiw	r26, 0x02	; 2
     41a:	2d 90       	ld	r2, X+
     41c:	3c 90       	ld	r3, X
     41e:	13 97       	sbiw	r26, 0x03	; 3
     420:	eb 01       	movw	r28, r22
     422:	8a 81       	ldd	r24, Y+2	; 0x02
     424:	9b 81       	ldd	r25, Y+3	; 0x03
     426:	14 96       	adiw	r26, 0x04	; 4
     428:	ad 90       	ld	r10, X+
     42a:	bd 90       	ld	r11, X+
     42c:	cd 90       	ld	r12, X+
     42e:	dc 90       	ld	r13, X
     430:	17 97       	sbiw	r26, 0x07	; 7
     432:	ec 80       	ldd	r14, Y+4	; 0x04
     434:	fd 80       	ldd	r15, Y+5	; 0x05
     436:	0e 81       	ldd	r16, Y+6	; 0x06
     438:	1f 81       	ldd	r17, Y+7	; 0x07
     43a:	91 01       	movw	r18, r2
     43c:	28 1b       	sub	r18, r24
     43e:	39 0b       	sbc	r19, r25
     440:	b9 01       	movw	r22, r18
     442:	37 ff       	sbrs	r19, 7
     444:	04 c0       	rjmp	.+8      	; 0x44e <_fpadd_parts+0xb2>
     446:	66 27       	eor	r22, r22
     448:	77 27       	eor	r23, r23
     44a:	62 1b       	sub	r22, r18
     44c:	73 0b       	sbc	r23, r19
     44e:	60 32       	cpi	r22, 0x20	; 32
     450:	71 05       	cpc	r23, r1
     452:	0c f0       	brlt	.+2      	; 0x456 <_fpadd_parts+0xba>
     454:	61 c0       	rjmp	.+194    	; 0x518 <_fpadd_parts+0x17c>
     456:	12 16       	cp	r1, r18
     458:	13 06       	cpc	r1, r19
     45a:	6c f5       	brge	.+90     	; 0x4b6 <_fpadd_parts+0x11a>
     45c:	37 01       	movw	r6, r14
     45e:	48 01       	movw	r8, r16
     460:	06 2e       	mov	r0, r22
     462:	04 c0       	rjmp	.+8      	; 0x46c <_fpadd_parts+0xd0>
     464:	96 94       	lsr	r9
     466:	87 94       	ror	r8
     468:	77 94       	ror	r7
     46a:	67 94       	ror	r6
     46c:	0a 94       	dec	r0
     46e:	d2 f7       	brpl	.-12     	; 0x464 <_fpadd_parts+0xc8>
     470:	21 e0       	ldi	r18, 0x01	; 1
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	40 e0       	ldi	r20, 0x00	; 0
     476:	50 e0       	ldi	r21, 0x00	; 0
     478:	04 c0       	rjmp	.+8      	; 0x482 <_fpadd_parts+0xe6>
     47a:	22 0f       	add	r18, r18
     47c:	33 1f       	adc	r19, r19
     47e:	44 1f       	adc	r20, r20
     480:	55 1f       	adc	r21, r21
     482:	6a 95       	dec	r22
     484:	d2 f7       	brpl	.-12     	; 0x47a <_fpadd_parts+0xde>
     486:	21 50       	subi	r18, 0x01	; 1
     488:	30 40       	sbci	r19, 0x00	; 0
     48a:	40 40       	sbci	r20, 0x00	; 0
     48c:	50 40       	sbci	r21, 0x00	; 0
     48e:	2e 21       	and	r18, r14
     490:	3f 21       	and	r19, r15
     492:	40 23       	and	r20, r16
     494:	51 23       	and	r21, r17
     496:	21 15       	cp	r18, r1
     498:	31 05       	cpc	r19, r1
     49a:	41 05       	cpc	r20, r1
     49c:	51 05       	cpc	r21, r1
     49e:	21 f0       	breq	.+8      	; 0x4a8 <_fpadd_parts+0x10c>
     4a0:	21 e0       	ldi	r18, 0x01	; 1
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	40 e0       	ldi	r20, 0x00	; 0
     4a6:	50 e0       	ldi	r21, 0x00	; 0
     4a8:	79 01       	movw	r14, r18
     4aa:	8a 01       	movw	r16, r20
     4ac:	e6 28       	or	r14, r6
     4ae:	f7 28       	or	r15, r7
     4b0:	08 29       	or	r16, r8
     4b2:	19 29       	or	r17, r9
     4b4:	3c c0       	rjmp	.+120    	; 0x52e <_fpadd_parts+0x192>
     4b6:	23 2b       	or	r18, r19
     4b8:	d1 f1       	breq	.+116    	; 0x52e <_fpadd_parts+0x192>
     4ba:	26 0e       	add	r2, r22
     4bc:	37 1e       	adc	r3, r23
     4be:	35 01       	movw	r6, r10
     4c0:	46 01       	movw	r8, r12
     4c2:	06 2e       	mov	r0, r22
     4c4:	04 c0       	rjmp	.+8      	; 0x4ce <_fpadd_parts+0x132>
     4c6:	96 94       	lsr	r9
     4c8:	87 94       	ror	r8
     4ca:	77 94       	ror	r7
     4cc:	67 94       	ror	r6
     4ce:	0a 94       	dec	r0
     4d0:	d2 f7       	brpl	.-12     	; 0x4c6 <_fpadd_parts+0x12a>
     4d2:	21 e0       	ldi	r18, 0x01	; 1
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	40 e0       	ldi	r20, 0x00	; 0
     4d8:	50 e0       	ldi	r21, 0x00	; 0
     4da:	04 c0       	rjmp	.+8      	; 0x4e4 <_fpadd_parts+0x148>
     4dc:	22 0f       	add	r18, r18
     4de:	33 1f       	adc	r19, r19
     4e0:	44 1f       	adc	r20, r20
     4e2:	55 1f       	adc	r21, r21
     4e4:	6a 95       	dec	r22
     4e6:	d2 f7       	brpl	.-12     	; 0x4dc <_fpadd_parts+0x140>
     4e8:	21 50       	subi	r18, 0x01	; 1
     4ea:	30 40       	sbci	r19, 0x00	; 0
     4ec:	40 40       	sbci	r20, 0x00	; 0
     4ee:	50 40       	sbci	r21, 0x00	; 0
     4f0:	2a 21       	and	r18, r10
     4f2:	3b 21       	and	r19, r11
     4f4:	4c 21       	and	r20, r12
     4f6:	5d 21       	and	r21, r13
     4f8:	21 15       	cp	r18, r1
     4fa:	31 05       	cpc	r19, r1
     4fc:	41 05       	cpc	r20, r1
     4fe:	51 05       	cpc	r21, r1
     500:	21 f0       	breq	.+8      	; 0x50a <_fpadd_parts+0x16e>
     502:	21 e0       	ldi	r18, 0x01	; 1
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	40 e0       	ldi	r20, 0x00	; 0
     508:	50 e0       	ldi	r21, 0x00	; 0
     50a:	59 01       	movw	r10, r18
     50c:	6a 01       	movw	r12, r20
     50e:	a6 28       	or	r10, r6
     510:	b7 28       	or	r11, r7
     512:	c8 28       	or	r12, r8
     514:	d9 28       	or	r13, r9
     516:	0b c0       	rjmp	.+22     	; 0x52e <_fpadd_parts+0x192>
     518:	82 15       	cp	r24, r2
     51a:	93 05       	cpc	r25, r3
     51c:	2c f0       	brlt	.+10     	; 0x528 <_fpadd_parts+0x18c>
     51e:	1c 01       	movw	r2, r24
     520:	aa 24       	eor	r10, r10
     522:	bb 24       	eor	r11, r11
     524:	65 01       	movw	r12, r10
     526:	03 c0       	rjmp	.+6      	; 0x52e <_fpadd_parts+0x192>
     528:	ee 24       	eor	r14, r14
     52a:	ff 24       	eor	r15, r15
     52c:	87 01       	movw	r16, r14
     52e:	11 96       	adiw	r26, 0x01	; 1
     530:	9c 91       	ld	r25, X
     532:	d2 01       	movw	r26, r4
     534:	11 96       	adiw	r26, 0x01	; 1
     536:	8c 91       	ld	r24, X
     538:	98 17       	cp	r25, r24
     53a:	09 f4       	brne	.+2      	; 0x53e <_fpadd_parts+0x1a2>
     53c:	45 c0       	rjmp	.+138    	; 0x5c8 <_fpadd_parts+0x22c>
     53e:	99 23       	and	r25, r25
     540:	39 f0       	breq	.+14     	; 0x550 <_fpadd_parts+0x1b4>
     542:	a8 01       	movw	r20, r16
     544:	97 01       	movw	r18, r14
     546:	2a 19       	sub	r18, r10
     548:	3b 09       	sbc	r19, r11
     54a:	4c 09       	sbc	r20, r12
     54c:	5d 09       	sbc	r21, r13
     54e:	06 c0       	rjmp	.+12     	; 0x55c <_fpadd_parts+0x1c0>
     550:	a6 01       	movw	r20, r12
     552:	95 01       	movw	r18, r10
     554:	2e 19       	sub	r18, r14
     556:	3f 09       	sbc	r19, r15
     558:	40 0b       	sbc	r20, r16
     55a:	51 0b       	sbc	r21, r17
     55c:	57 fd       	sbrc	r21, 7
     55e:	08 c0       	rjmp	.+16     	; 0x570 <_fpadd_parts+0x1d4>
     560:	11 82       	std	Z+1, r1	; 0x01
     562:	33 82       	std	Z+3, r3	; 0x03
     564:	22 82       	std	Z+2, r2	; 0x02
     566:	24 83       	std	Z+4, r18	; 0x04
     568:	35 83       	std	Z+5, r19	; 0x05
     56a:	46 83       	std	Z+6, r20	; 0x06
     56c:	57 83       	std	Z+7, r21	; 0x07
     56e:	1d c0       	rjmp	.+58     	; 0x5aa <_fpadd_parts+0x20e>
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	81 83       	std	Z+1, r24	; 0x01
     574:	33 82       	std	Z+3, r3	; 0x03
     576:	22 82       	std	Z+2, r2	; 0x02
     578:	88 27       	eor	r24, r24
     57a:	99 27       	eor	r25, r25
     57c:	dc 01       	movw	r26, r24
     57e:	82 1b       	sub	r24, r18
     580:	93 0b       	sbc	r25, r19
     582:	a4 0b       	sbc	r26, r20
     584:	b5 0b       	sbc	r27, r21
     586:	84 83       	std	Z+4, r24	; 0x04
     588:	95 83       	std	Z+5, r25	; 0x05
     58a:	a6 83       	std	Z+6, r26	; 0x06
     58c:	b7 83       	std	Z+7, r27	; 0x07
     58e:	0d c0       	rjmp	.+26     	; 0x5aa <_fpadd_parts+0x20e>
     590:	22 0f       	add	r18, r18
     592:	33 1f       	adc	r19, r19
     594:	44 1f       	adc	r20, r20
     596:	55 1f       	adc	r21, r21
     598:	24 83       	std	Z+4, r18	; 0x04
     59a:	35 83       	std	Z+5, r19	; 0x05
     59c:	46 83       	std	Z+6, r20	; 0x06
     59e:	57 83       	std	Z+7, r21	; 0x07
     5a0:	82 81       	ldd	r24, Z+2	; 0x02
     5a2:	93 81       	ldd	r25, Z+3	; 0x03
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	93 83       	std	Z+3, r25	; 0x03
     5a8:	82 83       	std	Z+2, r24	; 0x02
     5aa:	24 81       	ldd	r18, Z+4	; 0x04
     5ac:	35 81       	ldd	r19, Z+5	; 0x05
     5ae:	46 81       	ldd	r20, Z+6	; 0x06
     5b0:	57 81       	ldd	r21, Z+7	; 0x07
     5b2:	da 01       	movw	r26, r20
     5b4:	c9 01       	movw	r24, r18
     5b6:	01 97       	sbiw	r24, 0x01	; 1
     5b8:	a1 09       	sbc	r26, r1
     5ba:	b1 09       	sbc	r27, r1
     5bc:	8f 5f       	subi	r24, 0xFF	; 255
     5be:	9f 4f       	sbci	r25, 0xFF	; 255
     5c0:	af 4f       	sbci	r26, 0xFF	; 255
     5c2:	bf 43       	sbci	r27, 0x3F	; 63
     5c4:	28 f3       	brcs	.-54     	; 0x590 <_fpadd_parts+0x1f4>
     5c6:	0b c0       	rjmp	.+22     	; 0x5de <_fpadd_parts+0x242>
     5c8:	91 83       	std	Z+1, r25	; 0x01
     5ca:	33 82       	std	Z+3, r3	; 0x03
     5cc:	22 82       	std	Z+2, r2	; 0x02
     5ce:	ea 0c       	add	r14, r10
     5d0:	fb 1c       	adc	r15, r11
     5d2:	0c 1d       	adc	r16, r12
     5d4:	1d 1d       	adc	r17, r13
     5d6:	e4 82       	std	Z+4, r14	; 0x04
     5d8:	f5 82       	std	Z+5, r15	; 0x05
     5da:	06 83       	std	Z+6, r16	; 0x06
     5dc:	17 83       	std	Z+7, r17	; 0x07
     5de:	83 e0       	ldi	r24, 0x03	; 3
     5e0:	80 83       	st	Z, r24
     5e2:	24 81       	ldd	r18, Z+4	; 0x04
     5e4:	35 81       	ldd	r19, Z+5	; 0x05
     5e6:	46 81       	ldd	r20, Z+6	; 0x06
     5e8:	57 81       	ldd	r21, Z+7	; 0x07
     5ea:	57 ff       	sbrs	r21, 7
     5ec:	1a c0       	rjmp	.+52     	; 0x622 <_fpadd_parts+0x286>
     5ee:	c9 01       	movw	r24, r18
     5f0:	aa 27       	eor	r26, r26
     5f2:	97 fd       	sbrc	r25, 7
     5f4:	a0 95       	com	r26
     5f6:	ba 2f       	mov	r27, r26
     5f8:	81 70       	andi	r24, 0x01	; 1
     5fa:	90 70       	andi	r25, 0x00	; 0
     5fc:	a0 70       	andi	r26, 0x00	; 0
     5fe:	b0 70       	andi	r27, 0x00	; 0
     600:	56 95       	lsr	r21
     602:	47 95       	ror	r20
     604:	37 95       	ror	r19
     606:	27 95       	ror	r18
     608:	82 2b       	or	r24, r18
     60a:	93 2b       	or	r25, r19
     60c:	a4 2b       	or	r26, r20
     60e:	b5 2b       	or	r27, r21
     610:	84 83       	std	Z+4, r24	; 0x04
     612:	95 83       	std	Z+5, r25	; 0x05
     614:	a6 83       	std	Z+6, r26	; 0x06
     616:	b7 83       	std	Z+7, r27	; 0x07
     618:	82 81       	ldd	r24, Z+2	; 0x02
     61a:	93 81       	ldd	r25, Z+3	; 0x03
     61c:	01 96       	adiw	r24, 0x01	; 1
     61e:	93 83       	std	Z+3, r25	; 0x03
     620:	82 83       	std	Z+2, r24	; 0x02
     622:	df 01       	movw	r26, r30
     624:	01 c0       	rjmp	.+2      	; 0x628 <_fpadd_parts+0x28c>
     626:	d2 01       	movw	r26, r4
     628:	cd 01       	movw	r24, r26
     62a:	cd b7       	in	r28, 0x3d	; 61
     62c:	de b7       	in	r29, 0x3e	; 62
     62e:	e2 e1       	ldi	r30, 0x12	; 18
     630:	0c 94 59 25 	jmp	0x4ab2	; 0x4ab2 <__epilogue_restores__>

00000634 <__subsf3>:
     634:	a0 e2       	ldi	r26, 0x20	; 32
     636:	b0 e0       	ldi	r27, 0x00	; 0
     638:	e0 e2       	ldi	r30, 0x20	; 32
     63a:	f3 e0       	ldi	r31, 0x03	; 3
     63c:	0c 94 49 25 	jmp	0x4a92	; 0x4a92 <__prologue_saves__+0x18>
     640:	69 83       	std	Y+1, r22	; 0x01
     642:	7a 83       	std	Y+2, r23	; 0x02
     644:	8b 83       	std	Y+3, r24	; 0x03
     646:	9c 83       	std	Y+4, r25	; 0x04
     648:	2d 83       	std	Y+5, r18	; 0x05
     64a:	3e 83       	std	Y+6, r19	; 0x06
     64c:	4f 83       	std	Y+7, r20	; 0x07
     64e:	58 87       	std	Y+8, r21	; 0x08
     650:	e9 e0       	ldi	r30, 0x09	; 9
     652:	ee 2e       	mov	r14, r30
     654:	f1 2c       	mov	r15, r1
     656:	ec 0e       	add	r14, r28
     658:	fd 1e       	adc	r15, r29
     65a:	ce 01       	movw	r24, r28
     65c:	01 96       	adiw	r24, 0x01	; 1
     65e:	b7 01       	movw	r22, r14
     660:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     664:	8e 01       	movw	r16, r28
     666:	0f 5e       	subi	r16, 0xEF	; 239
     668:	1f 4f       	sbci	r17, 0xFF	; 255
     66a:	ce 01       	movw	r24, r28
     66c:	05 96       	adiw	r24, 0x05	; 5
     66e:	b8 01       	movw	r22, r16
     670:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     674:	8a 89       	ldd	r24, Y+18	; 0x12
     676:	91 e0       	ldi	r25, 0x01	; 1
     678:	89 27       	eor	r24, r25
     67a:	8a 8b       	std	Y+18, r24	; 0x12
     67c:	c7 01       	movw	r24, r14
     67e:	b8 01       	movw	r22, r16
     680:	ae 01       	movw	r20, r28
     682:	47 5e       	subi	r20, 0xE7	; 231
     684:	5f 4f       	sbci	r21, 0xFF	; 255
     686:	0e 94 ce 01 	call	0x39c	; 0x39c <_fpadd_parts>
     68a:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__pack_f>
     68e:	a0 96       	adiw	r28, 0x20	; 32
     690:	e6 e0       	ldi	r30, 0x06	; 6
     692:	0c 94 65 25 	jmp	0x4aca	; 0x4aca <__epilogue_restores__+0x18>

00000696 <__addsf3>:
     696:	a0 e2       	ldi	r26, 0x20	; 32
     698:	b0 e0       	ldi	r27, 0x00	; 0
     69a:	e1 e5       	ldi	r30, 0x51	; 81
     69c:	f3 e0       	ldi	r31, 0x03	; 3
     69e:	0c 94 49 25 	jmp	0x4a92	; 0x4a92 <__prologue_saves__+0x18>
     6a2:	69 83       	std	Y+1, r22	; 0x01
     6a4:	7a 83       	std	Y+2, r23	; 0x02
     6a6:	8b 83       	std	Y+3, r24	; 0x03
     6a8:	9c 83       	std	Y+4, r25	; 0x04
     6aa:	2d 83       	std	Y+5, r18	; 0x05
     6ac:	3e 83       	std	Y+6, r19	; 0x06
     6ae:	4f 83       	std	Y+7, r20	; 0x07
     6b0:	58 87       	std	Y+8, r21	; 0x08
     6b2:	f9 e0       	ldi	r31, 0x09	; 9
     6b4:	ef 2e       	mov	r14, r31
     6b6:	f1 2c       	mov	r15, r1
     6b8:	ec 0e       	add	r14, r28
     6ba:	fd 1e       	adc	r15, r29
     6bc:	ce 01       	movw	r24, r28
     6be:	01 96       	adiw	r24, 0x01	; 1
     6c0:	b7 01       	movw	r22, r14
     6c2:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     6c6:	8e 01       	movw	r16, r28
     6c8:	0f 5e       	subi	r16, 0xEF	; 239
     6ca:	1f 4f       	sbci	r17, 0xFF	; 255
     6cc:	ce 01       	movw	r24, r28
     6ce:	05 96       	adiw	r24, 0x05	; 5
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     6d6:	c7 01       	movw	r24, r14
     6d8:	b8 01       	movw	r22, r16
     6da:	ae 01       	movw	r20, r28
     6dc:	47 5e       	subi	r20, 0xE7	; 231
     6de:	5f 4f       	sbci	r21, 0xFF	; 255
     6e0:	0e 94 ce 01 	call	0x39c	; 0x39c <_fpadd_parts>
     6e4:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__pack_f>
     6e8:	a0 96       	adiw	r28, 0x20	; 32
     6ea:	e6 e0       	ldi	r30, 0x06	; 6
     6ec:	0c 94 65 25 	jmp	0x4aca	; 0x4aca <__epilogue_restores__+0x18>

000006f0 <__mulsf3>:
     6f0:	a0 e2       	ldi	r26, 0x20	; 32
     6f2:	b0 e0       	ldi	r27, 0x00	; 0
     6f4:	ee e7       	ldi	r30, 0x7E	; 126
     6f6:	f3 e0       	ldi	r31, 0x03	; 3
     6f8:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__prologue_saves__>
     6fc:	69 83       	std	Y+1, r22	; 0x01
     6fe:	7a 83       	std	Y+2, r23	; 0x02
     700:	8b 83       	std	Y+3, r24	; 0x03
     702:	9c 83       	std	Y+4, r25	; 0x04
     704:	2d 83       	std	Y+5, r18	; 0x05
     706:	3e 83       	std	Y+6, r19	; 0x06
     708:	4f 83       	std	Y+7, r20	; 0x07
     70a:	58 87       	std	Y+8, r21	; 0x08
     70c:	ce 01       	movw	r24, r28
     70e:	01 96       	adiw	r24, 0x01	; 1
     710:	be 01       	movw	r22, r28
     712:	67 5f       	subi	r22, 0xF7	; 247
     714:	7f 4f       	sbci	r23, 0xFF	; 255
     716:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     71a:	ce 01       	movw	r24, r28
     71c:	05 96       	adiw	r24, 0x05	; 5
     71e:	be 01       	movw	r22, r28
     720:	6f 5e       	subi	r22, 0xEF	; 239
     722:	7f 4f       	sbci	r23, 0xFF	; 255
     724:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     728:	99 85       	ldd	r25, Y+9	; 0x09
     72a:	92 30       	cpi	r25, 0x02	; 2
     72c:	88 f0       	brcs	.+34     	; 0x750 <__mulsf3+0x60>
     72e:	89 89       	ldd	r24, Y+17	; 0x11
     730:	82 30       	cpi	r24, 0x02	; 2
     732:	c8 f0       	brcs	.+50     	; 0x766 <__mulsf3+0x76>
     734:	94 30       	cpi	r25, 0x04	; 4
     736:	19 f4       	brne	.+6      	; 0x73e <__mulsf3+0x4e>
     738:	82 30       	cpi	r24, 0x02	; 2
     73a:	51 f4       	brne	.+20     	; 0x750 <__mulsf3+0x60>
     73c:	04 c0       	rjmp	.+8      	; 0x746 <__mulsf3+0x56>
     73e:	84 30       	cpi	r24, 0x04	; 4
     740:	29 f4       	brne	.+10     	; 0x74c <__mulsf3+0x5c>
     742:	92 30       	cpi	r25, 0x02	; 2
     744:	81 f4       	brne	.+32     	; 0x766 <__mulsf3+0x76>
     746:	8d e9       	ldi	r24, 0x9D	; 157
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	c6 c0       	rjmp	.+396    	; 0x8d8 <__stack+0x79>
     74c:	92 30       	cpi	r25, 0x02	; 2
     74e:	49 f4       	brne	.+18     	; 0x762 <__mulsf3+0x72>
     750:	20 e0       	ldi	r18, 0x00	; 0
     752:	9a 85       	ldd	r25, Y+10	; 0x0a
     754:	8a 89       	ldd	r24, Y+18	; 0x12
     756:	98 13       	cpse	r25, r24
     758:	21 e0       	ldi	r18, 0x01	; 1
     75a:	2a 87       	std	Y+10, r18	; 0x0a
     75c:	ce 01       	movw	r24, r28
     75e:	09 96       	adiw	r24, 0x09	; 9
     760:	bb c0       	rjmp	.+374    	; 0x8d8 <__stack+0x79>
     762:	82 30       	cpi	r24, 0x02	; 2
     764:	49 f4       	brne	.+18     	; 0x778 <__mulsf3+0x88>
     766:	20 e0       	ldi	r18, 0x00	; 0
     768:	9a 85       	ldd	r25, Y+10	; 0x0a
     76a:	8a 89       	ldd	r24, Y+18	; 0x12
     76c:	98 13       	cpse	r25, r24
     76e:	21 e0       	ldi	r18, 0x01	; 1
     770:	2a 8b       	std	Y+18, r18	; 0x12
     772:	ce 01       	movw	r24, r28
     774:	41 96       	adiw	r24, 0x11	; 17
     776:	b0 c0       	rjmp	.+352    	; 0x8d8 <__stack+0x79>
     778:	2d 84       	ldd	r2, Y+13	; 0x0d
     77a:	3e 84       	ldd	r3, Y+14	; 0x0e
     77c:	4f 84       	ldd	r4, Y+15	; 0x0f
     77e:	58 88       	ldd	r5, Y+16	; 0x10
     780:	6d 88       	ldd	r6, Y+21	; 0x15
     782:	7e 88       	ldd	r7, Y+22	; 0x16
     784:	8f 88       	ldd	r8, Y+23	; 0x17
     786:	98 8c       	ldd	r9, Y+24	; 0x18
     788:	ee 24       	eor	r14, r14
     78a:	ff 24       	eor	r15, r15
     78c:	87 01       	movw	r16, r14
     78e:	aa 24       	eor	r10, r10
     790:	bb 24       	eor	r11, r11
     792:	65 01       	movw	r12, r10
     794:	40 e0       	ldi	r20, 0x00	; 0
     796:	50 e0       	ldi	r21, 0x00	; 0
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	e0 e0       	ldi	r30, 0x00	; 0
     79e:	f0 e0       	ldi	r31, 0x00	; 0
     7a0:	c1 01       	movw	r24, r2
     7a2:	81 70       	andi	r24, 0x01	; 1
     7a4:	90 70       	andi	r25, 0x00	; 0
     7a6:	89 2b       	or	r24, r25
     7a8:	e9 f0       	breq	.+58     	; 0x7e4 <__mulsf3+0xf4>
     7aa:	e6 0c       	add	r14, r6
     7ac:	f7 1c       	adc	r15, r7
     7ae:	08 1d       	adc	r16, r8
     7b0:	19 1d       	adc	r17, r9
     7b2:	9a 01       	movw	r18, r20
     7b4:	ab 01       	movw	r20, r22
     7b6:	2a 0d       	add	r18, r10
     7b8:	3b 1d       	adc	r19, r11
     7ba:	4c 1d       	adc	r20, r12
     7bc:	5d 1d       	adc	r21, r13
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	a0 e0       	ldi	r26, 0x00	; 0
     7c4:	b0 e0       	ldi	r27, 0x00	; 0
     7c6:	e6 14       	cp	r14, r6
     7c8:	f7 04       	cpc	r15, r7
     7ca:	08 05       	cpc	r16, r8
     7cc:	19 05       	cpc	r17, r9
     7ce:	20 f4       	brcc	.+8      	; 0x7d8 <__mulsf3+0xe8>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	a0 e0       	ldi	r26, 0x00	; 0
     7d6:	b0 e0       	ldi	r27, 0x00	; 0
     7d8:	ba 01       	movw	r22, r20
     7da:	a9 01       	movw	r20, r18
     7dc:	48 0f       	add	r20, r24
     7de:	59 1f       	adc	r21, r25
     7e0:	6a 1f       	adc	r22, r26
     7e2:	7b 1f       	adc	r23, r27
     7e4:	aa 0c       	add	r10, r10
     7e6:	bb 1c       	adc	r11, r11
     7e8:	cc 1c       	adc	r12, r12
     7ea:	dd 1c       	adc	r13, r13
     7ec:	97 fe       	sbrs	r9, 7
     7ee:	08 c0       	rjmp	.+16     	; 0x800 <__mulsf3+0x110>
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	a8 2a       	or	r10, r24
     7fa:	b9 2a       	or	r11, r25
     7fc:	ca 2a       	or	r12, r26
     7fe:	db 2a       	or	r13, r27
     800:	31 96       	adiw	r30, 0x01	; 1
     802:	e0 32       	cpi	r30, 0x20	; 32
     804:	f1 05       	cpc	r31, r1
     806:	49 f0       	breq	.+18     	; 0x81a <__mulsf3+0x12a>
     808:	66 0c       	add	r6, r6
     80a:	77 1c       	adc	r7, r7
     80c:	88 1c       	adc	r8, r8
     80e:	99 1c       	adc	r9, r9
     810:	56 94       	lsr	r5
     812:	47 94       	ror	r4
     814:	37 94       	ror	r3
     816:	27 94       	ror	r2
     818:	c3 cf       	rjmp	.-122    	; 0x7a0 <__mulsf3+0xb0>
     81a:	fa 85       	ldd	r31, Y+10	; 0x0a
     81c:	ea 89       	ldd	r30, Y+18	; 0x12
     81e:	2b 89       	ldd	r18, Y+19	; 0x13
     820:	3c 89       	ldd	r19, Y+20	; 0x14
     822:	8b 85       	ldd	r24, Y+11	; 0x0b
     824:	9c 85       	ldd	r25, Y+12	; 0x0c
     826:	28 0f       	add	r18, r24
     828:	39 1f       	adc	r19, r25
     82a:	2e 5f       	subi	r18, 0xFE	; 254
     82c:	3f 4f       	sbci	r19, 0xFF	; 255
     82e:	17 c0       	rjmp	.+46     	; 0x85e <__mulsf3+0x16e>
     830:	ca 01       	movw	r24, r20
     832:	81 70       	andi	r24, 0x01	; 1
     834:	90 70       	andi	r25, 0x00	; 0
     836:	89 2b       	or	r24, r25
     838:	61 f0       	breq	.+24     	; 0x852 <__mulsf3+0x162>
     83a:	16 95       	lsr	r17
     83c:	07 95       	ror	r16
     83e:	f7 94       	ror	r15
     840:	e7 94       	ror	r14
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	a0 e0       	ldi	r26, 0x00	; 0
     848:	b0 e8       	ldi	r27, 0x80	; 128
     84a:	e8 2a       	or	r14, r24
     84c:	f9 2a       	or	r15, r25
     84e:	0a 2b       	or	r16, r26
     850:	1b 2b       	or	r17, r27
     852:	76 95       	lsr	r23
     854:	67 95       	ror	r22
     856:	57 95       	ror	r21
     858:	47 95       	ror	r20
     85a:	2f 5f       	subi	r18, 0xFF	; 255
     85c:	3f 4f       	sbci	r19, 0xFF	; 255
     85e:	77 fd       	sbrc	r23, 7
     860:	e7 cf       	rjmp	.-50     	; 0x830 <__mulsf3+0x140>
     862:	0c c0       	rjmp	.+24     	; 0x87c <__stack+0x1d>
     864:	44 0f       	add	r20, r20
     866:	55 1f       	adc	r21, r21
     868:	66 1f       	adc	r22, r22
     86a:	77 1f       	adc	r23, r23
     86c:	17 fd       	sbrc	r17, 7
     86e:	41 60       	ori	r20, 0x01	; 1
     870:	ee 0c       	add	r14, r14
     872:	ff 1c       	adc	r15, r15
     874:	00 1f       	adc	r16, r16
     876:	11 1f       	adc	r17, r17
     878:	21 50       	subi	r18, 0x01	; 1
     87a:	30 40       	sbci	r19, 0x00	; 0
     87c:	40 30       	cpi	r20, 0x00	; 0
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	59 07       	cpc	r21, r25
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	69 07       	cpc	r22, r25
     886:	90 e4       	ldi	r25, 0x40	; 64
     888:	79 07       	cpc	r23, r25
     88a:	60 f3       	brcs	.-40     	; 0x864 <__stack+0x5>
     88c:	2b 8f       	std	Y+27, r18	; 0x1b
     88e:	3c 8f       	std	Y+28, r19	; 0x1c
     890:	db 01       	movw	r26, r22
     892:	ca 01       	movw	r24, r20
     894:	8f 77       	andi	r24, 0x7F	; 127
     896:	90 70       	andi	r25, 0x00	; 0
     898:	a0 70       	andi	r26, 0x00	; 0
     89a:	b0 70       	andi	r27, 0x00	; 0
     89c:	80 34       	cpi	r24, 0x40	; 64
     89e:	91 05       	cpc	r25, r1
     8a0:	a1 05       	cpc	r26, r1
     8a2:	b1 05       	cpc	r27, r1
     8a4:	61 f4       	brne	.+24     	; 0x8be <__stack+0x5f>
     8a6:	47 fd       	sbrc	r20, 7
     8a8:	0a c0       	rjmp	.+20     	; 0x8be <__stack+0x5f>
     8aa:	e1 14       	cp	r14, r1
     8ac:	f1 04       	cpc	r15, r1
     8ae:	01 05       	cpc	r16, r1
     8b0:	11 05       	cpc	r17, r1
     8b2:	29 f0       	breq	.+10     	; 0x8be <__stack+0x5f>
     8b4:	40 5c       	subi	r20, 0xC0	; 192
     8b6:	5f 4f       	sbci	r21, 0xFF	; 255
     8b8:	6f 4f       	sbci	r22, 0xFF	; 255
     8ba:	7f 4f       	sbci	r23, 0xFF	; 255
     8bc:	40 78       	andi	r20, 0x80	; 128
     8be:	1a 8e       	std	Y+26, r1	; 0x1a
     8c0:	fe 17       	cp	r31, r30
     8c2:	11 f0       	breq	.+4      	; 0x8c8 <__stack+0x69>
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	8a 8f       	std	Y+26, r24	; 0x1a
     8c8:	4d 8f       	std	Y+29, r20	; 0x1d
     8ca:	5e 8f       	std	Y+30, r21	; 0x1e
     8cc:	6f 8f       	std	Y+31, r22	; 0x1f
     8ce:	78 a3       	std	Y+32, r23	; 0x20
     8d0:	83 e0       	ldi	r24, 0x03	; 3
     8d2:	89 8f       	std	Y+25, r24	; 0x19
     8d4:	ce 01       	movw	r24, r28
     8d6:	49 96       	adiw	r24, 0x19	; 25
     8d8:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__pack_f>
     8dc:	a0 96       	adiw	r28, 0x20	; 32
     8de:	e2 e1       	ldi	r30, 0x12	; 18
     8e0:	0c 94 59 25 	jmp	0x4ab2	; 0x4ab2 <__epilogue_restores__>

000008e4 <__divsf3>:
     8e4:	a8 e1       	ldi	r26, 0x18	; 24
     8e6:	b0 e0       	ldi	r27, 0x00	; 0
     8e8:	e8 e7       	ldi	r30, 0x78	; 120
     8ea:	f4 e0       	ldi	r31, 0x04	; 4
     8ec:	0c 94 45 25 	jmp	0x4a8a	; 0x4a8a <__prologue_saves__+0x10>
     8f0:	69 83       	std	Y+1, r22	; 0x01
     8f2:	7a 83       	std	Y+2, r23	; 0x02
     8f4:	8b 83       	std	Y+3, r24	; 0x03
     8f6:	9c 83       	std	Y+4, r25	; 0x04
     8f8:	2d 83       	std	Y+5, r18	; 0x05
     8fa:	3e 83       	std	Y+6, r19	; 0x06
     8fc:	4f 83       	std	Y+7, r20	; 0x07
     8fe:	58 87       	std	Y+8, r21	; 0x08
     900:	b9 e0       	ldi	r27, 0x09	; 9
     902:	eb 2e       	mov	r14, r27
     904:	f1 2c       	mov	r15, r1
     906:	ec 0e       	add	r14, r28
     908:	fd 1e       	adc	r15, r29
     90a:	ce 01       	movw	r24, r28
     90c:	01 96       	adiw	r24, 0x01	; 1
     90e:	b7 01       	movw	r22, r14
     910:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     914:	8e 01       	movw	r16, r28
     916:	0f 5e       	subi	r16, 0xEF	; 239
     918:	1f 4f       	sbci	r17, 0xFF	; 255
     91a:	ce 01       	movw	r24, r28
     91c:	05 96       	adiw	r24, 0x05	; 5
     91e:	b8 01       	movw	r22, r16
     920:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     924:	29 85       	ldd	r18, Y+9	; 0x09
     926:	22 30       	cpi	r18, 0x02	; 2
     928:	08 f4       	brcc	.+2      	; 0x92c <__divsf3+0x48>
     92a:	7e c0       	rjmp	.+252    	; 0xa28 <__divsf3+0x144>
     92c:	39 89       	ldd	r19, Y+17	; 0x11
     92e:	32 30       	cpi	r19, 0x02	; 2
     930:	10 f4       	brcc	.+4      	; 0x936 <__divsf3+0x52>
     932:	b8 01       	movw	r22, r16
     934:	7c c0       	rjmp	.+248    	; 0xa2e <__divsf3+0x14a>
     936:	8a 85       	ldd	r24, Y+10	; 0x0a
     938:	9a 89       	ldd	r25, Y+18	; 0x12
     93a:	89 27       	eor	r24, r25
     93c:	8a 87       	std	Y+10, r24	; 0x0a
     93e:	24 30       	cpi	r18, 0x04	; 4
     940:	11 f0       	breq	.+4      	; 0x946 <__divsf3+0x62>
     942:	22 30       	cpi	r18, 0x02	; 2
     944:	31 f4       	brne	.+12     	; 0x952 <__divsf3+0x6e>
     946:	23 17       	cp	r18, r19
     948:	09 f0       	breq	.+2      	; 0x94c <__divsf3+0x68>
     94a:	6e c0       	rjmp	.+220    	; 0xa28 <__divsf3+0x144>
     94c:	6d e9       	ldi	r22, 0x9D	; 157
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	6e c0       	rjmp	.+220    	; 0xa2e <__divsf3+0x14a>
     952:	34 30       	cpi	r19, 0x04	; 4
     954:	39 f4       	brne	.+14     	; 0x964 <__divsf3+0x80>
     956:	1d 86       	std	Y+13, r1	; 0x0d
     958:	1e 86       	std	Y+14, r1	; 0x0e
     95a:	1f 86       	std	Y+15, r1	; 0x0f
     95c:	18 8a       	std	Y+16, r1	; 0x10
     95e:	1c 86       	std	Y+12, r1	; 0x0c
     960:	1b 86       	std	Y+11, r1	; 0x0b
     962:	04 c0       	rjmp	.+8      	; 0x96c <__divsf3+0x88>
     964:	32 30       	cpi	r19, 0x02	; 2
     966:	21 f4       	brne	.+8      	; 0x970 <__divsf3+0x8c>
     968:	84 e0       	ldi	r24, 0x04	; 4
     96a:	89 87       	std	Y+9, r24	; 0x09
     96c:	b7 01       	movw	r22, r14
     96e:	5f c0       	rjmp	.+190    	; 0xa2e <__divsf3+0x14a>
     970:	2b 85       	ldd	r18, Y+11	; 0x0b
     972:	3c 85       	ldd	r19, Y+12	; 0x0c
     974:	8b 89       	ldd	r24, Y+19	; 0x13
     976:	9c 89       	ldd	r25, Y+20	; 0x14
     978:	28 1b       	sub	r18, r24
     97a:	39 0b       	sbc	r19, r25
     97c:	3c 87       	std	Y+12, r19	; 0x0c
     97e:	2b 87       	std	Y+11, r18	; 0x0b
     980:	ed 84       	ldd	r14, Y+13	; 0x0d
     982:	fe 84       	ldd	r15, Y+14	; 0x0e
     984:	0f 85       	ldd	r16, Y+15	; 0x0f
     986:	18 89       	ldd	r17, Y+16	; 0x10
     988:	ad 88       	ldd	r10, Y+21	; 0x15
     98a:	be 88       	ldd	r11, Y+22	; 0x16
     98c:	cf 88       	ldd	r12, Y+23	; 0x17
     98e:	d8 8c       	ldd	r13, Y+24	; 0x18
     990:	ea 14       	cp	r14, r10
     992:	fb 04       	cpc	r15, r11
     994:	0c 05       	cpc	r16, r12
     996:	1d 05       	cpc	r17, r13
     998:	40 f4       	brcc	.+16     	; 0x9aa <__divsf3+0xc6>
     99a:	ee 0c       	add	r14, r14
     99c:	ff 1c       	adc	r15, r15
     99e:	00 1f       	adc	r16, r16
     9a0:	11 1f       	adc	r17, r17
     9a2:	21 50       	subi	r18, 0x01	; 1
     9a4:	30 40       	sbci	r19, 0x00	; 0
     9a6:	3c 87       	std	Y+12, r19	; 0x0c
     9a8:	2b 87       	std	Y+11, r18	; 0x0b
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	40 e0       	ldi	r20, 0x00	; 0
     9b0:	50 e0       	ldi	r21, 0x00	; 0
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	a0 e0       	ldi	r26, 0x00	; 0
     9b8:	b0 e4       	ldi	r27, 0x40	; 64
     9ba:	60 e0       	ldi	r22, 0x00	; 0
     9bc:	70 e0       	ldi	r23, 0x00	; 0
     9be:	ea 14       	cp	r14, r10
     9c0:	fb 04       	cpc	r15, r11
     9c2:	0c 05       	cpc	r16, r12
     9c4:	1d 05       	cpc	r17, r13
     9c6:	40 f0       	brcs	.+16     	; 0x9d8 <__divsf3+0xf4>
     9c8:	28 2b       	or	r18, r24
     9ca:	39 2b       	or	r19, r25
     9cc:	4a 2b       	or	r20, r26
     9ce:	5b 2b       	or	r21, r27
     9d0:	ea 18       	sub	r14, r10
     9d2:	fb 08       	sbc	r15, r11
     9d4:	0c 09       	sbc	r16, r12
     9d6:	1d 09       	sbc	r17, r13
     9d8:	b6 95       	lsr	r27
     9da:	a7 95       	ror	r26
     9dc:	97 95       	ror	r25
     9de:	87 95       	ror	r24
     9e0:	ee 0c       	add	r14, r14
     9e2:	ff 1c       	adc	r15, r15
     9e4:	00 1f       	adc	r16, r16
     9e6:	11 1f       	adc	r17, r17
     9e8:	6f 5f       	subi	r22, 0xFF	; 255
     9ea:	7f 4f       	sbci	r23, 0xFF	; 255
     9ec:	6f 31       	cpi	r22, 0x1F	; 31
     9ee:	71 05       	cpc	r23, r1
     9f0:	31 f7       	brne	.-52     	; 0x9be <__divsf3+0xda>
     9f2:	da 01       	movw	r26, r20
     9f4:	c9 01       	movw	r24, r18
     9f6:	8f 77       	andi	r24, 0x7F	; 127
     9f8:	90 70       	andi	r25, 0x00	; 0
     9fa:	a0 70       	andi	r26, 0x00	; 0
     9fc:	b0 70       	andi	r27, 0x00	; 0
     9fe:	80 34       	cpi	r24, 0x40	; 64
     a00:	91 05       	cpc	r25, r1
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	61 f4       	brne	.+24     	; 0xa20 <__divsf3+0x13c>
     a08:	27 fd       	sbrc	r18, 7
     a0a:	0a c0       	rjmp	.+20     	; 0xa20 <__divsf3+0x13c>
     a0c:	e1 14       	cp	r14, r1
     a0e:	f1 04       	cpc	r15, r1
     a10:	01 05       	cpc	r16, r1
     a12:	11 05       	cpc	r17, r1
     a14:	29 f0       	breq	.+10     	; 0xa20 <__divsf3+0x13c>
     a16:	20 5c       	subi	r18, 0xC0	; 192
     a18:	3f 4f       	sbci	r19, 0xFF	; 255
     a1a:	4f 4f       	sbci	r20, 0xFF	; 255
     a1c:	5f 4f       	sbci	r21, 0xFF	; 255
     a1e:	20 78       	andi	r18, 0x80	; 128
     a20:	2d 87       	std	Y+13, r18	; 0x0d
     a22:	3e 87       	std	Y+14, r19	; 0x0e
     a24:	4f 87       	std	Y+15, r20	; 0x0f
     a26:	58 8b       	std	Y+16, r21	; 0x10
     a28:	be 01       	movw	r22, r28
     a2a:	67 5f       	subi	r22, 0xF7	; 247
     a2c:	7f 4f       	sbci	r23, 0xFF	; 255
     a2e:	cb 01       	movw	r24, r22
     a30:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__pack_f>
     a34:	68 96       	adiw	r28, 0x18	; 24
     a36:	ea e0       	ldi	r30, 0x0A	; 10
     a38:	0c 94 61 25 	jmp	0x4ac2	; 0x4ac2 <__epilogue_restores__+0x10>

00000a3c <__gtsf2>:
     a3c:	a8 e1       	ldi	r26, 0x18	; 24
     a3e:	b0 e0       	ldi	r27, 0x00	; 0
     a40:	e4 e2       	ldi	r30, 0x24	; 36
     a42:	f5 e0       	ldi	r31, 0x05	; 5
     a44:	0c 94 49 25 	jmp	0x4a92	; 0x4a92 <__prologue_saves__+0x18>
     a48:	69 83       	std	Y+1, r22	; 0x01
     a4a:	7a 83       	std	Y+2, r23	; 0x02
     a4c:	8b 83       	std	Y+3, r24	; 0x03
     a4e:	9c 83       	std	Y+4, r25	; 0x04
     a50:	2d 83       	std	Y+5, r18	; 0x05
     a52:	3e 83       	std	Y+6, r19	; 0x06
     a54:	4f 83       	std	Y+7, r20	; 0x07
     a56:	58 87       	std	Y+8, r21	; 0x08
     a58:	89 e0       	ldi	r24, 0x09	; 9
     a5a:	e8 2e       	mov	r14, r24
     a5c:	f1 2c       	mov	r15, r1
     a5e:	ec 0e       	add	r14, r28
     a60:	fd 1e       	adc	r15, r29
     a62:	ce 01       	movw	r24, r28
     a64:	01 96       	adiw	r24, 0x01	; 1
     a66:	b7 01       	movw	r22, r14
     a68:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     a6c:	8e 01       	movw	r16, r28
     a6e:	0f 5e       	subi	r16, 0xEF	; 239
     a70:	1f 4f       	sbci	r17, 0xFF	; 255
     a72:	ce 01       	movw	r24, r28
     a74:	05 96       	adiw	r24, 0x05	; 5
     a76:	b8 01       	movw	r22, r16
     a78:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     a7c:	89 85       	ldd	r24, Y+9	; 0x09
     a7e:	82 30       	cpi	r24, 0x02	; 2
     a80:	40 f0       	brcs	.+16     	; 0xa92 <__gtsf2+0x56>
     a82:	89 89       	ldd	r24, Y+17	; 0x11
     a84:	82 30       	cpi	r24, 0x02	; 2
     a86:	28 f0       	brcs	.+10     	; 0xa92 <__gtsf2+0x56>
     a88:	c7 01       	movw	r24, r14
     a8a:	b8 01       	movw	r22, r16
     a8c:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__fpcmp_parts_f>
     a90:	01 c0       	rjmp	.+2      	; 0xa94 <__gtsf2+0x58>
     a92:	8f ef       	ldi	r24, 0xFF	; 255
     a94:	68 96       	adiw	r28, 0x18	; 24
     a96:	e6 e0       	ldi	r30, 0x06	; 6
     a98:	0c 94 65 25 	jmp	0x4aca	; 0x4aca <__epilogue_restores__+0x18>

00000a9c <__gesf2>:
     a9c:	a8 e1       	ldi	r26, 0x18	; 24
     a9e:	b0 e0       	ldi	r27, 0x00	; 0
     aa0:	e4 e5       	ldi	r30, 0x54	; 84
     aa2:	f5 e0       	ldi	r31, 0x05	; 5
     aa4:	0c 94 49 25 	jmp	0x4a92	; 0x4a92 <__prologue_saves__+0x18>
     aa8:	69 83       	std	Y+1, r22	; 0x01
     aaa:	7a 83       	std	Y+2, r23	; 0x02
     aac:	8b 83       	std	Y+3, r24	; 0x03
     aae:	9c 83       	std	Y+4, r25	; 0x04
     ab0:	2d 83       	std	Y+5, r18	; 0x05
     ab2:	3e 83       	std	Y+6, r19	; 0x06
     ab4:	4f 83       	std	Y+7, r20	; 0x07
     ab6:	58 87       	std	Y+8, r21	; 0x08
     ab8:	89 e0       	ldi	r24, 0x09	; 9
     aba:	e8 2e       	mov	r14, r24
     abc:	f1 2c       	mov	r15, r1
     abe:	ec 0e       	add	r14, r28
     ac0:	fd 1e       	adc	r15, r29
     ac2:	ce 01       	movw	r24, r28
     ac4:	01 96       	adiw	r24, 0x01	; 1
     ac6:	b7 01       	movw	r22, r14
     ac8:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     acc:	8e 01       	movw	r16, r28
     ace:	0f 5e       	subi	r16, 0xEF	; 239
     ad0:	1f 4f       	sbci	r17, 0xFF	; 255
     ad2:	ce 01       	movw	r24, r28
     ad4:	05 96       	adiw	r24, 0x05	; 5
     ad6:	b8 01       	movw	r22, r16
     ad8:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     adc:	89 85       	ldd	r24, Y+9	; 0x09
     ade:	82 30       	cpi	r24, 0x02	; 2
     ae0:	40 f0       	brcs	.+16     	; 0xaf2 <__gesf2+0x56>
     ae2:	89 89       	ldd	r24, Y+17	; 0x11
     ae4:	82 30       	cpi	r24, 0x02	; 2
     ae6:	28 f0       	brcs	.+10     	; 0xaf2 <__gesf2+0x56>
     ae8:	c7 01       	movw	r24, r14
     aea:	b8 01       	movw	r22, r16
     aec:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__fpcmp_parts_f>
     af0:	01 c0       	rjmp	.+2      	; 0xaf4 <__gesf2+0x58>
     af2:	8f ef       	ldi	r24, 0xFF	; 255
     af4:	68 96       	adiw	r28, 0x18	; 24
     af6:	e6 e0       	ldi	r30, 0x06	; 6
     af8:	0c 94 65 25 	jmp	0x4aca	; 0x4aca <__epilogue_restores__+0x18>

00000afc <__ltsf2>:
     afc:	a8 e1       	ldi	r26, 0x18	; 24
     afe:	b0 e0       	ldi	r27, 0x00	; 0
     b00:	e4 e8       	ldi	r30, 0x84	; 132
     b02:	f5 e0       	ldi	r31, 0x05	; 5
     b04:	0c 94 49 25 	jmp	0x4a92	; 0x4a92 <__prologue_saves__+0x18>
     b08:	69 83       	std	Y+1, r22	; 0x01
     b0a:	7a 83       	std	Y+2, r23	; 0x02
     b0c:	8b 83       	std	Y+3, r24	; 0x03
     b0e:	9c 83       	std	Y+4, r25	; 0x04
     b10:	2d 83       	std	Y+5, r18	; 0x05
     b12:	3e 83       	std	Y+6, r19	; 0x06
     b14:	4f 83       	std	Y+7, r20	; 0x07
     b16:	58 87       	std	Y+8, r21	; 0x08
     b18:	89 e0       	ldi	r24, 0x09	; 9
     b1a:	e8 2e       	mov	r14, r24
     b1c:	f1 2c       	mov	r15, r1
     b1e:	ec 0e       	add	r14, r28
     b20:	fd 1e       	adc	r15, r29
     b22:	ce 01       	movw	r24, r28
     b24:	01 96       	adiw	r24, 0x01	; 1
     b26:	b7 01       	movw	r22, r14
     b28:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     b2c:	8e 01       	movw	r16, r28
     b2e:	0f 5e       	subi	r16, 0xEF	; 239
     b30:	1f 4f       	sbci	r17, 0xFF	; 255
     b32:	ce 01       	movw	r24, r28
     b34:	05 96       	adiw	r24, 0x05	; 5
     b36:	b8 01       	movw	r22, r16
     b38:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     b3c:	89 85       	ldd	r24, Y+9	; 0x09
     b3e:	82 30       	cpi	r24, 0x02	; 2
     b40:	40 f0       	brcs	.+16     	; 0xb52 <__ltsf2+0x56>
     b42:	89 89       	ldd	r24, Y+17	; 0x11
     b44:	82 30       	cpi	r24, 0x02	; 2
     b46:	28 f0       	brcs	.+10     	; 0xb52 <__ltsf2+0x56>
     b48:	c7 01       	movw	r24, r14
     b4a:	b8 01       	movw	r22, r16
     b4c:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__fpcmp_parts_f>
     b50:	01 c0       	rjmp	.+2      	; 0xb54 <__ltsf2+0x58>
     b52:	81 e0       	ldi	r24, 0x01	; 1
     b54:	68 96       	adiw	r28, 0x18	; 24
     b56:	e6 e0       	ldi	r30, 0x06	; 6
     b58:	0c 94 65 25 	jmp	0x4aca	; 0x4aca <__epilogue_restores__+0x18>

00000b5c <__floatsisf>:
     b5c:	a8 e0       	ldi	r26, 0x08	; 8
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	e4 eb       	ldi	r30, 0xB4	; 180
     b62:	f5 e0       	ldi	r31, 0x05	; 5
     b64:	0c 94 46 25 	jmp	0x4a8c	; 0x4a8c <__prologue_saves__+0x12>
     b68:	9b 01       	movw	r18, r22
     b6a:	ac 01       	movw	r20, r24
     b6c:	83 e0       	ldi	r24, 0x03	; 3
     b6e:	89 83       	std	Y+1, r24	; 0x01
     b70:	da 01       	movw	r26, r20
     b72:	c9 01       	movw	r24, r18
     b74:	88 27       	eor	r24, r24
     b76:	b7 fd       	sbrc	r27, 7
     b78:	83 95       	inc	r24
     b7a:	99 27       	eor	r25, r25
     b7c:	aa 27       	eor	r26, r26
     b7e:	bb 27       	eor	r27, r27
     b80:	b8 2e       	mov	r11, r24
     b82:	21 15       	cp	r18, r1
     b84:	31 05       	cpc	r19, r1
     b86:	41 05       	cpc	r20, r1
     b88:	51 05       	cpc	r21, r1
     b8a:	19 f4       	brne	.+6      	; 0xb92 <__floatsisf+0x36>
     b8c:	82 e0       	ldi	r24, 0x02	; 2
     b8e:	89 83       	std	Y+1, r24	; 0x01
     b90:	3a c0       	rjmp	.+116    	; 0xc06 <__floatsisf+0xaa>
     b92:	88 23       	and	r24, r24
     b94:	a9 f0       	breq	.+42     	; 0xbc0 <__floatsisf+0x64>
     b96:	20 30       	cpi	r18, 0x00	; 0
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	38 07       	cpc	r19, r24
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	48 07       	cpc	r20, r24
     ba0:	80 e8       	ldi	r24, 0x80	; 128
     ba2:	58 07       	cpc	r21, r24
     ba4:	29 f4       	brne	.+10     	; 0xbb0 <__floatsisf+0x54>
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	9f ec       	ldi	r25, 0xCF	; 207
     bae:	30 c0       	rjmp	.+96     	; 0xc10 <__floatsisf+0xb4>
     bb0:	ee 24       	eor	r14, r14
     bb2:	ff 24       	eor	r15, r15
     bb4:	87 01       	movw	r16, r14
     bb6:	e2 1a       	sub	r14, r18
     bb8:	f3 0a       	sbc	r15, r19
     bba:	04 0b       	sbc	r16, r20
     bbc:	15 0b       	sbc	r17, r21
     bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <__floatsisf+0x68>
     bc0:	79 01       	movw	r14, r18
     bc2:	8a 01       	movw	r16, r20
     bc4:	8e e1       	ldi	r24, 0x1E	; 30
     bc6:	c8 2e       	mov	r12, r24
     bc8:	d1 2c       	mov	r13, r1
     bca:	dc 82       	std	Y+4, r13	; 0x04
     bcc:	cb 82       	std	Y+3, r12	; 0x03
     bce:	ed 82       	std	Y+5, r14	; 0x05
     bd0:	fe 82       	std	Y+6, r15	; 0x06
     bd2:	0f 83       	std	Y+7, r16	; 0x07
     bd4:	18 87       	std	Y+8, r17	; 0x08
     bd6:	c8 01       	movw	r24, r16
     bd8:	b7 01       	movw	r22, r14
     bda:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__clzsi2>
     bde:	01 97       	sbiw	r24, 0x01	; 1
     be0:	18 16       	cp	r1, r24
     be2:	19 06       	cpc	r1, r25
     be4:	84 f4       	brge	.+32     	; 0xc06 <__floatsisf+0xaa>
     be6:	08 2e       	mov	r0, r24
     be8:	04 c0       	rjmp	.+8      	; 0xbf2 <__floatsisf+0x96>
     bea:	ee 0c       	add	r14, r14
     bec:	ff 1c       	adc	r15, r15
     bee:	00 1f       	adc	r16, r16
     bf0:	11 1f       	adc	r17, r17
     bf2:	0a 94       	dec	r0
     bf4:	d2 f7       	brpl	.-12     	; 0xbea <__floatsisf+0x8e>
     bf6:	ed 82       	std	Y+5, r14	; 0x05
     bf8:	fe 82       	std	Y+6, r15	; 0x06
     bfa:	0f 83       	std	Y+7, r16	; 0x07
     bfc:	18 87       	std	Y+8, r17	; 0x08
     bfe:	c8 1a       	sub	r12, r24
     c00:	d9 0a       	sbc	r13, r25
     c02:	dc 82       	std	Y+4, r13	; 0x04
     c04:	cb 82       	std	Y+3, r12	; 0x03
     c06:	ba 82       	std	Y+2, r11	; 0x02
     c08:	ce 01       	movw	r24, r28
     c0a:	01 96       	adiw	r24, 0x01	; 1
     c0c:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__pack_f>
     c10:	28 96       	adiw	r28, 0x08	; 8
     c12:	e9 e0       	ldi	r30, 0x09	; 9
     c14:	0c 94 62 25 	jmp	0x4ac4	; 0x4ac4 <__epilogue_restores__+0x12>

00000c18 <__fixsfsi>:
     c18:	ac e0       	ldi	r26, 0x0C	; 12
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e2 e1       	ldi	r30, 0x12	; 18
     c1e:	f6 e0       	ldi	r31, 0x06	; 6
     c20:	0c 94 4d 25 	jmp	0x4a9a	; 0x4a9a <__prologue_saves__+0x20>
     c24:	69 83       	std	Y+1, r22	; 0x01
     c26:	7a 83       	std	Y+2, r23	; 0x02
     c28:	8b 83       	std	Y+3, r24	; 0x03
     c2a:	9c 83       	std	Y+4, r25	; 0x04
     c2c:	ce 01       	movw	r24, r28
     c2e:	01 96       	adiw	r24, 0x01	; 1
     c30:	be 01       	movw	r22, r28
     c32:	6b 5f       	subi	r22, 0xFB	; 251
     c34:	7f 4f       	sbci	r23, 0xFF	; 255
     c36:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__unpack_f>
     c3a:	8d 81       	ldd	r24, Y+5	; 0x05
     c3c:	82 30       	cpi	r24, 0x02	; 2
     c3e:	61 f1       	breq	.+88     	; 0xc98 <__fixsfsi+0x80>
     c40:	82 30       	cpi	r24, 0x02	; 2
     c42:	50 f1       	brcs	.+84     	; 0xc98 <__fixsfsi+0x80>
     c44:	84 30       	cpi	r24, 0x04	; 4
     c46:	21 f4       	brne	.+8      	; 0xc50 <__fixsfsi+0x38>
     c48:	8e 81       	ldd	r24, Y+6	; 0x06
     c4a:	88 23       	and	r24, r24
     c4c:	51 f1       	breq	.+84     	; 0xca2 <__fixsfsi+0x8a>
     c4e:	2e c0       	rjmp	.+92     	; 0xcac <__fixsfsi+0x94>
     c50:	2f 81       	ldd	r18, Y+7	; 0x07
     c52:	38 85       	ldd	r19, Y+8	; 0x08
     c54:	37 fd       	sbrc	r19, 7
     c56:	20 c0       	rjmp	.+64     	; 0xc98 <__fixsfsi+0x80>
     c58:	6e 81       	ldd	r22, Y+6	; 0x06
     c5a:	2f 31       	cpi	r18, 0x1F	; 31
     c5c:	31 05       	cpc	r19, r1
     c5e:	1c f0       	brlt	.+6      	; 0xc66 <__fixsfsi+0x4e>
     c60:	66 23       	and	r22, r22
     c62:	f9 f0       	breq	.+62     	; 0xca2 <__fixsfsi+0x8a>
     c64:	23 c0       	rjmp	.+70     	; 0xcac <__fixsfsi+0x94>
     c66:	8e e1       	ldi	r24, 0x1E	; 30
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	82 1b       	sub	r24, r18
     c6c:	93 0b       	sbc	r25, r19
     c6e:	29 85       	ldd	r18, Y+9	; 0x09
     c70:	3a 85       	ldd	r19, Y+10	; 0x0a
     c72:	4b 85       	ldd	r20, Y+11	; 0x0b
     c74:	5c 85       	ldd	r21, Y+12	; 0x0c
     c76:	04 c0       	rjmp	.+8      	; 0xc80 <__fixsfsi+0x68>
     c78:	56 95       	lsr	r21
     c7a:	47 95       	ror	r20
     c7c:	37 95       	ror	r19
     c7e:	27 95       	ror	r18
     c80:	8a 95       	dec	r24
     c82:	d2 f7       	brpl	.-12     	; 0xc78 <__fixsfsi+0x60>
     c84:	66 23       	and	r22, r22
     c86:	b1 f0       	breq	.+44     	; 0xcb4 <__fixsfsi+0x9c>
     c88:	50 95       	com	r21
     c8a:	40 95       	com	r20
     c8c:	30 95       	com	r19
     c8e:	21 95       	neg	r18
     c90:	3f 4f       	sbci	r19, 0xFF	; 255
     c92:	4f 4f       	sbci	r20, 0xFF	; 255
     c94:	5f 4f       	sbci	r21, 0xFF	; 255
     c96:	0e c0       	rjmp	.+28     	; 0xcb4 <__fixsfsi+0x9c>
     c98:	20 e0       	ldi	r18, 0x00	; 0
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	50 e0       	ldi	r21, 0x00	; 0
     ca0:	09 c0       	rjmp	.+18     	; 0xcb4 <__fixsfsi+0x9c>
     ca2:	2f ef       	ldi	r18, 0xFF	; 255
     ca4:	3f ef       	ldi	r19, 0xFF	; 255
     ca6:	4f ef       	ldi	r20, 0xFF	; 255
     ca8:	5f e7       	ldi	r21, 0x7F	; 127
     caa:	04 c0       	rjmp	.+8      	; 0xcb4 <__fixsfsi+0x9c>
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	40 e0       	ldi	r20, 0x00	; 0
     cb2:	50 e8       	ldi	r21, 0x80	; 128
     cb4:	b9 01       	movw	r22, r18
     cb6:	ca 01       	movw	r24, r20
     cb8:	2c 96       	adiw	r28, 0x0c	; 12
     cba:	e2 e0       	ldi	r30, 0x02	; 2
     cbc:	0c 94 69 25 	jmp	0x4ad2	; 0x4ad2 <__epilogue_restores__+0x20>

00000cc0 <__floatunsisf>:
     cc0:	a8 e0       	ldi	r26, 0x08	; 8
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	e6 e6       	ldi	r30, 0x66	; 102
     cc6:	f6 e0       	ldi	r31, 0x06	; 6
     cc8:	0c 94 45 25 	jmp	0x4a8a	; 0x4a8a <__prologue_saves__+0x10>
     ccc:	7b 01       	movw	r14, r22
     cce:	8c 01       	movw	r16, r24
     cd0:	61 15       	cp	r22, r1
     cd2:	71 05       	cpc	r23, r1
     cd4:	81 05       	cpc	r24, r1
     cd6:	91 05       	cpc	r25, r1
     cd8:	19 f4       	brne	.+6      	; 0xce0 <__floatunsisf+0x20>
     cda:	82 e0       	ldi	r24, 0x02	; 2
     cdc:	89 83       	std	Y+1, r24	; 0x01
     cde:	60 c0       	rjmp	.+192    	; 0xda0 <__floatunsisf+0xe0>
     ce0:	83 e0       	ldi	r24, 0x03	; 3
     ce2:	89 83       	std	Y+1, r24	; 0x01
     ce4:	8e e1       	ldi	r24, 0x1E	; 30
     ce6:	c8 2e       	mov	r12, r24
     ce8:	d1 2c       	mov	r13, r1
     cea:	dc 82       	std	Y+4, r13	; 0x04
     cec:	cb 82       	std	Y+3, r12	; 0x03
     cee:	ed 82       	std	Y+5, r14	; 0x05
     cf0:	fe 82       	std	Y+6, r15	; 0x06
     cf2:	0f 83       	std	Y+7, r16	; 0x07
     cf4:	18 87       	std	Y+8, r17	; 0x08
     cf6:	c8 01       	movw	r24, r16
     cf8:	b7 01       	movw	r22, r14
     cfa:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__clzsi2>
     cfe:	fc 01       	movw	r30, r24
     d00:	31 97       	sbiw	r30, 0x01	; 1
     d02:	f7 ff       	sbrs	r31, 7
     d04:	3b c0       	rjmp	.+118    	; 0xd7c <__floatunsisf+0xbc>
     d06:	22 27       	eor	r18, r18
     d08:	33 27       	eor	r19, r19
     d0a:	2e 1b       	sub	r18, r30
     d0c:	3f 0b       	sbc	r19, r31
     d0e:	57 01       	movw	r10, r14
     d10:	68 01       	movw	r12, r16
     d12:	02 2e       	mov	r0, r18
     d14:	04 c0       	rjmp	.+8      	; 0xd1e <__floatunsisf+0x5e>
     d16:	d6 94       	lsr	r13
     d18:	c7 94       	ror	r12
     d1a:	b7 94       	ror	r11
     d1c:	a7 94       	ror	r10
     d1e:	0a 94       	dec	r0
     d20:	d2 f7       	brpl	.-12     	; 0xd16 <__floatunsisf+0x56>
     d22:	40 e0       	ldi	r20, 0x00	; 0
     d24:	50 e0       	ldi	r21, 0x00	; 0
     d26:	60 e0       	ldi	r22, 0x00	; 0
     d28:	70 e0       	ldi	r23, 0x00	; 0
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	a0 e0       	ldi	r26, 0x00	; 0
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	04 c0       	rjmp	.+8      	; 0xd3c <__floatunsisf+0x7c>
     d34:	88 0f       	add	r24, r24
     d36:	99 1f       	adc	r25, r25
     d38:	aa 1f       	adc	r26, r26
     d3a:	bb 1f       	adc	r27, r27
     d3c:	2a 95       	dec	r18
     d3e:	d2 f7       	brpl	.-12     	; 0xd34 <__floatunsisf+0x74>
     d40:	01 97       	sbiw	r24, 0x01	; 1
     d42:	a1 09       	sbc	r26, r1
     d44:	b1 09       	sbc	r27, r1
     d46:	8e 21       	and	r24, r14
     d48:	9f 21       	and	r25, r15
     d4a:	a0 23       	and	r26, r16
     d4c:	b1 23       	and	r27, r17
     d4e:	00 97       	sbiw	r24, 0x00	; 0
     d50:	a1 05       	cpc	r26, r1
     d52:	b1 05       	cpc	r27, r1
     d54:	21 f0       	breq	.+8      	; 0xd5e <__floatunsisf+0x9e>
     d56:	41 e0       	ldi	r20, 0x01	; 1
     d58:	50 e0       	ldi	r21, 0x00	; 0
     d5a:	60 e0       	ldi	r22, 0x00	; 0
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	4a 29       	or	r20, r10
     d60:	5b 29       	or	r21, r11
     d62:	6c 29       	or	r22, r12
     d64:	7d 29       	or	r23, r13
     d66:	4d 83       	std	Y+5, r20	; 0x05
     d68:	5e 83       	std	Y+6, r21	; 0x06
     d6a:	6f 83       	std	Y+7, r22	; 0x07
     d6c:	78 87       	std	Y+8, r23	; 0x08
     d6e:	8e e1       	ldi	r24, 0x1E	; 30
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	8e 1b       	sub	r24, r30
     d74:	9f 0b       	sbc	r25, r31
     d76:	9c 83       	std	Y+4, r25	; 0x04
     d78:	8b 83       	std	Y+3, r24	; 0x03
     d7a:	12 c0       	rjmp	.+36     	; 0xda0 <__floatunsisf+0xe0>
     d7c:	30 97       	sbiw	r30, 0x00	; 0
     d7e:	81 f0       	breq	.+32     	; 0xda0 <__floatunsisf+0xe0>
     d80:	0e 2e       	mov	r0, r30
     d82:	04 c0       	rjmp	.+8      	; 0xd8c <__floatunsisf+0xcc>
     d84:	ee 0c       	add	r14, r14
     d86:	ff 1c       	adc	r15, r15
     d88:	00 1f       	adc	r16, r16
     d8a:	11 1f       	adc	r17, r17
     d8c:	0a 94       	dec	r0
     d8e:	d2 f7       	brpl	.-12     	; 0xd84 <__floatunsisf+0xc4>
     d90:	ed 82       	std	Y+5, r14	; 0x05
     d92:	fe 82       	std	Y+6, r15	; 0x06
     d94:	0f 83       	std	Y+7, r16	; 0x07
     d96:	18 87       	std	Y+8, r17	; 0x08
     d98:	ce 1a       	sub	r12, r30
     d9a:	df 0a       	sbc	r13, r31
     d9c:	dc 82       	std	Y+4, r13	; 0x04
     d9e:	cb 82       	std	Y+3, r12	; 0x03
     da0:	1a 82       	std	Y+2, r1	; 0x02
     da2:	ce 01       	movw	r24, r28
     da4:	01 96       	adiw	r24, 0x01	; 1
     da6:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__pack_f>
     daa:	28 96       	adiw	r28, 0x08	; 8
     dac:	ea e0       	ldi	r30, 0x0A	; 10
     dae:	0c 94 61 25 	jmp	0x4ac2	; 0x4ac2 <__epilogue_restores__+0x10>

00000db2 <__lshrdi3>:
     db2:	ef 92       	push	r14
     db4:	ff 92       	push	r15
     db6:	0f 93       	push	r16
     db8:	df 93       	push	r29
     dba:	cf 93       	push	r28
     dbc:	cd b7       	in	r28, 0x3d	; 61
     dbe:	de b7       	in	r29, 0x3e	; 62
     dc0:	60 97       	sbiw	r28, 0x10	; 16
     dc2:	0f b6       	in	r0, 0x3f	; 63
     dc4:	f8 94       	cli
     dc6:	de bf       	out	0x3e, r29	; 62
     dc8:	0f be       	out	0x3f, r0	; 63
     dca:	cd bf       	out	0x3d, r28	; 61
     dcc:	a8 2f       	mov	r26, r24
     dce:	00 23       	and	r16, r16
     dd0:	09 f4       	brne	.+2      	; 0xdd4 <__lshrdi3+0x22>
     dd2:	61 c0       	rjmp	.+194    	; 0xe96 <__lshrdi3+0xe4>
     dd4:	7e 01       	movw	r14, r28
     dd6:	08 94       	sec
     dd8:	e1 1c       	adc	r14, r1
     dda:	f1 1c       	adc	r15, r1
     ddc:	88 e0       	ldi	r24, 0x08	; 8
     dde:	f7 01       	movw	r30, r14
     de0:	11 92       	st	Z+, r1
     de2:	8a 95       	dec	r24
     de4:	e9 f7       	brne	.-6      	; 0xde0 <__lshrdi3+0x2e>
     de6:	29 83       	std	Y+1, r18	; 0x01
     de8:	3a 83       	std	Y+2, r19	; 0x02
     dea:	4b 83       	std	Y+3, r20	; 0x03
     dec:	5c 83       	std	Y+4, r21	; 0x04
     dee:	6d 83       	std	Y+5, r22	; 0x05
     df0:	7e 83       	std	Y+6, r23	; 0x06
     df2:	af 83       	std	Y+7, r26	; 0x07
     df4:	98 87       	std	Y+8, r25	; 0x08
     df6:	80 e2       	ldi	r24, 0x20	; 32
     df8:	80 1b       	sub	r24, r16
     dfa:	e8 2f       	mov	r30, r24
     dfc:	ff 27       	eor	r31, r31
     dfe:	e7 fd       	sbrc	r30, 7
     e00:	f0 95       	com	r31
     e02:	4d 81       	ldd	r20, Y+5	; 0x05
     e04:	5e 81       	ldd	r21, Y+6	; 0x06
     e06:	6f 81       	ldd	r22, Y+7	; 0x07
     e08:	78 85       	ldd	r23, Y+8	; 0x08
     e0a:	18 16       	cp	r1, r24
     e0c:	84 f0       	brlt	.+32     	; 0xe2e <__lshrdi3+0x7c>
     e0e:	1d 86       	std	Y+13, r1	; 0x0d
     e10:	1e 86       	std	Y+14, r1	; 0x0e
     e12:	1f 86       	std	Y+15, r1	; 0x0f
     e14:	18 8a       	std	Y+16, r1	; 0x10
     e16:	88 27       	eor	r24, r24
     e18:	99 27       	eor	r25, r25
     e1a:	8e 1b       	sub	r24, r30
     e1c:	9f 0b       	sbc	r25, r31
     e1e:	04 c0       	rjmp	.+8      	; 0xe28 <__lshrdi3+0x76>
     e20:	76 95       	lsr	r23
     e22:	67 95       	ror	r22
     e24:	57 95       	ror	r21
     e26:	47 95       	ror	r20
     e28:	8a 95       	dec	r24
     e2a:	d2 f7       	brpl	.-12     	; 0xe20 <__lshrdi3+0x6e>
     e2c:	28 c0       	rjmp	.+80     	; 0xe7e <__lshrdi3+0xcc>
     e2e:	20 2f       	mov	r18, r16
     e30:	33 27       	eor	r19, r19
     e32:	27 fd       	sbrc	r18, 7
     e34:	30 95       	com	r19
     e36:	db 01       	movw	r26, r22
     e38:	ca 01       	movw	r24, r20
     e3a:	02 2e       	mov	r0, r18
     e3c:	04 c0       	rjmp	.+8      	; 0xe46 <__lshrdi3+0x94>
     e3e:	b6 95       	lsr	r27
     e40:	a7 95       	ror	r26
     e42:	97 95       	ror	r25
     e44:	87 95       	ror	r24
     e46:	0a 94       	dec	r0
     e48:	d2 f7       	brpl	.-12     	; 0xe3e <__lshrdi3+0x8c>
     e4a:	8d 87       	std	Y+13, r24	; 0x0d
     e4c:	9e 87       	std	Y+14, r25	; 0x0e
     e4e:	af 87       	std	Y+15, r26	; 0x0f
     e50:	b8 8b       	std	Y+16, r27	; 0x10
     e52:	04 c0       	rjmp	.+8      	; 0xe5c <__lshrdi3+0xaa>
     e54:	44 0f       	add	r20, r20
     e56:	55 1f       	adc	r21, r21
     e58:	66 1f       	adc	r22, r22
     e5a:	77 1f       	adc	r23, r23
     e5c:	ea 95       	dec	r30
     e5e:	d2 f7       	brpl	.-12     	; 0xe54 <__lshrdi3+0xa2>
     e60:	89 81       	ldd	r24, Y+1	; 0x01
     e62:	9a 81       	ldd	r25, Y+2	; 0x02
     e64:	ab 81       	ldd	r26, Y+3	; 0x03
     e66:	bc 81       	ldd	r27, Y+4	; 0x04
     e68:	04 c0       	rjmp	.+8      	; 0xe72 <__lshrdi3+0xc0>
     e6a:	b6 95       	lsr	r27
     e6c:	a7 95       	ror	r26
     e6e:	97 95       	ror	r25
     e70:	87 95       	ror	r24
     e72:	2a 95       	dec	r18
     e74:	d2 f7       	brpl	.-12     	; 0xe6a <__lshrdi3+0xb8>
     e76:	48 2b       	or	r20, r24
     e78:	59 2b       	or	r21, r25
     e7a:	6a 2b       	or	r22, r26
     e7c:	7b 2b       	or	r23, r27
     e7e:	49 87       	std	Y+9, r20	; 0x09
     e80:	5a 87       	std	Y+10, r21	; 0x0a
     e82:	6b 87       	std	Y+11, r22	; 0x0b
     e84:	7c 87       	std	Y+12, r23	; 0x0c
     e86:	29 85       	ldd	r18, Y+9	; 0x09
     e88:	3a 85       	ldd	r19, Y+10	; 0x0a
     e8a:	4b 85       	ldd	r20, Y+11	; 0x0b
     e8c:	5c 85       	ldd	r21, Y+12	; 0x0c
     e8e:	6d 85       	ldd	r22, Y+13	; 0x0d
     e90:	7e 85       	ldd	r23, Y+14	; 0x0e
     e92:	af 85       	ldd	r26, Y+15	; 0x0f
     e94:	98 89       	ldd	r25, Y+16	; 0x10
     e96:	8a 2f       	mov	r24, r26
     e98:	60 96       	adiw	r28, 0x10	; 16
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	f8 94       	cli
     e9e:	de bf       	out	0x3e, r29	; 62
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	cd bf       	out	0x3d, r28	; 61
     ea4:	cf 91       	pop	r28
     ea6:	df 91       	pop	r29
     ea8:	0f 91       	pop	r16
     eaa:	ff 90       	pop	r15
     eac:	ef 90       	pop	r14
     eae:	08 95       	ret

00000eb0 <__clzsi2>:
     eb0:	ef 92       	push	r14
     eb2:	ff 92       	push	r15
     eb4:	0f 93       	push	r16
     eb6:	1f 93       	push	r17
     eb8:	7b 01       	movw	r14, r22
     eba:	8c 01       	movw	r16, r24
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	e8 16       	cp	r14, r24
     ec0:	80 e0       	ldi	r24, 0x00	; 0
     ec2:	f8 06       	cpc	r15, r24
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	08 07       	cpc	r16, r24
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	18 07       	cpc	r17, r24
     ecc:	88 f4       	brcc	.+34     	; 0xef0 <__clzsi2+0x40>
     ece:	8f ef       	ldi	r24, 0xFF	; 255
     ed0:	e8 16       	cp	r14, r24
     ed2:	f1 04       	cpc	r15, r1
     ed4:	01 05       	cpc	r16, r1
     ed6:	11 05       	cpc	r17, r1
     ed8:	31 f0       	breq	.+12     	; 0xee6 <__clzsi2+0x36>
     eda:	28 f0       	brcs	.+10     	; 0xee6 <__clzsi2+0x36>
     edc:	88 e0       	ldi	r24, 0x08	; 8
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	a0 e0       	ldi	r26, 0x00	; 0
     ee2:	b0 e0       	ldi	r27, 0x00	; 0
     ee4:	17 c0       	rjmp	.+46     	; 0xf14 <__clzsi2+0x64>
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	a0 e0       	ldi	r26, 0x00	; 0
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	12 c0       	rjmp	.+36     	; 0xf14 <__clzsi2+0x64>
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	e8 16       	cp	r14, r24
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	f8 06       	cpc	r15, r24
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	08 07       	cpc	r16, r24
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	18 07       	cpc	r17, r24
     f00:	28 f0       	brcs	.+10     	; 0xf0c <__clzsi2+0x5c>
     f02:	88 e1       	ldi	r24, 0x18	; 24
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	a0 e0       	ldi	r26, 0x00	; 0
     f08:	b0 e0       	ldi	r27, 0x00	; 0
     f0a:	04 c0       	rjmp	.+8      	; 0xf14 <__clzsi2+0x64>
     f0c:	80 e1       	ldi	r24, 0x10	; 16
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	a0 e0       	ldi	r26, 0x00	; 0
     f12:	b0 e0       	ldi	r27, 0x00	; 0
     f14:	20 e2       	ldi	r18, 0x20	; 32
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	40 e0       	ldi	r20, 0x00	; 0
     f1a:	50 e0       	ldi	r21, 0x00	; 0
     f1c:	28 1b       	sub	r18, r24
     f1e:	39 0b       	sbc	r19, r25
     f20:	4a 0b       	sbc	r20, r26
     f22:	5b 0b       	sbc	r21, r27
     f24:	04 c0       	rjmp	.+8      	; 0xf2e <__clzsi2+0x7e>
     f26:	16 95       	lsr	r17
     f28:	07 95       	ror	r16
     f2a:	f7 94       	ror	r15
     f2c:	e7 94       	ror	r14
     f2e:	8a 95       	dec	r24
     f30:	d2 f7       	brpl	.-12     	; 0xf26 <__clzsi2+0x76>
     f32:	f7 01       	movw	r30, r14
     f34:	eb 55       	subi	r30, 0x5B	; 91
     f36:	ff 4f       	sbci	r31, 0xFF	; 255
     f38:	80 81       	ld	r24, Z
     f3a:	28 1b       	sub	r18, r24
     f3c:	31 09       	sbc	r19, r1
     f3e:	41 09       	sbc	r20, r1
     f40:	51 09       	sbc	r21, r1
     f42:	c9 01       	movw	r24, r18
     f44:	1f 91       	pop	r17
     f46:	0f 91       	pop	r16
     f48:	ff 90       	pop	r15
     f4a:	ef 90       	pop	r14
     f4c:	08 95       	ret

00000f4e <__pack_f>:
     f4e:	df 92       	push	r13
     f50:	ef 92       	push	r14
     f52:	ff 92       	push	r15
     f54:	0f 93       	push	r16
     f56:	1f 93       	push	r17
     f58:	fc 01       	movw	r30, r24
     f5a:	e4 80       	ldd	r14, Z+4	; 0x04
     f5c:	f5 80       	ldd	r15, Z+5	; 0x05
     f5e:	06 81       	ldd	r16, Z+6	; 0x06
     f60:	17 81       	ldd	r17, Z+7	; 0x07
     f62:	d1 80       	ldd	r13, Z+1	; 0x01
     f64:	80 81       	ld	r24, Z
     f66:	82 30       	cpi	r24, 0x02	; 2
     f68:	48 f4       	brcc	.+18     	; 0xf7c <__pack_f+0x2e>
     f6a:	80 e0       	ldi	r24, 0x00	; 0
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	a0 e1       	ldi	r26, 0x10	; 16
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	e8 2a       	or	r14, r24
     f74:	f9 2a       	or	r15, r25
     f76:	0a 2b       	or	r16, r26
     f78:	1b 2b       	or	r17, r27
     f7a:	a5 c0       	rjmp	.+330    	; 0x10c6 <__pack_f+0x178>
     f7c:	84 30       	cpi	r24, 0x04	; 4
     f7e:	09 f4       	brne	.+2      	; 0xf82 <__pack_f+0x34>
     f80:	9f c0       	rjmp	.+318    	; 0x10c0 <__pack_f+0x172>
     f82:	82 30       	cpi	r24, 0x02	; 2
     f84:	21 f4       	brne	.+8      	; 0xf8e <__pack_f+0x40>
     f86:	ee 24       	eor	r14, r14
     f88:	ff 24       	eor	r15, r15
     f8a:	87 01       	movw	r16, r14
     f8c:	05 c0       	rjmp	.+10     	; 0xf98 <__pack_f+0x4a>
     f8e:	e1 14       	cp	r14, r1
     f90:	f1 04       	cpc	r15, r1
     f92:	01 05       	cpc	r16, r1
     f94:	11 05       	cpc	r17, r1
     f96:	19 f4       	brne	.+6      	; 0xf9e <__pack_f+0x50>
     f98:	e0 e0       	ldi	r30, 0x00	; 0
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	96 c0       	rjmp	.+300    	; 0x10ca <__pack_f+0x17c>
     f9e:	62 81       	ldd	r22, Z+2	; 0x02
     fa0:	73 81       	ldd	r23, Z+3	; 0x03
     fa2:	9f ef       	ldi	r25, 0xFF	; 255
     fa4:	62 38       	cpi	r22, 0x82	; 130
     fa6:	79 07       	cpc	r23, r25
     fa8:	0c f0       	brlt	.+2      	; 0xfac <__pack_f+0x5e>
     faa:	5b c0       	rjmp	.+182    	; 0x1062 <__pack_f+0x114>
     fac:	22 e8       	ldi	r18, 0x82	; 130
     fae:	3f ef       	ldi	r19, 0xFF	; 255
     fb0:	26 1b       	sub	r18, r22
     fb2:	37 0b       	sbc	r19, r23
     fb4:	2a 31       	cpi	r18, 0x1A	; 26
     fb6:	31 05       	cpc	r19, r1
     fb8:	2c f0       	brlt	.+10     	; 0xfc4 <__pack_f+0x76>
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e0       	ldi	r20, 0x00	; 0
     fc0:	50 e0       	ldi	r21, 0x00	; 0
     fc2:	2a c0       	rjmp	.+84     	; 0x1018 <__pack_f+0xca>
     fc4:	b8 01       	movw	r22, r16
     fc6:	a7 01       	movw	r20, r14
     fc8:	02 2e       	mov	r0, r18
     fca:	04 c0       	rjmp	.+8      	; 0xfd4 <__pack_f+0x86>
     fcc:	76 95       	lsr	r23
     fce:	67 95       	ror	r22
     fd0:	57 95       	ror	r21
     fd2:	47 95       	ror	r20
     fd4:	0a 94       	dec	r0
     fd6:	d2 f7       	brpl	.-12     	; 0xfcc <__pack_f+0x7e>
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	a0 e0       	ldi	r26, 0x00	; 0
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	04 c0       	rjmp	.+8      	; 0xfea <__pack_f+0x9c>
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	aa 1f       	adc	r26, r26
     fe8:	bb 1f       	adc	r27, r27
     fea:	2a 95       	dec	r18
     fec:	d2 f7       	brpl	.-12     	; 0xfe2 <__pack_f+0x94>
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	a1 09       	sbc	r26, r1
     ff2:	b1 09       	sbc	r27, r1
     ff4:	8e 21       	and	r24, r14
     ff6:	9f 21       	and	r25, r15
     ff8:	a0 23       	and	r26, r16
     ffa:	b1 23       	and	r27, r17
     ffc:	00 97       	sbiw	r24, 0x00	; 0
     ffe:	a1 05       	cpc	r26, r1
    1000:	b1 05       	cpc	r27, r1
    1002:	21 f0       	breq	.+8      	; 0x100c <__pack_f+0xbe>
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	a0 e0       	ldi	r26, 0x00	; 0
    100a:	b0 e0       	ldi	r27, 0x00	; 0
    100c:	9a 01       	movw	r18, r20
    100e:	ab 01       	movw	r20, r22
    1010:	28 2b       	or	r18, r24
    1012:	39 2b       	or	r19, r25
    1014:	4a 2b       	or	r20, r26
    1016:	5b 2b       	or	r21, r27
    1018:	da 01       	movw	r26, r20
    101a:	c9 01       	movw	r24, r18
    101c:	8f 77       	andi	r24, 0x7F	; 127
    101e:	90 70       	andi	r25, 0x00	; 0
    1020:	a0 70       	andi	r26, 0x00	; 0
    1022:	b0 70       	andi	r27, 0x00	; 0
    1024:	80 34       	cpi	r24, 0x40	; 64
    1026:	91 05       	cpc	r25, r1
    1028:	a1 05       	cpc	r26, r1
    102a:	b1 05       	cpc	r27, r1
    102c:	39 f4       	brne	.+14     	; 0x103c <__pack_f+0xee>
    102e:	27 ff       	sbrs	r18, 7
    1030:	09 c0       	rjmp	.+18     	; 0x1044 <__pack_f+0xf6>
    1032:	20 5c       	subi	r18, 0xC0	; 192
    1034:	3f 4f       	sbci	r19, 0xFF	; 255
    1036:	4f 4f       	sbci	r20, 0xFF	; 255
    1038:	5f 4f       	sbci	r21, 0xFF	; 255
    103a:	04 c0       	rjmp	.+8      	; 0x1044 <__pack_f+0xf6>
    103c:	21 5c       	subi	r18, 0xC1	; 193
    103e:	3f 4f       	sbci	r19, 0xFF	; 255
    1040:	4f 4f       	sbci	r20, 0xFF	; 255
    1042:	5f 4f       	sbci	r21, 0xFF	; 255
    1044:	e0 e0       	ldi	r30, 0x00	; 0
    1046:	f0 e0       	ldi	r31, 0x00	; 0
    1048:	20 30       	cpi	r18, 0x00	; 0
    104a:	a0 e0       	ldi	r26, 0x00	; 0
    104c:	3a 07       	cpc	r19, r26
    104e:	a0 e0       	ldi	r26, 0x00	; 0
    1050:	4a 07       	cpc	r20, r26
    1052:	a0 e4       	ldi	r26, 0x40	; 64
    1054:	5a 07       	cpc	r21, r26
    1056:	10 f0       	brcs	.+4      	; 0x105c <__pack_f+0x10e>
    1058:	e1 e0       	ldi	r30, 0x01	; 1
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	79 01       	movw	r14, r18
    105e:	8a 01       	movw	r16, r20
    1060:	27 c0       	rjmp	.+78     	; 0x10b0 <__pack_f+0x162>
    1062:	60 38       	cpi	r22, 0x80	; 128
    1064:	71 05       	cpc	r23, r1
    1066:	64 f5       	brge	.+88     	; 0x10c0 <__pack_f+0x172>
    1068:	fb 01       	movw	r30, r22
    106a:	e1 58       	subi	r30, 0x81	; 129
    106c:	ff 4f       	sbci	r31, 0xFF	; 255
    106e:	d8 01       	movw	r26, r16
    1070:	c7 01       	movw	r24, r14
    1072:	8f 77       	andi	r24, 0x7F	; 127
    1074:	90 70       	andi	r25, 0x00	; 0
    1076:	a0 70       	andi	r26, 0x00	; 0
    1078:	b0 70       	andi	r27, 0x00	; 0
    107a:	80 34       	cpi	r24, 0x40	; 64
    107c:	91 05       	cpc	r25, r1
    107e:	a1 05       	cpc	r26, r1
    1080:	b1 05       	cpc	r27, r1
    1082:	39 f4       	brne	.+14     	; 0x1092 <__pack_f+0x144>
    1084:	e7 fe       	sbrs	r14, 7
    1086:	0d c0       	rjmp	.+26     	; 0x10a2 <__pack_f+0x154>
    1088:	80 e4       	ldi	r24, 0x40	; 64
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	a0 e0       	ldi	r26, 0x00	; 0
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	04 c0       	rjmp	.+8      	; 0x109a <__pack_f+0x14c>
    1092:	8f e3       	ldi	r24, 0x3F	; 63
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	a0 e0       	ldi	r26, 0x00	; 0
    1098:	b0 e0       	ldi	r27, 0x00	; 0
    109a:	e8 0e       	add	r14, r24
    109c:	f9 1e       	adc	r15, r25
    109e:	0a 1f       	adc	r16, r26
    10a0:	1b 1f       	adc	r17, r27
    10a2:	17 ff       	sbrs	r17, 7
    10a4:	05 c0       	rjmp	.+10     	; 0x10b0 <__pack_f+0x162>
    10a6:	16 95       	lsr	r17
    10a8:	07 95       	ror	r16
    10aa:	f7 94       	ror	r15
    10ac:	e7 94       	ror	r14
    10ae:	31 96       	adiw	r30, 0x01	; 1
    10b0:	87 e0       	ldi	r24, 0x07	; 7
    10b2:	16 95       	lsr	r17
    10b4:	07 95       	ror	r16
    10b6:	f7 94       	ror	r15
    10b8:	e7 94       	ror	r14
    10ba:	8a 95       	dec	r24
    10bc:	d1 f7       	brne	.-12     	; 0x10b2 <__pack_f+0x164>
    10be:	05 c0       	rjmp	.+10     	; 0x10ca <__pack_f+0x17c>
    10c0:	ee 24       	eor	r14, r14
    10c2:	ff 24       	eor	r15, r15
    10c4:	87 01       	movw	r16, r14
    10c6:	ef ef       	ldi	r30, 0xFF	; 255
    10c8:	f0 e0       	ldi	r31, 0x00	; 0
    10ca:	6e 2f       	mov	r22, r30
    10cc:	67 95       	ror	r22
    10ce:	66 27       	eor	r22, r22
    10d0:	67 95       	ror	r22
    10d2:	90 2f       	mov	r25, r16
    10d4:	9f 77       	andi	r25, 0x7F	; 127
    10d6:	d7 94       	ror	r13
    10d8:	dd 24       	eor	r13, r13
    10da:	d7 94       	ror	r13
    10dc:	8e 2f       	mov	r24, r30
    10de:	86 95       	lsr	r24
    10e0:	49 2f       	mov	r20, r25
    10e2:	46 2b       	or	r20, r22
    10e4:	58 2f       	mov	r21, r24
    10e6:	5d 29       	or	r21, r13
    10e8:	b7 01       	movw	r22, r14
    10ea:	ca 01       	movw	r24, r20
    10ec:	1f 91       	pop	r17
    10ee:	0f 91       	pop	r16
    10f0:	ff 90       	pop	r15
    10f2:	ef 90       	pop	r14
    10f4:	df 90       	pop	r13
    10f6:	08 95       	ret

000010f8 <__unpack_f>:
    10f8:	fc 01       	movw	r30, r24
    10fa:	db 01       	movw	r26, r22
    10fc:	40 81       	ld	r20, Z
    10fe:	51 81       	ldd	r21, Z+1	; 0x01
    1100:	22 81       	ldd	r18, Z+2	; 0x02
    1102:	62 2f       	mov	r22, r18
    1104:	6f 77       	andi	r22, 0x7F	; 127
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	22 1f       	adc	r18, r18
    110a:	22 27       	eor	r18, r18
    110c:	22 1f       	adc	r18, r18
    110e:	93 81       	ldd	r25, Z+3	; 0x03
    1110:	89 2f       	mov	r24, r25
    1112:	88 0f       	add	r24, r24
    1114:	82 2b       	or	r24, r18
    1116:	28 2f       	mov	r18, r24
    1118:	30 e0       	ldi	r19, 0x00	; 0
    111a:	99 1f       	adc	r25, r25
    111c:	99 27       	eor	r25, r25
    111e:	99 1f       	adc	r25, r25
    1120:	11 96       	adiw	r26, 0x01	; 1
    1122:	9c 93       	st	X, r25
    1124:	11 97       	sbiw	r26, 0x01	; 1
    1126:	21 15       	cp	r18, r1
    1128:	31 05       	cpc	r19, r1
    112a:	a9 f5       	brne	.+106    	; 0x1196 <__unpack_f+0x9e>
    112c:	41 15       	cp	r20, r1
    112e:	51 05       	cpc	r21, r1
    1130:	61 05       	cpc	r22, r1
    1132:	71 05       	cpc	r23, r1
    1134:	11 f4       	brne	.+4      	; 0x113a <__unpack_f+0x42>
    1136:	82 e0       	ldi	r24, 0x02	; 2
    1138:	37 c0       	rjmp	.+110    	; 0x11a8 <__unpack_f+0xb0>
    113a:	82 e8       	ldi	r24, 0x82	; 130
    113c:	9f ef       	ldi	r25, 0xFF	; 255
    113e:	13 96       	adiw	r26, 0x03	; 3
    1140:	9c 93       	st	X, r25
    1142:	8e 93       	st	-X, r24
    1144:	12 97       	sbiw	r26, 0x02	; 2
    1146:	9a 01       	movw	r18, r20
    1148:	ab 01       	movw	r20, r22
    114a:	67 e0       	ldi	r22, 0x07	; 7
    114c:	22 0f       	add	r18, r18
    114e:	33 1f       	adc	r19, r19
    1150:	44 1f       	adc	r20, r20
    1152:	55 1f       	adc	r21, r21
    1154:	6a 95       	dec	r22
    1156:	d1 f7       	brne	.-12     	; 0x114c <__unpack_f+0x54>
    1158:	83 e0       	ldi	r24, 0x03	; 3
    115a:	8c 93       	st	X, r24
    115c:	0d c0       	rjmp	.+26     	; 0x1178 <__unpack_f+0x80>
    115e:	22 0f       	add	r18, r18
    1160:	33 1f       	adc	r19, r19
    1162:	44 1f       	adc	r20, r20
    1164:	55 1f       	adc	r21, r21
    1166:	12 96       	adiw	r26, 0x02	; 2
    1168:	8d 91       	ld	r24, X+
    116a:	9c 91       	ld	r25, X
    116c:	13 97       	sbiw	r26, 0x03	; 3
    116e:	01 97       	sbiw	r24, 0x01	; 1
    1170:	13 96       	adiw	r26, 0x03	; 3
    1172:	9c 93       	st	X, r25
    1174:	8e 93       	st	-X, r24
    1176:	12 97       	sbiw	r26, 0x02	; 2
    1178:	20 30       	cpi	r18, 0x00	; 0
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	38 07       	cpc	r19, r24
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	48 07       	cpc	r20, r24
    1182:	80 e4       	ldi	r24, 0x40	; 64
    1184:	58 07       	cpc	r21, r24
    1186:	58 f3       	brcs	.-42     	; 0x115e <__unpack_f+0x66>
    1188:	14 96       	adiw	r26, 0x04	; 4
    118a:	2d 93       	st	X+, r18
    118c:	3d 93       	st	X+, r19
    118e:	4d 93       	st	X+, r20
    1190:	5c 93       	st	X, r21
    1192:	17 97       	sbiw	r26, 0x07	; 7
    1194:	08 95       	ret
    1196:	2f 3f       	cpi	r18, 0xFF	; 255
    1198:	31 05       	cpc	r19, r1
    119a:	79 f4       	brne	.+30     	; 0x11ba <__unpack_f+0xc2>
    119c:	41 15       	cp	r20, r1
    119e:	51 05       	cpc	r21, r1
    11a0:	61 05       	cpc	r22, r1
    11a2:	71 05       	cpc	r23, r1
    11a4:	19 f4       	brne	.+6      	; 0x11ac <__unpack_f+0xb4>
    11a6:	84 e0       	ldi	r24, 0x04	; 4
    11a8:	8c 93       	st	X, r24
    11aa:	08 95       	ret
    11ac:	64 ff       	sbrs	r22, 4
    11ae:	03 c0       	rjmp	.+6      	; 0x11b6 <__unpack_f+0xbe>
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	8c 93       	st	X, r24
    11b4:	12 c0       	rjmp	.+36     	; 0x11da <__unpack_f+0xe2>
    11b6:	1c 92       	st	X, r1
    11b8:	10 c0       	rjmp	.+32     	; 0x11da <__unpack_f+0xe2>
    11ba:	2f 57       	subi	r18, 0x7F	; 127
    11bc:	30 40       	sbci	r19, 0x00	; 0
    11be:	13 96       	adiw	r26, 0x03	; 3
    11c0:	3c 93       	st	X, r19
    11c2:	2e 93       	st	-X, r18
    11c4:	12 97       	sbiw	r26, 0x02	; 2
    11c6:	83 e0       	ldi	r24, 0x03	; 3
    11c8:	8c 93       	st	X, r24
    11ca:	87 e0       	ldi	r24, 0x07	; 7
    11cc:	44 0f       	add	r20, r20
    11ce:	55 1f       	adc	r21, r21
    11d0:	66 1f       	adc	r22, r22
    11d2:	77 1f       	adc	r23, r23
    11d4:	8a 95       	dec	r24
    11d6:	d1 f7       	brne	.-12     	; 0x11cc <__unpack_f+0xd4>
    11d8:	70 64       	ori	r23, 0x40	; 64
    11da:	14 96       	adiw	r26, 0x04	; 4
    11dc:	4d 93       	st	X+, r20
    11de:	5d 93       	st	X+, r21
    11e0:	6d 93       	st	X+, r22
    11e2:	7c 93       	st	X, r23
    11e4:	17 97       	sbiw	r26, 0x07	; 7
    11e6:	08 95       	ret

000011e8 <__fpcmp_parts_f>:
    11e8:	1f 93       	push	r17
    11ea:	dc 01       	movw	r26, r24
    11ec:	fb 01       	movw	r30, r22
    11ee:	9c 91       	ld	r25, X
    11f0:	92 30       	cpi	r25, 0x02	; 2
    11f2:	08 f4       	brcc	.+2      	; 0x11f6 <__fpcmp_parts_f+0xe>
    11f4:	47 c0       	rjmp	.+142    	; 0x1284 <__fpcmp_parts_f+0x9c>
    11f6:	80 81       	ld	r24, Z
    11f8:	82 30       	cpi	r24, 0x02	; 2
    11fa:	08 f4       	brcc	.+2      	; 0x11fe <__fpcmp_parts_f+0x16>
    11fc:	43 c0       	rjmp	.+134    	; 0x1284 <__fpcmp_parts_f+0x9c>
    11fe:	94 30       	cpi	r25, 0x04	; 4
    1200:	51 f4       	brne	.+20     	; 0x1216 <__fpcmp_parts_f+0x2e>
    1202:	11 96       	adiw	r26, 0x01	; 1
    1204:	1c 91       	ld	r17, X
    1206:	84 30       	cpi	r24, 0x04	; 4
    1208:	99 f5       	brne	.+102    	; 0x1270 <__fpcmp_parts_f+0x88>
    120a:	81 81       	ldd	r24, Z+1	; 0x01
    120c:	68 2f       	mov	r22, r24
    120e:	70 e0       	ldi	r23, 0x00	; 0
    1210:	61 1b       	sub	r22, r17
    1212:	71 09       	sbc	r23, r1
    1214:	3f c0       	rjmp	.+126    	; 0x1294 <__fpcmp_parts_f+0xac>
    1216:	84 30       	cpi	r24, 0x04	; 4
    1218:	21 f0       	breq	.+8      	; 0x1222 <__fpcmp_parts_f+0x3a>
    121a:	92 30       	cpi	r25, 0x02	; 2
    121c:	31 f4       	brne	.+12     	; 0x122a <__fpcmp_parts_f+0x42>
    121e:	82 30       	cpi	r24, 0x02	; 2
    1220:	b9 f1       	breq	.+110    	; 0x1290 <__fpcmp_parts_f+0xa8>
    1222:	81 81       	ldd	r24, Z+1	; 0x01
    1224:	88 23       	and	r24, r24
    1226:	89 f1       	breq	.+98     	; 0x128a <__fpcmp_parts_f+0xa2>
    1228:	2d c0       	rjmp	.+90     	; 0x1284 <__fpcmp_parts_f+0x9c>
    122a:	11 96       	adiw	r26, 0x01	; 1
    122c:	1c 91       	ld	r17, X
    122e:	11 97       	sbiw	r26, 0x01	; 1
    1230:	82 30       	cpi	r24, 0x02	; 2
    1232:	f1 f0       	breq	.+60     	; 0x1270 <__fpcmp_parts_f+0x88>
    1234:	81 81       	ldd	r24, Z+1	; 0x01
    1236:	18 17       	cp	r17, r24
    1238:	d9 f4       	brne	.+54     	; 0x1270 <__fpcmp_parts_f+0x88>
    123a:	12 96       	adiw	r26, 0x02	; 2
    123c:	2d 91       	ld	r18, X+
    123e:	3c 91       	ld	r19, X
    1240:	13 97       	sbiw	r26, 0x03	; 3
    1242:	82 81       	ldd	r24, Z+2	; 0x02
    1244:	93 81       	ldd	r25, Z+3	; 0x03
    1246:	82 17       	cp	r24, r18
    1248:	93 07       	cpc	r25, r19
    124a:	94 f0       	brlt	.+36     	; 0x1270 <__fpcmp_parts_f+0x88>
    124c:	28 17       	cp	r18, r24
    124e:	39 07       	cpc	r19, r25
    1250:	bc f0       	brlt	.+46     	; 0x1280 <__fpcmp_parts_f+0x98>
    1252:	14 96       	adiw	r26, 0x04	; 4
    1254:	8d 91       	ld	r24, X+
    1256:	9d 91       	ld	r25, X+
    1258:	0d 90       	ld	r0, X+
    125a:	bc 91       	ld	r27, X
    125c:	a0 2d       	mov	r26, r0
    125e:	24 81       	ldd	r18, Z+4	; 0x04
    1260:	35 81       	ldd	r19, Z+5	; 0x05
    1262:	46 81       	ldd	r20, Z+6	; 0x06
    1264:	57 81       	ldd	r21, Z+7	; 0x07
    1266:	28 17       	cp	r18, r24
    1268:	39 07       	cpc	r19, r25
    126a:	4a 07       	cpc	r20, r26
    126c:	5b 07       	cpc	r21, r27
    126e:	18 f4       	brcc	.+6      	; 0x1276 <__fpcmp_parts_f+0x8e>
    1270:	11 23       	and	r17, r17
    1272:	41 f0       	breq	.+16     	; 0x1284 <__fpcmp_parts_f+0x9c>
    1274:	0a c0       	rjmp	.+20     	; 0x128a <__fpcmp_parts_f+0xa2>
    1276:	82 17       	cp	r24, r18
    1278:	93 07       	cpc	r25, r19
    127a:	a4 07       	cpc	r26, r20
    127c:	b5 07       	cpc	r27, r21
    127e:	40 f4       	brcc	.+16     	; 0x1290 <__fpcmp_parts_f+0xa8>
    1280:	11 23       	and	r17, r17
    1282:	19 f0       	breq	.+6      	; 0x128a <__fpcmp_parts_f+0xa2>
    1284:	61 e0       	ldi	r22, 0x01	; 1
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	05 c0       	rjmp	.+10     	; 0x1294 <__fpcmp_parts_f+0xac>
    128a:	6f ef       	ldi	r22, 0xFF	; 255
    128c:	7f ef       	ldi	r23, 0xFF	; 255
    128e:	02 c0       	rjmp	.+4      	; 0x1294 <__fpcmp_parts_f+0xac>
    1290:	60 e0       	ldi	r22, 0x00	; 0
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	cb 01       	movw	r24, r22
    1296:	1f 91       	pop	r17
    1298:	08 95       	ret

0000129a <MDIO_voidSetPinDirection>:


// MDIO_voidSetPinDirection(DIO_PORTA, PIN0, DIO_OUTPUT);

void MDIO_voidSetPinDirection(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_pinDirection)
{
    129a:	df 93       	push	r29
    129c:	cf 93       	push	r28
    129e:	cd b7       	in	r28, 0x3d	; 61
    12a0:	de b7       	in	r29, 0x3e	; 62
    12a2:	2d 97       	sbiw	r28, 0x0d	; 13
    12a4:	0f b6       	in	r0, 0x3f	; 63
    12a6:	f8 94       	cli
    12a8:	de bf       	out	0x3e, r29	; 62
    12aa:	0f be       	out	0x3f, r0	; 63
    12ac:	cd bf       	out	0x3d, r28	; 61
    12ae:	89 83       	std	Y+1, r24	; 0x01
    12b0:	6a 83       	std	Y+2, r22	; 0x02
    12b2:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinDirection <= DIO_OUTPUT) )
    12b4:	89 81       	ldd	r24, Y+1	; 0x01
    12b6:	84 30       	cpi	r24, 0x04	; 4
    12b8:	08 f0       	brcs	.+2      	; 0x12bc <MDIO_voidSetPinDirection+0x22>
    12ba:	09 c1       	rjmp	.+530    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
    12bc:	8a 81       	ldd	r24, Y+2	; 0x02
    12be:	88 30       	cpi	r24, 0x08	; 8
    12c0:	08 f0       	brcs	.+2      	; 0x12c4 <MDIO_voidSetPinDirection+0x2a>
    12c2:	05 c1       	rjmp	.+522    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
    12c4:	8b 81       	ldd	r24, Y+3	; 0x03
    12c6:	82 30       	cpi	r24, 0x02	; 2
    12c8:	08 f0       	brcs	.+2      	; 0x12cc <MDIO_voidSetPinDirection+0x32>
    12ca:	01 c1       	rjmp	.+514    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
	{
		switch (A_portID)
    12cc:	89 81       	ldd	r24, Y+1	; 0x01
    12ce:	28 2f       	mov	r18, r24
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	3d 87       	std	Y+13, r19	; 0x0d
    12d4:	2c 87       	std	Y+12, r18	; 0x0c
    12d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    12d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    12da:	81 30       	cpi	r24, 0x01	; 1
    12dc:	91 05       	cpc	r25, r1
    12de:	09 f4       	brne	.+2      	; 0x12e2 <MDIO_voidSetPinDirection+0x48>
    12e0:	4f c0       	rjmp	.+158    	; 0x1380 <MDIO_voidSetPinDirection+0xe6>
    12e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    12e4:	3d 85       	ldd	r19, Y+13	; 0x0d
    12e6:	22 30       	cpi	r18, 0x02	; 2
    12e8:	31 05       	cpc	r19, r1
    12ea:	2c f4       	brge	.+10     	; 0x12f6 <MDIO_voidSetPinDirection+0x5c>
    12ec:	8c 85       	ldd	r24, Y+12	; 0x0c
    12ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    12f0:	00 97       	sbiw	r24, 0x00	; 0
    12f2:	71 f0       	breq	.+28     	; 0x1310 <MDIO_voidSetPinDirection+0x76>
    12f4:	ec c0       	rjmp	.+472    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
    12f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    12f8:	3d 85       	ldd	r19, Y+13	; 0x0d
    12fa:	22 30       	cpi	r18, 0x02	; 2
    12fc:	31 05       	cpc	r19, r1
    12fe:	09 f4       	brne	.+2      	; 0x1302 <MDIO_voidSetPinDirection+0x68>
    1300:	77 c0       	rjmp	.+238    	; 0x13f0 <MDIO_voidSetPinDirection+0x156>
    1302:	8c 85       	ldd	r24, Y+12	; 0x0c
    1304:	9d 85       	ldd	r25, Y+13	; 0x0d
    1306:	83 30       	cpi	r24, 0x03	; 3
    1308:	91 05       	cpc	r25, r1
    130a:	09 f4       	brne	.+2      	; 0x130e <MDIO_voidSetPinDirection+0x74>
    130c:	a9 c0       	rjmp	.+338    	; 0x1460 <MDIO_voidSetPinDirection+0x1c6>
    130e:	df c0       	rjmp	.+446    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
		{
		case DIO_PORTA:
			switch (A_pinDirection)
    1310:	8b 81       	ldd	r24, Y+3	; 0x03
    1312:	28 2f       	mov	r18, r24
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	3b 87       	std	Y+11, r19	; 0x0b
    1318:	2a 87       	std	Y+10, r18	; 0x0a
    131a:	8a 85       	ldd	r24, Y+10	; 0x0a
    131c:	9b 85       	ldd	r25, Y+11	; 0x0b
    131e:	00 97       	sbiw	r24, 0x00	; 0
    1320:	31 f0       	breq	.+12     	; 0x132e <MDIO_voidSetPinDirection+0x94>
    1322:	2a 85       	ldd	r18, Y+10	; 0x0a
    1324:	3b 85       	ldd	r19, Y+11	; 0x0b
    1326:	21 30       	cpi	r18, 0x01	; 1
    1328:	31 05       	cpc	r19, r1
    132a:	b1 f0       	breq	.+44     	; 0x1358 <MDIO_voidSetPinDirection+0xbe>
    132c:	d0 c0       	rjmp	.+416    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
    132e:	aa e3       	ldi	r26, 0x3A	; 58
    1330:	b0 e0       	ldi	r27, 0x00	; 0
    1332:	ea e3       	ldi	r30, 0x3A	; 58
    1334:	f0 e0       	ldi	r31, 0x00	; 0
    1336:	80 81       	ld	r24, Z
    1338:	48 2f       	mov	r20, r24
    133a:	8a 81       	ldd	r24, Y+2	; 0x02
    133c:	28 2f       	mov	r18, r24
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	02 2e       	mov	r0, r18
    1346:	02 c0       	rjmp	.+4      	; 0x134c <MDIO_voidSetPinDirection+0xb2>
    1348:	88 0f       	add	r24, r24
    134a:	99 1f       	adc	r25, r25
    134c:	0a 94       	dec	r0
    134e:	e2 f7       	brpl	.-8      	; 0x1348 <MDIO_voidSetPinDirection+0xae>
    1350:	80 95       	com	r24
    1352:	84 23       	and	r24, r20
    1354:	8c 93       	st	X, r24
    1356:	bb c0       	rjmp	.+374    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
    1358:	aa e3       	ldi	r26, 0x3A	; 58
    135a:	b0 e0       	ldi	r27, 0x00	; 0
    135c:	ea e3       	ldi	r30, 0x3A	; 58
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	80 81       	ld	r24, Z
    1362:	48 2f       	mov	r20, r24
    1364:	8a 81       	ldd	r24, Y+2	; 0x02
    1366:	28 2f       	mov	r18, r24
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	81 e0       	ldi	r24, 0x01	; 1
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	02 2e       	mov	r0, r18
    1370:	02 c0       	rjmp	.+4      	; 0x1376 <MDIO_voidSetPinDirection+0xdc>
    1372:	88 0f       	add	r24, r24
    1374:	99 1f       	adc	r25, r25
    1376:	0a 94       	dec	r0
    1378:	e2 f7       	brpl	.-8      	; 0x1372 <MDIO_voidSetPinDirection+0xd8>
    137a:	84 2b       	or	r24, r20
    137c:	8c 93       	st	X, r24
    137e:	a7 c0       	rjmp	.+334    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinDirection)
    1380:	8b 81       	ldd	r24, Y+3	; 0x03
    1382:	28 2f       	mov	r18, r24
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	39 87       	std	Y+9, r19	; 0x09
    1388:	28 87       	std	Y+8, r18	; 0x08
    138a:	88 85       	ldd	r24, Y+8	; 0x08
    138c:	99 85       	ldd	r25, Y+9	; 0x09
    138e:	00 97       	sbiw	r24, 0x00	; 0
    1390:	31 f0       	breq	.+12     	; 0x139e <MDIO_voidSetPinDirection+0x104>
    1392:	28 85       	ldd	r18, Y+8	; 0x08
    1394:	39 85       	ldd	r19, Y+9	; 0x09
    1396:	21 30       	cpi	r18, 0x01	; 1
    1398:	31 05       	cpc	r19, r1
    139a:	b1 f0       	breq	.+44     	; 0x13c8 <MDIO_voidSetPinDirection+0x12e>
    139c:	98 c0       	rjmp	.+304    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
    139e:	a7 e3       	ldi	r26, 0x37	; 55
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	e7 e3       	ldi	r30, 0x37	; 55
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	80 81       	ld	r24, Z
    13a8:	48 2f       	mov	r20, r24
    13aa:	8a 81       	ldd	r24, Y+2	; 0x02
    13ac:	28 2f       	mov	r18, r24
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	81 e0       	ldi	r24, 0x01	; 1
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	02 2e       	mov	r0, r18
    13b6:	02 c0       	rjmp	.+4      	; 0x13bc <MDIO_voidSetPinDirection+0x122>
    13b8:	88 0f       	add	r24, r24
    13ba:	99 1f       	adc	r25, r25
    13bc:	0a 94       	dec	r0
    13be:	e2 f7       	brpl	.-8      	; 0x13b8 <MDIO_voidSetPinDirection+0x11e>
    13c0:	80 95       	com	r24
    13c2:	84 23       	and	r24, r20
    13c4:	8c 93       	st	X, r24
    13c6:	83 c0       	rjmp	.+262    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
    13c8:	a7 e3       	ldi	r26, 0x37	; 55
    13ca:	b0 e0       	ldi	r27, 0x00	; 0
    13cc:	e7 e3       	ldi	r30, 0x37	; 55
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	80 81       	ld	r24, Z
    13d2:	48 2f       	mov	r20, r24
    13d4:	8a 81       	ldd	r24, Y+2	; 0x02
    13d6:	28 2f       	mov	r18, r24
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	81 e0       	ldi	r24, 0x01	; 1
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	02 2e       	mov	r0, r18
    13e0:	02 c0       	rjmp	.+4      	; 0x13e6 <MDIO_voidSetPinDirection+0x14c>
    13e2:	88 0f       	add	r24, r24
    13e4:	99 1f       	adc	r25, r25
    13e6:	0a 94       	dec	r0
    13e8:	e2 f7       	brpl	.-8      	; 0x13e2 <MDIO_voidSetPinDirection+0x148>
    13ea:	84 2b       	or	r24, r20
    13ec:	8c 93       	st	X, r24
    13ee:	6f c0       	rjmp	.+222    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinDirection)
    13f0:	8b 81       	ldd	r24, Y+3	; 0x03
    13f2:	28 2f       	mov	r18, r24
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	3f 83       	std	Y+7, r19	; 0x07
    13f8:	2e 83       	std	Y+6, r18	; 0x06
    13fa:	8e 81       	ldd	r24, Y+6	; 0x06
    13fc:	9f 81       	ldd	r25, Y+7	; 0x07
    13fe:	00 97       	sbiw	r24, 0x00	; 0
    1400:	31 f0       	breq	.+12     	; 0x140e <MDIO_voidSetPinDirection+0x174>
    1402:	2e 81       	ldd	r18, Y+6	; 0x06
    1404:	3f 81       	ldd	r19, Y+7	; 0x07
    1406:	21 30       	cpi	r18, 0x01	; 1
    1408:	31 05       	cpc	r19, r1
    140a:	b1 f0       	breq	.+44     	; 0x1438 <MDIO_voidSetPinDirection+0x19e>
    140c:	60 c0       	rjmp	.+192    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
    140e:	a4 e3       	ldi	r26, 0x34	; 52
    1410:	b0 e0       	ldi	r27, 0x00	; 0
    1412:	e4 e3       	ldi	r30, 0x34	; 52
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	80 81       	ld	r24, Z
    1418:	48 2f       	mov	r20, r24
    141a:	8a 81       	ldd	r24, Y+2	; 0x02
    141c:	28 2f       	mov	r18, r24
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	02 2e       	mov	r0, r18
    1426:	02 c0       	rjmp	.+4      	; 0x142c <MDIO_voidSetPinDirection+0x192>
    1428:	88 0f       	add	r24, r24
    142a:	99 1f       	adc	r25, r25
    142c:	0a 94       	dec	r0
    142e:	e2 f7       	brpl	.-8      	; 0x1428 <MDIO_voidSetPinDirection+0x18e>
    1430:	80 95       	com	r24
    1432:	84 23       	and	r24, r20
    1434:	8c 93       	st	X, r24
    1436:	4b c0       	rjmp	.+150    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
    1438:	a4 e3       	ldi	r26, 0x34	; 52
    143a:	b0 e0       	ldi	r27, 0x00	; 0
    143c:	e4 e3       	ldi	r30, 0x34	; 52
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	80 81       	ld	r24, Z
    1442:	48 2f       	mov	r20, r24
    1444:	8a 81       	ldd	r24, Y+2	; 0x02
    1446:	28 2f       	mov	r18, r24
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	81 e0       	ldi	r24, 0x01	; 1
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	02 2e       	mov	r0, r18
    1450:	02 c0       	rjmp	.+4      	; 0x1456 <MDIO_voidSetPinDirection+0x1bc>
    1452:	88 0f       	add	r24, r24
    1454:	99 1f       	adc	r25, r25
    1456:	0a 94       	dec	r0
    1458:	e2 f7       	brpl	.-8      	; 0x1452 <MDIO_voidSetPinDirection+0x1b8>
    145a:	84 2b       	or	r24, r20
    145c:	8c 93       	st	X, r24
    145e:	37 c0       	rjmp	.+110    	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinDirection)
    1460:	8b 81       	ldd	r24, Y+3	; 0x03
    1462:	28 2f       	mov	r18, r24
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	3d 83       	std	Y+5, r19	; 0x05
    1468:	2c 83       	std	Y+4, r18	; 0x04
    146a:	8c 81       	ldd	r24, Y+4	; 0x04
    146c:	9d 81       	ldd	r25, Y+5	; 0x05
    146e:	00 97       	sbiw	r24, 0x00	; 0
    1470:	31 f0       	breq	.+12     	; 0x147e <MDIO_voidSetPinDirection+0x1e4>
    1472:	2c 81       	ldd	r18, Y+4	; 0x04
    1474:	3d 81       	ldd	r19, Y+5	; 0x05
    1476:	21 30       	cpi	r18, 0x01	; 1
    1478:	31 05       	cpc	r19, r1
    147a:	b1 f0       	breq	.+44     	; 0x14a8 <MDIO_voidSetPinDirection+0x20e>
    147c:	28 c0       	rjmp	.+80     	; 0x14ce <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
    147e:	a1 e3       	ldi	r26, 0x31	; 49
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	e1 e3       	ldi	r30, 0x31	; 49
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	80 81       	ld	r24, Z
    1488:	48 2f       	mov	r20, r24
    148a:	8a 81       	ldd	r24, Y+2	; 0x02
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	02 2e       	mov	r0, r18
    1496:	02 c0       	rjmp	.+4      	; 0x149c <MDIO_voidSetPinDirection+0x202>
    1498:	88 0f       	add	r24, r24
    149a:	99 1f       	adc	r25, r25
    149c:	0a 94       	dec	r0
    149e:	e2 f7       	brpl	.-8      	; 0x1498 <MDIO_voidSetPinDirection+0x1fe>
    14a0:	80 95       	com	r24
    14a2:	84 23       	and	r24, r20
    14a4:	8c 93       	st	X, r24
    14a6:	13 c0       	rjmp	.+38     	; 0x14ce <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
    14a8:	a1 e3       	ldi	r26, 0x31	; 49
    14aa:	b0 e0       	ldi	r27, 0x00	; 0
    14ac:	e1 e3       	ldi	r30, 0x31	; 49
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	80 81       	ld	r24, Z
    14b2:	48 2f       	mov	r20, r24
    14b4:	8a 81       	ldd	r24, Y+2	; 0x02
    14b6:	28 2f       	mov	r18, r24
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	81 e0       	ldi	r24, 0x01	; 1
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	02 2e       	mov	r0, r18
    14c0:	02 c0       	rjmp	.+4      	; 0x14c6 <MDIO_voidSetPinDirection+0x22c>
    14c2:	88 0f       	add	r24, r24
    14c4:	99 1f       	adc	r25, r25
    14c6:	0a 94       	dec	r0
    14c8:	e2 f7       	brpl	.-8      	; 0x14c2 <MDIO_voidSetPinDirection+0x228>
    14ca:	84 2b       	or	r24, r20
    14cc:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    14ce:	2d 96       	adiw	r28, 0x0d	; 13
    14d0:	0f b6       	in	r0, 0x3f	; 63
    14d2:	f8 94       	cli
    14d4:	de bf       	out	0x3e, r29	; 62
    14d6:	0f be       	out	0x3f, r0	; 63
    14d8:	cd bf       	out	0x3d, r28	; 61
    14da:	cf 91       	pop	r28
    14dc:	df 91       	pop	r29
    14de:	08 95       	ret

000014e0 <MDIO_voidSetPinValue>:


void MDIO_voidSetPinValue(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_pinValue)
{
    14e0:	df 93       	push	r29
    14e2:	cf 93       	push	r28
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
    14e8:	2d 97       	sbiw	r28, 0x0d	; 13
    14ea:	0f b6       	in	r0, 0x3f	; 63
    14ec:	f8 94       	cli
    14ee:	de bf       	out	0x3e, r29	; 62
    14f0:	0f be       	out	0x3f, r0	; 63
    14f2:	cd bf       	out	0x3d, r28	; 61
    14f4:	89 83       	std	Y+1, r24	; 0x01
    14f6:	6a 83       	std	Y+2, r22	; 0x02
    14f8:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinValue <= DIO_SET) )
    14fa:	89 81       	ldd	r24, Y+1	; 0x01
    14fc:	84 30       	cpi	r24, 0x04	; 4
    14fe:	08 f0       	brcs	.+2      	; 0x1502 <MDIO_voidSetPinValue+0x22>
    1500:	09 c1       	rjmp	.+530    	; 0x1714 <MDIO_voidSetPinValue+0x234>
    1502:	8a 81       	ldd	r24, Y+2	; 0x02
    1504:	88 30       	cpi	r24, 0x08	; 8
    1506:	08 f0       	brcs	.+2      	; 0x150a <MDIO_voidSetPinValue+0x2a>
    1508:	05 c1       	rjmp	.+522    	; 0x1714 <MDIO_voidSetPinValue+0x234>
    150a:	8b 81       	ldd	r24, Y+3	; 0x03
    150c:	82 30       	cpi	r24, 0x02	; 2
    150e:	08 f0       	brcs	.+2      	; 0x1512 <MDIO_voidSetPinValue+0x32>
    1510:	01 c1       	rjmp	.+514    	; 0x1714 <MDIO_voidSetPinValue+0x234>
	{
		switch (A_portID)
    1512:	89 81       	ldd	r24, Y+1	; 0x01
    1514:	28 2f       	mov	r18, r24
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	3d 87       	std	Y+13, r19	; 0x0d
    151a:	2c 87       	std	Y+12, r18	; 0x0c
    151c:	8c 85       	ldd	r24, Y+12	; 0x0c
    151e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1520:	81 30       	cpi	r24, 0x01	; 1
    1522:	91 05       	cpc	r25, r1
    1524:	09 f4       	brne	.+2      	; 0x1528 <MDIO_voidSetPinValue+0x48>
    1526:	4f c0       	rjmp	.+158    	; 0x15c6 <MDIO_voidSetPinValue+0xe6>
    1528:	2c 85       	ldd	r18, Y+12	; 0x0c
    152a:	3d 85       	ldd	r19, Y+13	; 0x0d
    152c:	22 30       	cpi	r18, 0x02	; 2
    152e:	31 05       	cpc	r19, r1
    1530:	2c f4       	brge	.+10     	; 0x153c <MDIO_voidSetPinValue+0x5c>
    1532:	8c 85       	ldd	r24, Y+12	; 0x0c
    1534:	9d 85       	ldd	r25, Y+13	; 0x0d
    1536:	00 97       	sbiw	r24, 0x00	; 0
    1538:	71 f0       	breq	.+28     	; 0x1556 <MDIO_voidSetPinValue+0x76>
    153a:	ec c0       	rjmp	.+472    	; 0x1714 <MDIO_voidSetPinValue+0x234>
    153c:	2c 85       	ldd	r18, Y+12	; 0x0c
    153e:	3d 85       	ldd	r19, Y+13	; 0x0d
    1540:	22 30       	cpi	r18, 0x02	; 2
    1542:	31 05       	cpc	r19, r1
    1544:	09 f4       	brne	.+2      	; 0x1548 <MDIO_voidSetPinValue+0x68>
    1546:	77 c0       	rjmp	.+238    	; 0x1636 <MDIO_voidSetPinValue+0x156>
    1548:	8c 85       	ldd	r24, Y+12	; 0x0c
    154a:	9d 85       	ldd	r25, Y+13	; 0x0d
    154c:	83 30       	cpi	r24, 0x03	; 3
    154e:	91 05       	cpc	r25, r1
    1550:	09 f4       	brne	.+2      	; 0x1554 <MDIO_voidSetPinValue+0x74>
    1552:	a9 c0       	rjmp	.+338    	; 0x16a6 <MDIO_voidSetPinValue+0x1c6>
    1554:	df c0       	rjmp	.+446    	; 0x1714 <MDIO_voidSetPinValue+0x234>
		{
		case DIO_PORTA:
			switch (A_pinValue)
    1556:	8b 81       	ldd	r24, Y+3	; 0x03
    1558:	28 2f       	mov	r18, r24
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	3b 87       	std	Y+11, r19	; 0x0b
    155e:	2a 87       	std	Y+10, r18	; 0x0a
    1560:	8a 85       	ldd	r24, Y+10	; 0x0a
    1562:	9b 85       	ldd	r25, Y+11	; 0x0b
    1564:	00 97       	sbiw	r24, 0x00	; 0
    1566:	31 f0       	breq	.+12     	; 0x1574 <MDIO_voidSetPinValue+0x94>
    1568:	2a 85       	ldd	r18, Y+10	; 0x0a
    156a:	3b 85       	ldd	r19, Y+11	; 0x0b
    156c:	21 30       	cpi	r18, 0x01	; 1
    156e:	31 05       	cpc	r19, r1
    1570:	b1 f0       	breq	.+44     	; 0x159e <MDIO_voidSetPinValue+0xbe>
    1572:	d0 c0       	rjmp	.+416    	; 0x1714 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTA_REG,A_pinID);
    1574:	ab e3       	ldi	r26, 0x3B	; 59
    1576:	b0 e0       	ldi	r27, 0x00	; 0
    1578:	eb e3       	ldi	r30, 0x3B	; 59
    157a:	f0 e0       	ldi	r31, 0x00	; 0
    157c:	80 81       	ld	r24, Z
    157e:	48 2f       	mov	r20, r24
    1580:	8a 81       	ldd	r24, Y+2	; 0x02
    1582:	28 2f       	mov	r18, r24
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	02 2e       	mov	r0, r18
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <MDIO_voidSetPinValue+0xb2>
    158e:	88 0f       	add	r24, r24
    1590:	99 1f       	adc	r25, r25
    1592:	0a 94       	dec	r0
    1594:	e2 f7       	brpl	.-8      	; 0x158e <MDIO_voidSetPinValue+0xae>
    1596:	80 95       	com	r24
    1598:	84 23       	and	r24, r20
    159a:	8c 93       	st	X, r24
    159c:	bb c0       	rjmp	.+374    	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTA_REG,A_pinID);
    159e:	ab e3       	ldi	r26, 0x3B	; 59
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	eb e3       	ldi	r30, 0x3B	; 59
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 81       	ld	r24, Z
    15a8:	48 2f       	mov	r20, r24
    15aa:	8a 81       	ldd	r24, Y+2	; 0x02
    15ac:	28 2f       	mov	r18, r24
    15ae:	30 e0       	ldi	r19, 0x00	; 0
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	02 2e       	mov	r0, r18
    15b6:	02 c0       	rjmp	.+4      	; 0x15bc <MDIO_voidSetPinValue+0xdc>
    15b8:	88 0f       	add	r24, r24
    15ba:	99 1f       	adc	r25, r25
    15bc:	0a 94       	dec	r0
    15be:	e2 f7       	brpl	.-8      	; 0x15b8 <MDIO_voidSetPinValue+0xd8>
    15c0:	84 2b       	or	r24, r20
    15c2:	8c 93       	st	X, r24
    15c4:	a7 c0       	rjmp	.+334    	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinValue)
    15c6:	8b 81       	ldd	r24, Y+3	; 0x03
    15c8:	28 2f       	mov	r18, r24
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	39 87       	std	Y+9, r19	; 0x09
    15ce:	28 87       	std	Y+8, r18	; 0x08
    15d0:	88 85       	ldd	r24, Y+8	; 0x08
    15d2:	99 85       	ldd	r25, Y+9	; 0x09
    15d4:	00 97       	sbiw	r24, 0x00	; 0
    15d6:	31 f0       	breq	.+12     	; 0x15e4 <MDIO_voidSetPinValue+0x104>
    15d8:	28 85       	ldd	r18, Y+8	; 0x08
    15da:	39 85       	ldd	r19, Y+9	; 0x09
    15dc:	21 30       	cpi	r18, 0x01	; 1
    15de:	31 05       	cpc	r19, r1
    15e0:	b1 f0       	breq	.+44     	; 0x160e <MDIO_voidSetPinValue+0x12e>
    15e2:	98 c0       	rjmp	.+304    	; 0x1714 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTB_REG,A_pinID);
    15e4:	a8 e3       	ldi	r26, 0x38	; 56
    15e6:	b0 e0       	ldi	r27, 0x00	; 0
    15e8:	e8 e3       	ldi	r30, 0x38	; 56
    15ea:	f0 e0       	ldi	r31, 0x00	; 0
    15ec:	80 81       	ld	r24, Z
    15ee:	48 2f       	mov	r20, r24
    15f0:	8a 81       	ldd	r24, Y+2	; 0x02
    15f2:	28 2f       	mov	r18, r24
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	81 e0       	ldi	r24, 0x01	; 1
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	02 2e       	mov	r0, r18
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <MDIO_voidSetPinValue+0x122>
    15fe:	88 0f       	add	r24, r24
    1600:	99 1f       	adc	r25, r25
    1602:	0a 94       	dec	r0
    1604:	e2 f7       	brpl	.-8      	; 0x15fe <MDIO_voidSetPinValue+0x11e>
    1606:	80 95       	com	r24
    1608:	84 23       	and	r24, r20
    160a:	8c 93       	st	X, r24
    160c:	83 c0       	rjmp	.+262    	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTB_REG,A_pinID);
    160e:	a8 e3       	ldi	r26, 0x38	; 56
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	e8 e3       	ldi	r30, 0x38	; 56
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	80 81       	ld	r24, Z
    1618:	48 2f       	mov	r20, r24
    161a:	8a 81       	ldd	r24, Y+2	; 0x02
    161c:	28 2f       	mov	r18, r24
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	02 2e       	mov	r0, r18
    1626:	02 c0       	rjmp	.+4      	; 0x162c <MDIO_voidSetPinValue+0x14c>
    1628:	88 0f       	add	r24, r24
    162a:	99 1f       	adc	r25, r25
    162c:	0a 94       	dec	r0
    162e:	e2 f7       	brpl	.-8      	; 0x1628 <MDIO_voidSetPinValue+0x148>
    1630:	84 2b       	or	r24, r20
    1632:	8c 93       	st	X, r24
    1634:	6f c0       	rjmp	.+222    	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinValue)
    1636:	8b 81       	ldd	r24, Y+3	; 0x03
    1638:	28 2f       	mov	r18, r24
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	3f 83       	std	Y+7, r19	; 0x07
    163e:	2e 83       	std	Y+6, r18	; 0x06
    1640:	8e 81       	ldd	r24, Y+6	; 0x06
    1642:	9f 81       	ldd	r25, Y+7	; 0x07
    1644:	00 97       	sbiw	r24, 0x00	; 0
    1646:	31 f0       	breq	.+12     	; 0x1654 <MDIO_voidSetPinValue+0x174>
    1648:	2e 81       	ldd	r18, Y+6	; 0x06
    164a:	3f 81       	ldd	r19, Y+7	; 0x07
    164c:	21 30       	cpi	r18, 0x01	; 1
    164e:	31 05       	cpc	r19, r1
    1650:	b1 f0       	breq	.+44     	; 0x167e <MDIO_voidSetPinValue+0x19e>
    1652:	60 c0       	rjmp	.+192    	; 0x1714 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTC_REG,A_pinID);
    1654:	a5 e3       	ldi	r26, 0x35	; 53
    1656:	b0 e0       	ldi	r27, 0x00	; 0
    1658:	e5 e3       	ldi	r30, 0x35	; 53
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	80 81       	ld	r24, Z
    165e:	48 2f       	mov	r20, r24
    1660:	8a 81       	ldd	r24, Y+2	; 0x02
    1662:	28 2f       	mov	r18, r24
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	81 e0       	ldi	r24, 0x01	; 1
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	02 2e       	mov	r0, r18
    166c:	02 c0       	rjmp	.+4      	; 0x1672 <MDIO_voidSetPinValue+0x192>
    166e:	88 0f       	add	r24, r24
    1670:	99 1f       	adc	r25, r25
    1672:	0a 94       	dec	r0
    1674:	e2 f7       	brpl	.-8      	; 0x166e <MDIO_voidSetPinValue+0x18e>
    1676:	80 95       	com	r24
    1678:	84 23       	and	r24, r20
    167a:	8c 93       	st	X, r24
    167c:	4b c0       	rjmp	.+150    	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTC_REG,A_pinID);
    167e:	a5 e3       	ldi	r26, 0x35	; 53
    1680:	b0 e0       	ldi	r27, 0x00	; 0
    1682:	e5 e3       	ldi	r30, 0x35	; 53
    1684:	f0 e0       	ldi	r31, 0x00	; 0
    1686:	80 81       	ld	r24, Z
    1688:	48 2f       	mov	r20, r24
    168a:	8a 81       	ldd	r24, Y+2	; 0x02
    168c:	28 2f       	mov	r18, r24
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	02 2e       	mov	r0, r18
    1696:	02 c0       	rjmp	.+4      	; 0x169c <MDIO_voidSetPinValue+0x1bc>
    1698:	88 0f       	add	r24, r24
    169a:	99 1f       	adc	r25, r25
    169c:	0a 94       	dec	r0
    169e:	e2 f7       	brpl	.-8      	; 0x1698 <MDIO_voidSetPinValue+0x1b8>
    16a0:	84 2b       	or	r24, r20
    16a2:	8c 93       	st	X, r24
    16a4:	37 c0       	rjmp	.+110    	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinValue)
    16a6:	8b 81       	ldd	r24, Y+3	; 0x03
    16a8:	28 2f       	mov	r18, r24
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	3d 83       	std	Y+5, r19	; 0x05
    16ae:	2c 83       	std	Y+4, r18	; 0x04
    16b0:	8c 81       	ldd	r24, Y+4	; 0x04
    16b2:	9d 81       	ldd	r25, Y+5	; 0x05
    16b4:	00 97       	sbiw	r24, 0x00	; 0
    16b6:	31 f0       	breq	.+12     	; 0x16c4 <MDIO_voidSetPinValue+0x1e4>
    16b8:	2c 81       	ldd	r18, Y+4	; 0x04
    16ba:	3d 81       	ldd	r19, Y+5	; 0x05
    16bc:	21 30       	cpi	r18, 0x01	; 1
    16be:	31 05       	cpc	r19, r1
    16c0:	b1 f0       	breq	.+44     	; 0x16ee <MDIO_voidSetPinValue+0x20e>
    16c2:	28 c0       	rjmp	.+80     	; 0x1714 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTD_REG,A_pinID);
    16c4:	a2 e3       	ldi	r26, 0x32	; 50
    16c6:	b0 e0       	ldi	r27, 0x00	; 0
    16c8:	e2 e3       	ldi	r30, 0x32	; 50
    16ca:	f0 e0       	ldi	r31, 0x00	; 0
    16cc:	80 81       	ld	r24, Z
    16ce:	48 2f       	mov	r20, r24
    16d0:	8a 81       	ldd	r24, Y+2	; 0x02
    16d2:	28 2f       	mov	r18, r24
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	02 2e       	mov	r0, r18
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <MDIO_voidSetPinValue+0x202>
    16de:	88 0f       	add	r24, r24
    16e0:	99 1f       	adc	r25, r25
    16e2:	0a 94       	dec	r0
    16e4:	e2 f7       	brpl	.-8      	; 0x16de <MDIO_voidSetPinValue+0x1fe>
    16e6:	80 95       	com	r24
    16e8:	84 23       	and	r24, r20
    16ea:	8c 93       	st	X, r24
    16ec:	13 c0       	rjmp	.+38     	; 0x1714 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTD_REG,A_pinID);
    16ee:	a2 e3       	ldi	r26, 0x32	; 50
    16f0:	b0 e0       	ldi	r27, 0x00	; 0
    16f2:	e2 e3       	ldi	r30, 0x32	; 50
    16f4:	f0 e0       	ldi	r31, 0x00	; 0
    16f6:	80 81       	ld	r24, Z
    16f8:	48 2f       	mov	r20, r24
    16fa:	8a 81       	ldd	r24, Y+2	; 0x02
    16fc:	28 2f       	mov	r18, r24
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	02 2e       	mov	r0, r18
    1706:	02 c0       	rjmp	.+4      	; 0x170c <MDIO_voidSetPinValue+0x22c>
    1708:	88 0f       	add	r24, r24
    170a:	99 1f       	adc	r25, r25
    170c:	0a 94       	dec	r0
    170e:	e2 f7       	brpl	.-8      	; 0x1708 <MDIO_voidSetPinValue+0x228>
    1710:	84 2b       	or	r24, r20
    1712:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    1714:	2d 96       	adiw	r28, 0x0d	; 13
    1716:	0f b6       	in	r0, 0x3f	; 63
    1718:	f8 94       	cli
    171a:	de bf       	out	0x3e, r29	; 62
    171c:	0f be       	out	0x3f, r0	; 63
    171e:	cd bf       	out	0x3d, r28	; 61
    1720:	cf 91       	pop	r28
    1722:	df 91       	pop	r29
    1724:	08 95       	ret

00001726 <MDIO_getPinValue>:


DIO_VALUE_e MDIO_getPinValue(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    1726:	df 93       	push	r29
    1728:	cf 93       	push	r28
    172a:	00 d0       	rcall	.+0      	; 0x172c <MDIO_getPinValue+0x6>
    172c:	00 d0       	rcall	.+0      	; 0x172e <MDIO_getPinValue+0x8>
    172e:	0f 92       	push	r0
    1730:	cd b7       	in	r28, 0x3d	; 61
    1732:	de b7       	in	r29, 0x3e	; 62
    1734:	8a 83       	std	Y+2, r24	; 0x02
    1736:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_PinValue;

	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    1738:	8a 81       	ldd	r24, Y+2	; 0x02
    173a:	84 30       	cpi	r24, 0x04	; 4
    173c:	08 f0       	brcs	.+2      	; 0x1740 <MDIO_getPinValue+0x1a>
    173e:	6b c0       	rjmp	.+214    	; 0x1816 <MDIO_getPinValue+0xf0>
    1740:	8b 81       	ldd	r24, Y+3	; 0x03
    1742:	88 30       	cpi	r24, 0x08	; 8
    1744:	08 f0       	brcs	.+2      	; 0x1748 <MDIO_getPinValue+0x22>
    1746:	67 c0       	rjmp	.+206    	; 0x1816 <MDIO_getPinValue+0xf0>
	{
		switch (A_portID)
    1748:	8a 81       	ldd	r24, Y+2	; 0x02
    174a:	28 2f       	mov	r18, r24
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	3d 83       	std	Y+5, r19	; 0x05
    1750:	2c 83       	std	Y+4, r18	; 0x04
    1752:	4c 81       	ldd	r20, Y+4	; 0x04
    1754:	5d 81       	ldd	r21, Y+5	; 0x05
    1756:	41 30       	cpi	r20, 0x01	; 1
    1758:	51 05       	cpc	r21, r1
    175a:	41 f1       	breq	.+80     	; 0x17ac <MDIO_getPinValue+0x86>
    175c:	8c 81       	ldd	r24, Y+4	; 0x04
    175e:	9d 81       	ldd	r25, Y+5	; 0x05
    1760:	82 30       	cpi	r24, 0x02	; 2
    1762:	91 05       	cpc	r25, r1
    1764:	34 f4       	brge	.+12     	; 0x1772 <MDIO_getPinValue+0x4c>
    1766:	2c 81       	ldd	r18, Y+4	; 0x04
    1768:	3d 81       	ldd	r19, Y+5	; 0x05
    176a:	21 15       	cp	r18, r1
    176c:	31 05       	cpc	r19, r1
    176e:	61 f0       	breq	.+24     	; 0x1788 <MDIO_getPinValue+0x62>
    1770:	52 c0       	rjmp	.+164    	; 0x1816 <MDIO_getPinValue+0xf0>
    1772:	4c 81       	ldd	r20, Y+4	; 0x04
    1774:	5d 81       	ldd	r21, Y+5	; 0x05
    1776:	42 30       	cpi	r20, 0x02	; 2
    1778:	51 05       	cpc	r21, r1
    177a:	51 f1       	breq	.+84     	; 0x17d0 <MDIO_getPinValue+0xaa>
    177c:	8c 81       	ldd	r24, Y+4	; 0x04
    177e:	9d 81       	ldd	r25, Y+5	; 0x05
    1780:	83 30       	cpi	r24, 0x03	; 3
    1782:	91 05       	cpc	r25, r1
    1784:	b9 f1       	breq	.+110    	; 0x17f4 <MDIO_getPinValue+0xce>
    1786:	47 c0       	rjmp	.+142    	; 0x1816 <MDIO_getPinValue+0xf0>
		{
		case DIO_PORTA:
			local_PinValue = GET_BIT(PINA_REG,A_pinID);
    1788:	e9 e3       	ldi	r30, 0x39	; 57
    178a:	f0 e0       	ldi	r31, 0x00	; 0
    178c:	80 81       	ld	r24, Z
    178e:	28 2f       	mov	r18, r24
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	8b 81       	ldd	r24, Y+3	; 0x03
    1794:	88 2f       	mov	r24, r24
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	a9 01       	movw	r20, r18
    179a:	02 c0       	rjmp	.+4      	; 0x17a0 <MDIO_getPinValue+0x7a>
    179c:	55 95       	asr	r21
    179e:	47 95       	ror	r20
    17a0:	8a 95       	dec	r24
    17a2:	e2 f7       	brpl	.-8      	; 0x179c <MDIO_getPinValue+0x76>
    17a4:	ca 01       	movw	r24, r20
    17a6:	81 70       	andi	r24, 0x01	; 1
    17a8:	89 83       	std	Y+1, r24	; 0x01
    17aa:	35 c0       	rjmp	.+106    	; 0x1816 <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTB:
			local_PinValue = GET_BIT(PINB_REG,A_pinID);
    17ac:	e6 e3       	ldi	r30, 0x36	; 54
    17ae:	f0 e0       	ldi	r31, 0x00	; 0
    17b0:	80 81       	ld	r24, Z
    17b2:	28 2f       	mov	r18, r24
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	8b 81       	ldd	r24, Y+3	; 0x03
    17b8:	88 2f       	mov	r24, r24
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	a9 01       	movw	r20, r18
    17be:	02 c0       	rjmp	.+4      	; 0x17c4 <MDIO_getPinValue+0x9e>
    17c0:	55 95       	asr	r21
    17c2:	47 95       	ror	r20
    17c4:	8a 95       	dec	r24
    17c6:	e2 f7       	brpl	.-8      	; 0x17c0 <MDIO_getPinValue+0x9a>
    17c8:	ca 01       	movw	r24, r20
    17ca:	81 70       	andi	r24, 0x01	; 1
    17cc:	89 83       	std	Y+1, r24	; 0x01
    17ce:	23 c0       	rjmp	.+70     	; 0x1816 <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTC:
			local_PinValue = GET_BIT(PINC_REG,A_pinID);
    17d0:	e3 e3       	ldi	r30, 0x33	; 51
    17d2:	f0 e0       	ldi	r31, 0x00	; 0
    17d4:	80 81       	ld	r24, Z
    17d6:	28 2f       	mov	r18, r24
    17d8:	30 e0       	ldi	r19, 0x00	; 0
    17da:	8b 81       	ldd	r24, Y+3	; 0x03
    17dc:	88 2f       	mov	r24, r24
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	a9 01       	movw	r20, r18
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <MDIO_getPinValue+0xc2>
    17e4:	55 95       	asr	r21
    17e6:	47 95       	ror	r20
    17e8:	8a 95       	dec	r24
    17ea:	e2 f7       	brpl	.-8      	; 0x17e4 <MDIO_getPinValue+0xbe>
    17ec:	ca 01       	movw	r24, r20
    17ee:	81 70       	andi	r24, 0x01	; 1
    17f0:	89 83       	std	Y+1, r24	; 0x01
    17f2:	11 c0       	rjmp	.+34     	; 0x1816 <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTD:
			local_PinValue = GET_BIT(PIND_REG,A_pinID);
    17f4:	e0 e3       	ldi	r30, 0x30	; 48
    17f6:	f0 e0       	ldi	r31, 0x00	; 0
    17f8:	80 81       	ld	r24, Z
    17fa:	28 2f       	mov	r18, r24
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1800:	88 2f       	mov	r24, r24
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	a9 01       	movw	r20, r18
    1806:	02 c0       	rjmp	.+4      	; 0x180c <MDIO_getPinValue+0xe6>
    1808:	55 95       	asr	r21
    180a:	47 95       	ror	r20
    180c:	8a 95       	dec	r24
    180e:	e2 f7       	brpl	.-8      	; 0x1808 <MDIO_getPinValue+0xe2>
    1810:	ca 01       	movw	r24, r20
    1812:	81 70       	andi	r24, 0x01	; 1
    1814:	89 83       	std	Y+1, r24	; 0x01
	{
		// Do Nothing
	}


	return local_PinValue;
    1816:	89 81       	ldd	r24, Y+1	; 0x01
}
    1818:	0f 90       	pop	r0
    181a:	0f 90       	pop	r0
    181c:	0f 90       	pop	r0
    181e:	0f 90       	pop	r0
    1820:	0f 90       	pop	r0
    1822:	cf 91       	pop	r28
    1824:	df 91       	pop	r29
    1826:	08 95       	ret

00001828 <MDIO_voidTogglePinValue>:

void MDIO_voidTogglePinValue (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    1828:	df 93       	push	r29
    182a:	cf 93       	push	r28
    182c:	00 d0       	rcall	.+0      	; 0x182e <MDIO_voidTogglePinValue+0x6>
    182e:	00 d0       	rcall	.+0      	; 0x1830 <MDIO_voidTogglePinValue+0x8>
    1830:	cd b7       	in	r28, 0x3d	; 61
    1832:	de b7       	in	r29, 0x3e	; 62
    1834:	89 83       	std	Y+1, r24	; 0x01
    1836:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	84 30       	cpi	r24, 0x04	; 4
    183c:	08 f0       	brcs	.+2      	; 0x1840 <MDIO_voidTogglePinValue+0x18>
    183e:	72 c0       	rjmp	.+228    	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
    1840:	8a 81       	ldd	r24, Y+2	; 0x02
    1842:	88 30       	cpi	r24, 0x08	; 8
    1844:	08 f0       	brcs	.+2      	; 0x1848 <MDIO_voidTogglePinValue+0x20>
    1846:	6e c0       	rjmp	.+220    	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
	{
		switch (A_portID)
    1848:	89 81       	ldd	r24, Y+1	; 0x01
    184a:	28 2f       	mov	r18, r24
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	3c 83       	std	Y+4, r19	; 0x04
    1850:	2b 83       	std	Y+3, r18	; 0x03
    1852:	8b 81       	ldd	r24, Y+3	; 0x03
    1854:	9c 81       	ldd	r25, Y+4	; 0x04
    1856:	81 30       	cpi	r24, 0x01	; 1
    1858:	91 05       	cpc	r25, r1
    185a:	49 f1       	breq	.+82     	; 0x18ae <MDIO_voidTogglePinValue+0x86>
    185c:	2b 81       	ldd	r18, Y+3	; 0x03
    185e:	3c 81       	ldd	r19, Y+4	; 0x04
    1860:	22 30       	cpi	r18, 0x02	; 2
    1862:	31 05       	cpc	r19, r1
    1864:	2c f4       	brge	.+10     	; 0x1870 <MDIO_voidTogglePinValue+0x48>
    1866:	8b 81       	ldd	r24, Y+3	; 0x03
    1868:	9c 81       	ldd	r25, Y+4	; 0x04
    186a:	00 97       	sbiw	r24, 0x00	; 0
    186c:	61 f0       	breq	.+24     	; 0x1886 <MDIO_voidTogglePinValue+0x5e>
    186e:	5a c0       	rjmp	.+180    	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
    1870:	2b 81       	ldd	r18, Y+3	; 0x03
    1872:	3c 81       	ldd	r19, Y+4	; 0x04
    1874:	22 30       	cpi	r18, 0x02	; 2
    1876:	31 05       	cpc	r19, r1
    1878:	71 f1       	breq	.+92     	; 0x18d6 <MDIO_voidTogglePinValue+0xae>
    187a:	8b 81       	ldd	r24, Y+3	; 0x03
    187c:	9c 81       	ldd	r25, Y+4	; 0x04
    187e:	83 30       	cpi	r24, 0x03	; 3
    1880:	91 05       	cpc	r25, r1
    1882:	e9 f1       	breq	.+122    	; 0x18fe <MDIO_voidTogglePinValue+0xd6>
    1884:	4f c0       	rjmp	.+158    	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
    1886:	ab e3       	ldi	r26, 0x3B	; 59
    1888:	b0 e0       	ldi	r27, 0x00	; 0
    188a:	eb e3       	ldi	r30, 0x3B	; 59
    188c:	f0 e0       	ldi	r31, 0x00	; 0
    188e:	80 81       	ld	r24, Z
    1890:	48 2f       	mov	r20, r24
    1892:	8a 81       	ldd	r24, Y+2	; 0x02
    1894:	28 2f       	mov	r18, r24
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	81 e0       	ldi	r24, 0x01	; 1
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	02 2e       	mov	r0, r18
    189e:	02 c0       	rjmp	.+4      	; 0x18a4 <MDIO_voidTogglePinValue+0x7c>
    18a0:	88 0f       	add	r24, r24
    18a2:	99 1f       	adc	r25, r25
    18a4:	0a 94       	dec	r0
    18a6:	e2 f7       	brpl	.-8      	; 0x18a0 <MDIO_voidTogglePinValue+0x78>
    18a8:	84 27       	eor	r24, r20
    18aa:	8c 93       	st	X, r24
    18ac:	3b c0       	rjmp	.+118    	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
    18ae:	a8 e3       	ldi	r26, 0x38	; 56
    18b0:	b0 e0       	ldi	r27, 0x00	; 0
    18b2:	e8 e3       	ldi	r30, 0x38	; 56
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	80 81       	ld	r24, Z
    18b8:	48 2f       	mov	r20, r24
    18ba:	8a 81       	ldd	r24, Y+2	; 0x02
    18bc:	28 2f       	mov	r18, r24
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	81 e0       	ldi	r24, 0x01	; 1
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	02 2e       	mov	r0, r18
    18c6:	02 c0       	rjmp	.+4      	; 0x18cc <MDIO_voidTogglePinValue+0xa4>
    18c8:	88 0f       	add	r24, r24
    18ca:	99 1f       	adc	r25, r25
    18cc:	0a 94       	dec	r0
    18ce:	e2 f7       	brpl	.-8      	; 0x18c8 <MDIO_voidTogglePinValue+0xa0>
    18d0:	84 27       	eor	r24, r20
    18d2:	8c 93       	st	X, r24
    18d4:	27 c0       	rjmp	.+78     	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
    18d6:	a5 e3       	ldi	r26, 0x35	; 53
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	e5 e3       	ldi	r30, 0x35	; 53
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	80 81       	ld	r24, Z
    18e0:	48 2f       	mov	r20, r24
    18e2:	8a 81       	ldd	r24, Y+2	; 0x02
    18e4:	28 2f       	mov	r18, r24
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	81 e0       	ldi	r24, 0x01	; 1
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	02 2e       	mov	r0, r18
    18ee:	02 c0       	rjmp	.+4      	; 0x18f4 <MDIO_voidTogglePinValue+0xcc>
    18f0:	88 0f       	add	r24, r24
    18f2:	99 1f       	adc	r25, r25
    18f4:	0a 94       	dec	r0
    18f6:	e2 f7       	brpl	.-8      	; 0x18f0 <MDIO_voidTogglePinValue+0xc8>
    18f8:	84 27       	eor	r24, r20
    18fa:	8c 93       	st	X, r24
    18fc:	13 c0       	rjmp	.+38     	; 0x1924 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
    18fe:	a2 e3       	ldi	r26, 0x32	; 50
    1900:	b0 e0       	ldi	r27, 0x00	; 0
    1902:	e2 e3       	ldi	r30, 0x32	; 50
    1904:	f0 e0       	ldi	r31, 0x00	; 0
    1906:	80 81       	ld	r24, Z
    1908:	48 2f       	mov	r20, r24
    190a:	8a 81       	ldd	r24, Y+2	; 0x02
    190c:	28 2f       	mov	r18, r24
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	02 2e       	mov	r0, r18
    1916:	02 c0       	rjmp	.+4      	; 0x191c <MDIO_voidTogglePinValue+0xf4>
    1918:	88 0f       	add	r24, r24
    191a:	99 1f       	adc	r25, r25
    191c:	0a 94       	dec	r0
    191e:	e2 f7       	brpl	.-8      	; 0x1918 <MDIO_voidTogglePinValue+0xf0>
    1920:	84 27       	eor	r24, r20
    1922:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    1924:	0f 90       	pop	r0
    1926:	0f 90       	pop	r0
    1928:	0f 90       	pop	r0
    192a:	0f 90       	pop	r0
    192c:	cf 91       	pop	r28
    192e:	df 91       	pop	r29
    1930:	08 95       	ret

00001932 <MDIO_voidSetPortDirection>:


void MDIO_voidSetPortDirection (DIO_PORT_e A_portID, u8 A_u8PortDirection)
{
    1932:	df 93       	push	r29
    1934:	cf 93       	push	r28
    1936:	00 d0       	rcall	.+0      	; 0x1938 <MDIO_voidSetPortDirection+0x6>
    1938:	00 d0       	rcall	.+0      	; 0x193a <MDIO_voidSetPortDirection+0x8>
    193a:	cd b7       	in	r28, 0x3d	; 61
    193c:	de b7       	in	r29, 0x3e	; 62
    193e:	89 83       	std	Y+1, r24	; 0x01
    1940:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    1942:	89 81       	ldd	r24, Y+1	; 0x01
    1944:	84 30       	cpi	r24, 0x04	; 4
    1946:	90 f5       	brcc	.+100    	; 0x19ac <MDIO_voidSetPortDirection+0x7a>
	{
		switch (A_portID)
    1948:	89 81       	ldd	r24, Y+1	; 0x01
    194a:	28 2f       	mov	r18, r24
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	3c 83       	std	Y+4, r19	; 0x04
    1950:	2b 83       	std	Y+3, r18	; 0x03
    1952:	8b 81       	ldd	r24, Y+3	; 0x03
    1954:	9c 81       	ldd	r25, Y+4	; 0x04
    1956:	81 30       	cpi	r24, 0x01	; 1
    1958:	91 05       	cpc	r25, r1
    195a:	d1 f0       	breq	.+52     	; 0x1990 <MDIO_voidSetPortDirection+0x5e>
    195c:	2b 81       	ldd	r18, Y+3	; 0x03
    195e:	3c 81       	ldd	r19, Y+4	; 0x04
    1960:	22 30       	cpi	r18, 0x02	; 2
    1962:	31 05       	cpc	r19, r1
    1964:	2c f4       	brge	.+10     	; 0x1970 <MDIO_voidSetPortDirection+0x3e>
    1966:	8b 81       	ldd	r24, Y+3	; 0x03
    1968:	9c 81       	ldd	r25, Y+4	; 0x04
    196a:	00 97       	sbiw	r24, 0x00	; 0
    196c:	61 f0       	breq	.+24     	; 0x1986 <MDIO_voidSetPortDirection+0x54>
    196e:	1e c0       	rjmp	.+60     	; 0x19ac <MDIO_voidSetPortDirection+0x7a>
    1970:	2b 81       	ldd	r18, Y+3	; 0x03
    1972:	3c 81       	ldd	r19, Y+4	; 0x04
    1974:	22 30       	cpi	r18, 0x02	; 2
    1976:	31 05       	cpc	r19, r1
    1978:	81 f0       	breq	.+32     	; 0x199a <MDIO_voidSetPortDirection+0x68>
    197a:	8b 81       	ldd	r24, Y+3	; 0x03
    197c:	9c 81       	ldd	r25, Y+4	; 0x04
    197e:	83 30       	cpi	r24, 0x03	; 3
    1980:	91 05       	cpc	r25, r1
    1982:	81 f0       	breq	.+32     	; 0x19a4 <MDIO_voidSetPortDirection+0x72>
    1984:	13 c0       	rjmp	.+38     	; 0x19ac <MDIO_voidSetPortDirection+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8PortDirection;
    1986:	ea e3       	ldi	r30, 0x3A	; 58
    1988:	f0 e0       	ldi	r31, 0x00	; 0
    198a:	8a 81       	ldd	r24, Y+2	; 0x02
    198c:	80 83       	st	Z, r24
    198e:	0e c0       	rjmp	.+28     	; 0x19ac <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8PortDirection;
    1990:	e7 e3       	ldi	r30, 0x37	; 55
    1992:	f0 e0       	ldi	r31, 0x00	; 0
    1994:	8a 81       	ldd	r24, Y+2	; 0x02
    1996:	80 83       	st	Z, r24
    1998:	09 c0       	rjmp	.+18     	; 0x19ac <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8PortDirection;
    199a:	e4 e3       	ldi	r30, 0x34	; 52
    199c:	f0 e0       	ldi	r31, 0x00	; 0
    199e:	8a 81       	ldd	r24, Y+2	; 0x02
    19a0:	80 83       	st	Z, r24
    19a2:	04 c0       	rjmp	.+8      	; 0x19ac <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8PortDirection;
    19a4:	e1 e3       	ldi	r30, 0x31	; 49
    19a6:	f0 e0       	ldi	r31, 0x00	; 0
    19a8:	8a 81       	ldd	r24, Y+2	; 0x02
    19aa:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    19ac:	0f 90       	pop	r0
    19ae:	0f 90       	pop	r0
    19b0:	0f 90       	pop	r0
    19b2:	0f 90       	pop	r0
    19b4:	cf 91       	pop	r28
    19b6:	df 91       	pop	r29
    19b8:	08 95       	ret

000019ba <MDIO_voidSetPortValue>:

void MDIO_voidSetPortValue (DIO_PORT_e A_portID, u8 A_u8PortValue)
{
    19ba:	df 93       	push	r29
    19bc:	cf 93       	push	r28
    19be:	00 d0       	rcall	.+0      	; 0x19c0 <MDIO_voidSetPortValue+0x6>
    19c0:	00 d0       	rcall	.+0      	; 0x19c2 <MDIO_voidSetPortValue+0x8>
    19c2:	cd b7       	in	r28, 0x3d	; 61
    19c4:	de b7       	in	r29, 0x3e	; 62
    19c6:	89 83       	std	Y+1, r24	; 0x01
    19c8:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    19ca:	89 81       	ldd	r24, Y+1	; 0x01
    19cc:	84 30       	cpi	r24, 0x04	; 4
    19ce:	90 f5       	brcc	.+100    	; 0x1a34 <MDIO_voidSetPortValue+0x7a>
	{
		switch (A_portID)
    19d0:	89 81       	ldd	r24, Y+1	; 0x01
    19d2:	28 2f       	mov	r18, r24
    19d4:	30 e0       	ldi	r19, 0x00	; 0
    19d6:	3c 83       	std	Y+4, r19	; 0x04
    19d8:	2b 83       	std	Y+3, r18	; 0x03
    19da:	8b 81       	ldd	r24, Y+3	; 0x03
    19dc:	9c 81       	ldd	r25, Y+4	; 0x04
    19de:	81 30       	cpi	r24, 0x01	; 1
    19e0:	91 05       	cpc	r25, r1
    19e2:	d1 f0       	breq	.+52     	; 0x1a18 <MDIO_voidSetPortValue+0x5e>
    19e4:	2b 81       	ldd	r18, Y+3	; 0x03
    19e6:	3c 81       	ldd	r19, Y+4	; 0x04
    19e8:	22 30       	cpi	r18, 0x02	; 2
    19ea:	31 05       	cpc	r19, r1
    19ec:	2c f4       	brge	.+10     	; 0x19f8 <MDIO_voidSetPortValue+0x3e>
    19ee:	8b 81       	ldd	r24, Y+3	; 0x03
    19f0:	9c 81       	ldd	r25, Y+4	; 0x04
    19f2:	00 97       	sbiw	r24, 0x00	; 0
    19f4:	61 f0       	breq	.+24     	; 0x1a0e <MDIO_voidSetPortValue+0x54>
    19f6:	1e c0       	rjmp	.+60     	; 0x1a34 <MDIO_voidSetPortValue+0x7a>
    19f8:	2b 81       	ldd	r18, Y+3	; 0x03
    19fa:	3c 81       	ldd	r19, Y+4	; 0x04
    19fc:	22 30       	cpi	r18, 0x02	; 2
    19fe:	31 05       	cpc	r19, r1
    1a00:	81 f0       	breq	.+32     	; 0x1a22 <MDIO_voidSetPortValue+0x68>
    1a02:	8b 81       	ldd	r24, Y+3	; 0x03
    1a04:	9c 81       	ldd	r25, Y+4	; 0x04
    1a06:	83 30       	cpi	r24, 0x03	; 3
    1a08:	91 05       	cpc	r25, r1
    1a0a:	81 f0       	breq	.+32     	; 0x1a2c <MDIO_voidSetPortValue+0x72>
    1a0c:	13 c0       	rjmp	.+38     	; 0x1a34 <MDIO_voidSetPortValue+0x7a>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8PortValue;
    1a0e:	eb e3       	ldi	r30, 0x3B	; 59
    1a10:	f0 e0       	ldi	r31, 0x00	; 0
    1a12:	8a 81       	ldd	r24, Y+2	; 0x02
    1a14:	80 83       	st	Z, r24
    1a16:	0e c0       	rjmp	.+28     	; 0x1a34 <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8PortValue;
    1a18:	e8 e3       	ldi	r30, 0x38	; 56
    1a1a:	f0 e0       	ldi	r31, 0x00	; 0
    1a1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a1e:	80 83       	st	Z, r24
    1a20:	09 c0       	rjmp	.+18     	; 0x1a34 <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8PortValue;
    1a22:	e5 e3       	ldi	r30, 0x35	; 53
    1a24:	f0 e0       	ldi	r31, 0x00	; 0
    1a26:	8a 81       	ldd	r24, Y+2	; 0x02
    1a28:	80 83       	st	Z, r24
    1a2a:	04 c0       	rjmp	.+8      	; 0x1a34 <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8PortValue;
    1a2c:	e2 e3       	ldi	r30, 0x32	; 50
    1a2e:	f0 e0       	ldi	r31, 0x00	; 0
    1a30:	8a 81       	ldd	r24, Y+2	; 0x02
    1a32:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    1a34:	0f 90       	pop	r0
    1a36:	0f 90       	pop	r0
    1a38:	0f 90       	pop	r0
    1a3a:	0f 90       	pop	r0
    1a3c:	cf 91       	pop	r28
    1a3e:	df 91       	pop	r29
    1a40:	08 95       	ret

00001a42 <MDIO_voidInit>:


void MDIO_voidInit (void)
{
    1a42:	df 93       	push	r29
    1a44:	cf 93       	push	r28
    1a46:	cd b7       	in	r28, 0x3d	; 61
    1a48:	de b7       	in	r29, 0x3e	; 62

	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
    1a4a:	ea e3       	ldi	r30, 0x3A	; 58
    1a4c:	f0 e0       	ldi	r31, 0x00	; 0
    1a4e:	8f ef       	ldi	r24, 0xFF	; 255
    1a50:	80 83       	st	Z, r24
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
    1a52:	e7 e3       	ldi	r30, 0x37	; 55
    1a54:	f0 e0       	ldi	r31, 0x00	; 0
    1a56:	8f ef       	ldi	r24, 0xFF	; 255
    1a58:	80 83       	st	Z, r24
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
    1a5a:	e4 e3       	ldi	r30, 0x34	; 52
    1a5c:	f0 e0       	ldi	r31, 0x00	; 0
    1a5e:	8f ef       	ldi	r24, 0xFF	; 255
    1a60:	80 83       	st	Z, r24
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
    1a62:	e1 e3       	ldi	r30, 0x31	; 49
    1a64:	f0 e0       	ldi	r31, 0x00	; 0
    1a66:	8f eb       	ldi	r24, 0xBF	; 191
    1a68:	80 83       	st	Z, r24
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	/**********************************************************************/

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
    1a6a:	eb e3       	ldi	r30, 0x3B	; 59
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
    1a70:	e8 e3       	ldi	r30, 0x38	; 56
    1a72:	f0 e0       	ldi	r31, 0x00	; 0
    1a74:	10 82       	st	Z, r1
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
    1a76:	e5 e3       	ldi	r30, 0x35	; 53
    1a78:	f0 e0       	ldi	r31, 0x00	; 0
    1a7a:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
    1a7c:	e2 e3       	ldi	r30, 0x32	; 50
    1a7e:	f0 e0       	ldi	r31, 0x00	; 0
    1a80:	10 82       	st	Z, r1
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
    1a82:	cf 91       	pop	r28
    1a84:	df 91       	pop	r29
    1a86:	08 95       	ret

00001a88 <MEXTI_configration>:

void (*callback_EXTI0)(void)=NULL;
void (*callback_EXTI1)(void)=NULL;;
void (*callback_EXTI2)(void)=NULL;
void MEXTI_configration(EXTI_e EXTI,state_e state)
{
    1a88:	df 93       	push	r29
    1a8a:	cf 93       	push	r28
    1a8c:	00 d0       	rcall	.+0      	; 0x1a8e <MEXTI_configration+0x6>
    1a8e:	00 d0       	rcall	.+0      	; 0x1a90 <MEXTI_configration+0x8>
    1a90:	00 d0       	rcall	.+0      	; 0x1a92 <MEXTI_configration+0xa>
    1a92:	cd b7       	in	r28, 0x3d	; 61
    1a94:	de b7       	in	r29, 0x3e	; 62
    1a96:	89 83       	std	Y+1, r24	; 0x01
    1a98:	6a 83       	std	Y+2, r22	; 0x02
	if(EXTI<=EXTI2 && state<=RISING_EDGE)
    1a9a:	89 81       	ldd	r24, Y+1	; 0x01
    1a9c:	83 30       	cpi	r24, 0x03	; 3
    1a9e:	08 f0       	brcs	.+2      	; 0x1aa2 <MEXTI_configration+0x1a>
    1aa0:	5e c0       	rjmp	.+188    	; 0x1b5e <MEXTI_configration+0xd6>
    1aa2:	8a 81       	ldd	r24, Y+2	; 0x02
    1aa4:	84 30       	cpi	r24, 0x04	; 4
    1aa6:	08 f0       	brcs	.+2      	; 0x1aaa <MEXTI_configration+0x22>
    1aa8:	5a c0       	rjmp	.+180    	; 0x1b5e <MEXTI_configration+0xd6>
	{
		switch(EXTI)
    1aaa:	89 81       	ldd	r24, Y+1	; 0x01
    1aac:	28 2f       	mov	r18, r24
    1aae:	30 e0       	ldi	r19, 0x00	; 0
    1ab0:	3e 83       	std	Y+6, r19	; 0x06
    1ab2:	2d 83       	std	Y+5, r18	; 0x05
    1ab4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ab6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ab8:	81 30       	cpi	r24, 0x01	; 1
    1aba:	91 05       	cpc	r25, r1
    1abc:	d1 f0       	breq	.+52     	; 0x1af2 <MEXTI_configration+0x6a>
    1abe:	2d 81       	ldd	r18, Y+5	; 0x05
    1ac0:	3e 81       	ldd	r19, Y+6	; 0x06
    1ac2:	22 30       	cpi	r18, 0x02	; 2
    1ac4:	31 05       	cpc	r19, r1
    1ac6:	61 f1       	breq	.+88     	; 0x1b20 <MEXTI_configration+0x98>
    1ac8:	8d 81       	ldd	r24, Y+5	; 0x05
    1aca:	9e 81       	ldd	r25, Y+6	; 0x06
    1acc:	00 97       	sbiw	r24, 0x00	; 0
    1ace:	09 f0       	breq	.+2      	; 0x1ad2 <MEXTI_configration+0x4a>
    1ad0:	46 c0       	rjmp	.+140    	; 0x1b5e <MEXTI_configration+0xd6>
		{
		case EXTI0:

			MCUCR&=~(Interrupt_Sense_Control_masked);
    1ad2:	a5 e5       	ldi	r26, 0x55	; 85
    1ad4:	b0 e0       	ldi	r27, 0x00	; 0
    1ad6:	e5 e5       	ldi	r30, 0x55	; 85
    1ad8:	f0 e0       	ldi	r31, 0x00	; 0
    1ada:	80 81       	ld	r24, Z
    1adc:	8c 7f       	andi	r24, 0xFC	; 252
    1ade:	8c 93       	st	X, r24
			MCUCR |=(state);
    1ae0:	a5 e5       	ldi	r26, 0x55	; 85
    1ae2:	b0 e0       	ldi	r27, 0x00	; 0
    1ae4:	e5 e5       	ldi	r30, 0x55	; 85
    1ae6:	f0 e0       	ldi	r31, 0x00	; 0
    1ae8:	90 81       	ld	r25, Z
    1aea:	8a 81       	ldd	r24, Y+2	; 0x02
    1aec:	89 2b       	or	r24, r25
    1aee:	8c 93       	st	X, r24
    1af0:	36 c0       	rjmp	.+108    	; 0x1b5e <MEXTI_configration+0xd6>
			break;
		case EXTI1:
			MCUCR&=~(Interrupt_Sense_Control_masked<<Interrupt_Sense_Control_shift);
    1af2:	a5 e5       	ldi	r26, 0x55	; 85
    1af4:	b0 e0       	ldi	r27, 0x00	; 0
    1af6:	e5 e5       	ldi	r30, 0x55	; 85
    1af8:	f0 e0       	ldi	r31, 0x00	; 0
    1afa:	80 81       	ld	r24, Z
    1afc:	83 7f       	andi	r24, 0xF3	; 243
    1afe:	8c 93       	st	X, r24
			MCUCR |=(state<<Interrupt_Sense_Control_shift);
    1b00:	a5 e5       	ldi	r26, 0x55	; 85
    1b02:	b0 e0       	ldi	r27, 0x00	; 0
    1b04:	e5 e5       	ldi	r30, 0x55	; 85
    1b06:	f0 e0       	ldi	r31, 0x00	; 0
    1b08:	80 81       	ld	r24, Z
    1b0a:	28 2f       	mov	r18, r24
    1b0c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b0e:	88 2f       	mov	r24, r24
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	88 0f       	add	r24, r24
    1b14:	99 1f       	adc	r25, r25
    1b16:	88 0f       	add	r24, r24
    1b18:	99 1f       	adc	r25, r25
    1b1a:	82 2b       	or	r24, r18
    1b1c:	8c 93       	st	X, r24
    1b1e:	1f c0       	rjmp	.+62     	; 0x1b5e <MEXTI_configration+0xd6>
			break;
		case EXTI2:
			switch(state)
    1b20:	8a 81       	ldd	r24, Y+2	; 0x02
    1b22:	28 2f       	mov	r18, r24
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	3c 83       	std	Y+4, r19	; 0x04
    1b28:	2b 83       	std	Y+3, r18	; 0x03
    1b2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1b2e:	82 30       	cpi	r24, 0x02	; 2
    1b30:	91 05       	cpc	r25, r1
    1b32:	31 f0       	breq	.+12     	; 0x1b40 <MEXTI_configration+0xb8>
    1b34:	2b 81       	ldd	r18, Y+3	; 0x03
    1b36:	3c 81       	ldd	r19, Y+4	; 0x04
    1b38:	23 30       	cpi	r18, 0x03	; 3
    1b3a:	31 05       	cpc	r19, r1
    1b3c:	49 f0       	breq	.+18     	; 0x1b50 <MEXTI_configration+0xc8>
    1b3e:	0f c0       	rjmp	.+30     	; 0x1b5e <MEXTI_configration+0xd6>
			{
			case FALLING_EDGE:
				CLR_BIT(MCUCSR,Interrupt_sense_control_EXTI2_bin);
    1b40:	a4 e5       	ldi	r26, 0x54	; 84
    1b42:	b0 e0       	ldi	r27, 0x00	; 0
    1b44:	e4 e5       	ldi	r30, 0x54	; 84
    1b46:	f0 e0       	ldi	r31, 0x00	; 0
    1b48:	80 81       	ld	r24, Z
    1b4a:	8f 7b       	andi	r24, 0xBF	; 191
    1b4c:	8c 93       	st	X, r24
    1b4e:	07 c0       	rjmp	.+14     	; 0x1b5e <MEXTI_configration+0xd6>
				break;
			case RISING_EDGE:
				SET_BIT(MCUCSR,Interrupt_sense_control_EXTI2_bin);
    1b50:	a4 e5       	ldi	r26, 0x54	; 84
    1b52:	b0 e0       	ldi	r27, 0x00	; 0
    1b54:	e4 e5       	ldi	r30, 0x54	; 84
    1b56:	f0 e0       	ldi	r31, 0x00	; 0
    1b58:	80 81       	ld	r24, Z
    1b5a:	80 64       	ori	r24, 0x40	; 64
    1b5c:	8c 93       	st	X, r24
				break;
			}

		}
	}
}
    1b5e:	26 96       	adiw	r28, 0x06	; 6
    1b60:	0f b6       	in	r0, 0x3f	; 63
    1b62:	f8 94       	cli
    1b64:	de bf       	out	0x3e, r29	; 62
    1b66:	0f be       	out	0x3f, r0	; 63
    1b68:	cd bf       	out	0x3d, r28	; 61
    1b6a:	cf 91       	pop	r28
    1b6c:	df 91       	pop	r29
    1b6e:	08 95       	ret

00001b70 <MEXTI_void_enaple_PIE>:
void MEXTI_void_enaple_PIE(EXTI_e EXTI)
{
    1b70:	df 93       	push	r29
    1b72:	cf 93       	push	r28
    1b74:	00 d0       	rcall	.+0      	; 0x1b76 <MEXTI_void_enaple_PIE+0x6>
    1b76:	0f 92       	push	r0
    1b78:	cd b7       	in	r28, 0x3d	; 61
    1b7a:	de b7       	in	r29, 0x3e	; 62
    1b7c:	89 83       	std	Y+1, r24	; 0x01
	if(EXTI<=EXTI2 )
    1b7e:	89 81       	ldd	r24, Y+1	; 0x01
    1b80:	83 30       	cpi	r24, 0x03	; 3
    1b82:	50 f5       	brcc	.+84     	; 0x1bd8 <MEXTI_void_enaple_PIE+0x68>
		{
			switch(EXTI)
    1b84:	89 81       	ldd	r24, Y+1	; 0x01
    1b86:	28 2f       	mov	r18, r24
    1b88:	30 e0       	ldi	r19, 0x00	; 0
    1b8a:	3b 83       	std	Y+3, r19	; 0x03
    1b8c:	2a 83       	std	Y+2, r18	; 0x02
    1b8e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b90:	9b 81       	ldd	r25, Y+3	; 0x03
    1b92:	81 30       	cpi	r24, 0x01	; 1
    1b94:	91 05       	cpc	r25, r1
    1b96:	89 f0       	breq	.+34     	; 0x1bba <MEXTI_void_enaple_PIE+0x4a>
    1b98:	2a 81       	ldd	r18, Y+2	; 0x02
    1b9a:	3b 81       	ldd	r19, Y+3	; 0x03
    1b9c:	22 30       	cpi	r18, 0x02	; 2
    1b9e:	31 05       	cpc	r19, r1
    1ba0:	a1 f0       	breq	.+40     	; 0x1bca <MEXTI_void_enaple_PIE+0x5a>
    1ba2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ba4:	9b 81       	ldd	r25, Y+3	; 0x03
    1ba6:	00 97       	sbiw	r24, 0x00	; 0
    1ba8:	b9 f4       	brne	.+46     	; 0x1bd8 <MEXTI_void_enaple_PIE+0x68>
			{
			case EXTI0:
				SET_BIT(GICR,External_Interrupt0_Enable_bin);
    1baa:	ab e5       	ldi	r26, 0x5B	; 91
    1bac:	b0 e0       	ldi	r27, 0x00	; 0
    1bae:	eb e5       	ldi	r30, 0x5B	; 91
    1bb0:	f0 e0       	ldi	r31, 0x00	; 0
    1bb2:	80 81       	ld	r24, Z
    1bb4:	80 64       	ori	r24, 0x40	; 64
    1bb6:	8c 93       	st	X, r24
    1bb8:	0f c0       	rjmp	.+30     	; 0x1bd8 <MEXTI_void_enaple_PIE+0x68>
				break;
			case EXTI1:
				SET_BIT(GICR,External_Interrupt1_Enable_bin);
    1bba:	ab e5       	ldi	r26, 0x5B	; 91
    1bbc:	b0 e0       	ldi	r27, 0x00	; 0
    1bbe:	eb e5       	ldi	r30, 0x5B	; 91
    1bc0:	f0 e0       	ldi	r31, 0x00	; 0
    1bc2:	80 81       	ld	r24, Z
    1bc4:	80 68       	ori	r24, 0x80	; 128
    1bc6:	8c 93       	st	X, r24
    1bc8:	07 c0       	rjmp	.+14     	; 0x1bd8 <MEXTI_void_enaple_PIE+0x68>
				break;
			case EXTI2:
				SET_BIT(GICR,External_Interrupt2_Enable_bin);
    1bca:	ab e5       	ldi	r26, 0x5B	; 91
    1bcc:	b0 e0       	ldi	r27, 0x00	; 0
    1bce:	eb e5       	ldi	r30, 0x5B	; 91
    1bd0:	f0 e0       	ldi	r31, 0x00	; 0
    1bd2:	80 81       	ld	r24, Z
    1bd4:	80 62       	ori	r24, 0x20	; 32
    1bd6:	8c 93       	st	X, r24
				break;
			default:
				break;
			}
		}
}
    1bd8:	0f 90       	pop	r0
    1bda:	0f 90       	pop	r0
    1bdc:	0f 90       	pop	r0
    1bde:	cf 91       	pop	r28
    1be0:	df 91       	pop	r29
    1be2:	08 95       	ret

00001be4 <MEXTI_void_disaple_PIE>:
void MEXTI_void_disaple_PIE(EXTI_e EXTI)
{
    1be4:	df 93       	push	r29
    1be6:	cf 93       	push	r28
    1be8:	00 d0       	rcall	.+0      	; 0x1bea <MEXTI_void_disaple_PIE+0x6>
    1bea:	0f 92       	push	r0
    1bec:	cd b7       	in	r28, 0x3d	; 61
    1bee:	de b7       	in	r29, 0x3e	; 62
    1bf0:	89 83       	std	Y+1, r24	; 0x01
	if(EXTI<=EXTI2)
    1bf2:	89 81       	ldd	r24, Y+1	; 0x01
    1bf4:	83 30       	cpi	r24, 0x03	; 3
    1bf6:	50 f5       	brcc	.+84     	; 0x1c4c <MEXTI_void_disaple_PIE+0x68>
	{
		switch(EXTI)
    1bf8:	89 81       	ldd	r24, Y+1	; 0x01
    1bfa:	28 2f       	mov	r18, r24
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	3b 83       	std	Y+3, r19	; 0x03
    1c00:	2a 83       	std	Y+2, r18	; 0x02
    1c02:	8a 81       	ldd	r24, Y+2	; 0x02
    1c04:	9b 81       	ldd	r25, Y+3	; 0x03
    1c06:	81 30       	cpi	r24, 0x01	; 1
    1c08:	91 05       	cpc	r25, r1
    1c0a:	89 f0       	breq	.+34     	; 0x1c2e <MEXTI_void_disaple_PIE+0x4a>
    1c0c:	2a 81       	ldd	r18, Y+2	; 0x02
    1c0e:	3b 81       	ldd	r19, Y+3	; 0x03
    1c10:	22 30       	cpi	r18, 0x02	; 2
    1c12:	31 05       	cpc	r19, r1
    1c14:	a1 f0       	breq	.+40     	; 0x1c3e <MEXTI_void_disaple_PIE+0x5a>
    1c16:	8a 81       	ldd	r24, Y+2	; 0x02
    1c18:	9b 81       	ldd	r25, Y+3	; 0x03
    1c1a:	00 97       	sbiw	r24, 0x00	; 0
    1c1c:	b9 f4       	brne	.+46     	; 0x1c4c <MEXTI_void_disaple_PIE+0x68>
		{
		case EXTI0:
			CLR_BIT(GICR,External_Interrupt0_Enable_bin);
    1c1e:	ab e5       	ldi	r26, 0x5B	; 91
    1c20:	b0 e0       	ldi	r27, 0x00	; 0
    1c22:	eb e5       	ldi	r30, 0x5B	; 91
    1c24:	f0 e0       	ldi	r31, 0x00	; 0
    1c26:	80 81       	ld	r24, Z
    1c28:	8f 7b       	andi	r24, 0xBF	; 191
    1c2a:	8c 93       	st	X, r24
    1c2c:	0f c0       	rjmp	.+30     	; 0x1c4c <MEXTI_void_disaple_PIE+0x68>
			break;
		case EXTI1:
			CLR_BIT(GICR,External_Interrupt1_Enable_bin);
    1c2e:	ab e5       	ldi	r26, 0x5B	; 91
    1c30:	b0 e0       	ldi	r27, 0x00	; 0
    1c32:	eb e5       	ldi	r30, 0x5B	; 91
    1c34:	f0 e0       	ldi	r31, 0x00	; 0
    1c36:	80 81       	ld	r24, Z
    1c38:	8f 77       	andi	r24, 0x7F	; 127
    1c3a:	8c 93       	st	X, r24
    1c3c:	07 c0       	rjmp	.+14     	; 0x1c4c <MEXTI_void_disaple_PIE+0x68>
			break;
		case EXTI2:
			CLR_BIT(GICR,External_Interrupt2_Enable_bin);
    1c3e:	ab e5       	ldi	r26, 0x5B	; 91
    1c40:	b0 e0       	ldi	r27, 0x00	; 0
    1c42:	eb e5       	ldi	r30, 0x5B	; 91
    1c44:	f0 e0       	ldi	r31, 0x00	; 0
    1c46:	80 81       	ld	r24, Z
    1c48:	8f 7d       	andi	r24, 0xDF	; 223
    1c4a:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
	}
}
    1c4c:	0f 90       	pop	r0
    1c4e:	0f 90       	pop	r0
    1c50:	0f 90       	pop	r0
    1c52:	cf 91       	pop	r28
    1c54:	df 91       	pop	r29
    1c56:	08 95       	ret

00001c58 <MEXTI_void_RESET_PIF>:
void MEXTI_void_RESET_PIF(EXTI_e EXTI)
{
    1c58:	df 93       	push	r29
    1c5a:	cf 93       	push	r28
    1c5c:	00 d0       	rcall	.+0      	; 0x1c5e <MEXTI_void_RESET_PIF+0x6>
    1c5e:	0f 92       	push	r0
    1c60:	cd b7       	in	r28, 0x3d	; 61
    1c62:	de b7       	in	r29, 0x3e	; 62
    1c64:	89 83       	std	Y+1, r24	; 0x01
	if(EXTI<=EXTI2)
    1c66:	89 81       	ldd	r24, Y+1	; 0x01
    1c68:	83 30       	cpi	r24, 0x03	; 3
    1c6a:	50 f5       	brcc	.+84     	; 0x1cc0 <MEXTI_void_RESET_PIF+0x68>
	{
		switch(EXTI)
    1c6c:	89 81       	ldd	r24, Y+1	; 0x01
    1c6e:	28 2f       	mov	r18, r24
    1c70:	30 e0       	ldi	r19, 0x00	; 0
    1c72:	3b 83       	std	Y+3, r19	; 0x03
    1c74:	2a 83       	std	Y+2, r18	; 0x02
    1c76:	8a 81       	ldd	r24, Y+2	; 0x02
    1c78:	9b 81       	ldd	r25, Y+3	; 0x03
    1c7a:	81 30       	cpi	r24, 0x01	; 1
    1c7c:	91 05       	cpc	r25, r1
    1c7e:	89 f0       	breq	.+34     	; 0x1ca2 <MEXTI_void_RESET_PIF+0x4a>
    1c80:	2a 81       	ldd	r18, Y+2	; 0x02
    1c82:	3b 81       	ldd	r19, Y+3	; 0x03
    1c84:	22 30       	cpi	r18, 0x02	; 2
    1c86:	31 05       	cpc	r19, r1
    1c88:	a1 f0       	breq	.+40     	; 0x1cb2 <MEXTI_void_RESET_PIF+0x5a>
    1c8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8e:	00 97       	sbiw	r24, 0x00	; 0
    1c90:	b9 f4       	brne	.+46     	; 0x1cc0 <MEXTI_void_RESET_PIF+0x68>
		{
		case EXTI0:
			SET_BIT(GIFR,External_Interrupt0_Enable_bin);
    1c92:	aa e5       	ldi	r26, 0x5A	; 90
    1c94:	b0 e0       	ldi	r27, 0x00	; 0
    1c96:	ea e5       	ldi	r30, 0x5A	; 90
    1c98:	f0 e0       	ldi	r31, 0x00	; 0
    1c9a:	80 81       	ld	r24, Z
    1c9c:	80 64       	ori	r24, 0x40	; 64
    1c9e:	8c 93       	st	X, r24
    1ca0:	0f c0       	rjmp	.+30     	; 0x1cc0 <MEXTI_void_RESET_PIF+0x68>
			break;
		case EXTI1:
			SET_BIT(GIFR,External_Interrupt1_Enable_bin);
    1ca2:	aa e5       	ldi	r26, 0x5A	; 90
    1ca4:	b0 e0       	ldi	r27, 0x00	; 0
    1ca6:	ea e5       	ldi	r30, 0x5A	; 90
    1ca8:	f0 e0       	ldi	r31, 0x00	; 0
    1caa:	80 81       	ld	r24, Z
    1cac:	80 68       	ori	r24, 0x80	; 128
    1cae:	8c 93       	st	X, r24
    1cb0:	07 c0       	rjmp	.+14     	; 0x1cc0 <MEXTI_void_RESET_PIF+0x68>
			break;
		case EXTI2:
			SET_BIT(GICR,External_Interrupt2_Enable_bin);
    1cb2:	ab e5       	ldi	r26, 0x5B	; 91
    1cb4:	b0 e0       	ldi	r27, 0x00	; 0
    1cb6:	eb e5       	ldi	r30, 0x5B	; 91
    1cb8:	f0 e0       	ldi	r31, 0x00	; 0
    1cba:	80 81       	ld	r24, Z
    1cbc:	80 62       	ori	r24, 0x20	; 32
    1cbe:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
	}
}
    1cc0:	0f 90       	pop	r0
    1cc2:	0f 90       	pop	r0
    1cc4:	0f 90       	pop	r0
    1cc6:	cf 91       	pop	r28
    1cc8:	df 91       	pop	r29
    1cca:	08 95       	ret

00001ccc <MEXTI_void_set_callback_func>:
void MEXTI_void_set_callback_func(EXTI_e EXTI,void (*func) (void))
{
    1ccc:	df 93       	push	r29
    1cce:	cf 93       	push	r28
    1cd0:	00 d0       	rcall	.+0      	; 0x1cd2 <MEXTI_void_set_callback_func+0x6>
    1cd2:	00 d0       	rcall	.+0      	; 0x1cd4 <MEXTI_void_set_callback_func+0x8>
    1cd4:	0f 92       	push	r0
    1cd6:	cd b7       	in	r28, 0x3d	; 61
    1cd8:	de b7       	in	r29, 0x3e	; 62
    1cda:	89 83       	std	Y+1, r24	; 0x01
    1cdc:	7b 83       	std	Y+3, r23	; 0x03
    1cde:	6a 83       	std	Y+2, r22	; 0x02
	if(EXTI<=EXTI2 && func!=NULL)
    1ce0:	89 81       	ldd	r24, Y+1	; 0x01
    1ce2:	83 30       	cpi	r24, 0x03	; 3
    1ce4:	b8 f5       	brcc	.+110    	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
    1ce6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce8:	9b 81       	ldd	r25, Y+3	; 0x03
    1cea:	00 97       	sbiw	r24, 0x00	; 0
    1cec:	99 f1       	breq	.+102    	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
	{
		switch(EXTI)
    1cee:	89 81       	ldd	r24, Y+1	; 0x01
    1cf0:	28 2f       	mov	r18, r24
    1cf2:	30 e0       	ldi	r19, 0x00	; 0
    1cf4:	3d 83       	std	Y+5, r19	; 0x05
    1cf6:	2c 83       	std	Y+4, r18	; 0x04
    1cf8:	8c 81       	ldd	r24, Y+4	; 0x04
    1cfa:	9d 81       	ldd	r25, Y+5	; 0x05
    1cfc:	81 30       	cpi	r24, 0x01	; 1
    1cfe:	91 05       	cpc	r25, r1
    1d00:	a1 f0       	breq	.+40     	; 0x1d2a <MEXTI_void_set_callback_func+0x5e>
    1d02:	2c 81       	ldd	r18, Y+4	; 0x04
    1d04:	3d 81       	ldd	r19, Y+5	; 0x05
    1d06:	22 30       	cpi	r18, 0x02	; 2
    1d08:	31 05       	cpc	r19, r1
    1d0a:	d1 f0       	breq	.+52     	; 0x1d40 <MEXTI_void_set_callback_func+0x74>
    1d0c:	8c 81       	ldd	r24, Y+4	; 0x04
    1d0e:	9d 81       	ldd	r25, Y+5	; 0x05
    1d10:	00 97       	sbiw	r24, 0x00	; 0
    1d12:	01 f5       	brne	.+64     	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
		{
		case EXTI0:
			if(func !=NULL)
    1d14:	8a 81       	ldd	r24, Y+2	; 0x02
    1d16:	9b 81       	ldd	r25, Y+3	; 0x03
    1d18:	00 97       	sbiw	r24, 0x00	; 0
    1d1a:	e1 f0       	breq	.+56     	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
			{
				callback_EXTI0=func;
    1d1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d20:	90 93 b1 01 	sts	0x01B1, r25
    1d24:	80 93 b0 01 	sts	0x01B0, r24
    1d28:	15 c0       	rjmp	.+42     	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
			}
			break;
		case EXTI1:
			if(func !=NULL)
    1d2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d2c:	9b 81       	ldd	r25, Y+3	; 0x03
    1d2e:	00 97       	sbiw	r24, 0x00	; 0
    1d30:	89 f0       	breq	.+34     	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
			{
				callback_EXTI1=func;
    1d32:	8a 81       	ldd	r24, Y+2	; 0x02
    1d34:	9b 81       	ldd	r25, Y+3	; 0x03
    1d36:	90 93 b3 01 	sts	0x01B3, r25
    1d3a:	80 93 b2 01 	sts	0x01B2, r24
    1d3e:	0a c0       	rjmp	.+20     	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
			}
			break;
		case EXTI2:
			if(func !=NULL)
    1d40:	8a 81       	ldd	r24, Y+2	; 0x02
    1d42:	9b 81       	ldd	r25, Y+3	; 0x03
    1d44:	00 97       	sbiw	r24, 0x00	; 0
    1d46:	31 f0       	breq	.+12     	; 0x1d54 <MEXTI_void_set_callback_func+0x88>
			{
				callback_EXTI2=func;
    1d48:	8a 81       	ldd	r24, Y+2	; 0x02
    1d4a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d4c:	90 93 b5 01 	sts	0x01B5, r25
    1d50:	80 93 b4 01 	sts	0x01B4, r24
			break;
		default:
			break;
		}
	}
}
    1d54:	0f 90       	pop	r0
    1d56:	0f 90       	pop	r0
    1d58:	0f 90       	pop	r0
    1d5a:	0f 90       	pop	r0
    1d5c:	0f 90       	pop	r0
    1d5e:	cf 91       	pop	r28
    1d60:	df 91       	pop	r29
    1d62:	08 95       	ret

00001d64 <__vector_1>:
void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
    1d64:	1f 92       	push	r1
    1d66:	0f 92       	push	r0
    1d68:	0f b6       	in	r0, 0x3f	; 63
    1d6a:	0f 92       	push	r0
    1d6c:	11 24       	eor	r1, r1
    1d6e:	2f 93       	push	r18
    1d70:	3f 93       	push	r19
    1d72:	4f 93       	push	r20
    1d74:	5f 93       	push	r21
    1d76:	6f 93       	push	r22
    1d78:	7f 93       	push	r23
    1d7a:	8f 93       	push	r24
    1d7c:	9f 93       	push	r25
    1d7e:	af 93       	push	r26
    1d80:	bf 93       	push	r27
    1d82:	ef 93       	push	r30
    1d84:	ff 93       	push	r31
    1d86:	df 93       	push	r29
    1d88:	cf 93       	push	r28
    1d8a:	cd b7       	in	r28, 0x3d	; 61
    1d8c:	de b7       	in	r29, 0x3e	; 62
	callback_EXTI0();
    1d8e:	e0 91 b0 01 	lds	r30, 0x01B0
    1d92:	f0 91 b1 01 	lds	r31, 0x01B1
    1d96:	09 95       	icall
}
    1d98:	cf 91       	pop	r28
    1d9a:	df 91       	pop	r29
    1d9c:	ff 91       	pop	r31
    1d9e:	ef 91       	pop	r30
    1da0:	bf 91       	pop	r27
    1da2:	af 91       	pop	r26
    1da4:	9f 91       	pop	r25
    1da6:	8f 91       	pop	r24
    1da8:	7f 91       	pop	r23
    1daa:	6f 91       	pop	r22
    1dac:	5f 91       	pop	r21
    1dae:	4f 91       	pop	r20
    1db0:	3f 91       	pop	r19
    1db2:	2f 91       	pop	r18
    1db4:	0f 90       	pop	r0
    1db6:	0f be       	out	0x3f, r0	; 63
    1db8:	0f 90       	pop	r0
    1dba:	1f 90       	pop	r1
    1dbc:	18 95       	reti

00001dbe <__vector_2>:
void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
    1dbe:	1f 92       	push	r1
    1dc0:	0f 92       	push	r0
    1dc2:	0f b6       	in	r0, 0x3f	; 63
    1dc4:	0f 92       	push	r0
    1dc6:	11 24       	eor	r1, r1
    1dc8:	2f 93       	push	r18
    1dca:	3f 93       	push	r19
    1dcc:	4f 93       	push	r20
    1dce:	5f 93       	push	r21
    1dd0:	6f 93       	push	r22
    1dd2:	7f 93       	push	r23
    1dd4:	8f 93       	push	r24
    1dd6:	9f 93       	push	r25
    1dd8:	af 93       	push	r26
    1dda:	bf 93       	push	r27
    1ddc:	ef 93       	push	r30
    1dde:	ff 93       	push	r31
    1de0:	df 93       	push	r29
    1de2:	cf 93       	push	r28
    1de4:	cd b7       	in	r28, 0x3d	; 61
    1de6:	de b7       	in	r29, 0x3e	; 62
	callback_EXTI1();
    1de8:	e0 91 b2 01 	lds	r30, 0x01B2
    1dec:	f0 91 b3 01 	lds	r31, 0x01B3
    1df0:	09 95       	icall
}
    1df2:	cf 91       	pop	r28
    1df4:	df 91       	pop	r29
    1df6:	ff 91       	pop	r31
    1df8:	ef 91       	pop	r30
    1dfa:	bf 91       	pop	r27
    1dfc:	af 91       	pop	r26
    1dfe:	9f 91       	pop	r25
    1e00:	8f 91       	pop	r24
    1e02:	7f 91       	pop	r23
    1e04:	6f 91       	pop	r22
    1e06:	5f 91       	pop	r21
    1e08:	4f 91       	pop	r20
    1e0a:	3f 91       	pop	r19
    1e0c:	2f 91       	pop	r18
    1e0e:	0f 90       	pop	r0
    1e10:	0f be       	out	0x3f, r0	; 63
    1e12:	0f 90       	pop	r0
    1e14:	1f 90       	pop	r1
    1e16:	18 95       	reti

00001e18 <__vector_3>:
void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
    1e18:	1f 92       	push	r1
    1e1a:	0f 92       	push	r0
    1e1c:	0f b6       	in	r0, 0x3f	; 63
    1e1e:	0f 92       	push	r0
    1e20:	11 24       	eor	r1, r1
    1e22:	2f 93       	push	r18
    1e24:	3f 93       	push	r19
    1e26:	4f 93       	push	r20
    1e28:	5f 93       	push	r21
    1e2a:	6f 93       	push	r22
    1e2c:	7f 93       	push	r23
    1e2e:	8f 93       	push	r24
    1e30:	9f 93       	push	r25
    1e32:	af 93       	push	r26
    1e34:	bf 93       	push	r27
    1e36:	ef 93       	push	r30
    1e38:	ff 93       	push	r31
    1e3a:	df 93       	push	r29
    1e3c:	cf 93       	push	r28
    1e3e:	cd b7       	in	r28, 0x3d	; 61
    1e40:	de b7       	in	r29, 0x3e	; 62
	callback_EXTI2();
    1e42:	e0 91 b4 01 	lds	r30, 0x01B4
    1e46:	f0 91 b5 01 	lds	r31, 0x01B5
    1e4a:	09 95       	icall
}
    1e4c:	cf 91       	pop	r28
    1e4e:	df 91       	pop	r29
    1e50:	ff 91       	pop	r31
    1e52:	ef 91       	pop	r30
    1e54:	bf 91       	pop	r27
    1e56:	af 91       	pop	r26
    1e58:	9f 91       	pop	r25
    1e5a:	8f 91       	pop	r24
    1e5c:	7f 91       	pop	r23
    1e5e:	6f 91       	pop	r22
    1e60:	5f 91       	pop	r21
    1e62:	4f 91       	pop	r20
    1e64:	3f 91       	pop	r19
    1e66:	2f 91       	pop	r18
    1e68:	0f 90       	pop	r0
    1e6a:	0f be       	out	0x3f, r0	; 63
    1e6c:	0f 90       	pop	r0
    1e6e:	1f 90       	pop	r1
    1e70:	18 95       	reti

00001e72 <MGI_enable_GI>:
#include "../include/MCAL/DIO/DIO_Interface.h"
#include "../include/MCAL/global_interrrupt/GI_cfg.h"
#include "../include/MCAL/global_interrrupt/GI_interface.h"
#include "../include/MCAL/global_interrrupt/GI_private.h"
void MGI_enable_GI(void)
{
    1e72:	df 93       	push	r29
    1e74:	cf 93       	push	r28
    1e76:	cd b7       	in	r28, 0x3d	; 61
    1e78:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,GLOBAL_INTERRUPT_ENABLE_BIT);
    1e7a:	af e5       	ldi	r26, 0x5F	; 95
    1e7c:	b0 e0       	ldi	r27, 0x00	; 0
    1e7e:	ef e5       	ldi	r30, 0x5F	; 95
    1e80:	f0 e0       	ldi	r31, 0x00	; 0
    1e82:	80 81       	ld	r24, Z
    1e84:	80 68       	ori	r24, 0x80	; 128
    1e86:	8c 93       	st	X, r24
}
    1e88:	cf 91       	pop	r28
    1e8a:	df 91       	pop	r29
    1e8c:	08 95       	ret

00001e8e <MGI_disable_GI>:
void MGI_disable_GI(void)
{
    1e8e:	df 93       	push	r29
    1e90:	cf 93       	push	r28
    1e92:	cd b7       	in	r28, 0x3d	; 61
    1e94:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,GLOBAL_INTERRUPT_ENABLE_BIT);
    1e96:	af e5       	ldi	r26, 0x5F	; 95
    1e98:	b0 e0       	ldi	r27, 0x00	; 0
    1e9a:	ef e5       	ldi	r30, 0x5F	; 95
    1e9c:	f0 e0       	ldi	r31, 0x00	; 0
    1e9e:	80 81       	ld	r24, Z
    1ea0:	8f 77       	andi	r24, 0x7F	; 127
    1ea2:	8c 93       	st	X, r24
}
    1ea4:	cf 91       	pop	r28
    1ea6:	df 91       	pop	r29
    1ea8:	08 95       	ret

00001eaa <HLCD_void_SEND_COMMEND>:
#include "../include/HAL/LCD/LCD_Private.h"
#include  <util/delay.h>
#include  <stdlib.h>

void HLCD_void_SEND_COMMEND(u8 A_COMAND)
{
    1eaa:	df 93       	push	r29
    1eac:	cf 93       	push	r28
    1eae:	cd b7       	in	r28, 0x3d	; 61
    1eb0:	de b7       	in	r29, 0x3e	; 62
    1eb2:	2f 97       	sbiw	r28, 0x0f	; 15
    1eb4:	0f b6       	in	r0, 0x3f	; 63
    1eb6:	f8 94       	cli
    1eb8:	de bf       	out	0x3e, r29	; 62
    1eba:	0f be       	out	0x3f, r0	; 63
    1ebc:	cd bf       	out	0x3d, r28	; 61
    1ebe:	8f 87       	std	Y+15, r24	; 0x0f
	/*to send command RS->0 RW->0*/
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,DIO_RESET);
    1ec0:	82 e0       	ldi	r24, 0x02	; 2
    1ec2:	60 e0       	ldi	r22, 0x00	; 0
    1ec4:	40 e0       	ldi	r20, 0x00	; 0
    1ec6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,DIO_RESET);
    1eca:	82 e0       	ldi	r24, 0x02	; 2
    1ecc:	61 e0       	ldi	r22, 0x01	; 1
    1ece:	40 e0       	ldi	r20, 0x00	; 0
    1ed0:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	/* send command*/
	MDIO_voidSetPortValue(LCD_DATA_PORT,A_COMAND);
    1ed4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ed6:	28 2f       	mov	r18, r24
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	80 e0       	ldi	r24, 0x00	; 0
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	b9 01       	movw	r22, r18
    1ee0:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
	/*E pulse*/
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,DIO_SET);
    1ee4:	82 e0       	ldi	r24, 0x02	; 2
    1ee6:	62 e0       	ldi	r22, 0x02	; 2
    1ee8:	41 e0       	ldi	r20, 0x01	; 1
    1eea:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
    1eee:	80 e0       	ldi	r24, 0x00	; 0
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	a0 e0       	ldi	r26, 0x00	; 0
    1ef4:	b0 e4       	ldi	r27, 0x40	; 64
    1ef6:	8b 87       	std	Y+11, r24	; 0x0b
    1ef8:	9c 87       	std	Y+12, r25	; 0x0c
    1efa:	ad 87       	std	Y+13, r26	; 0x0d
    1efc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1efe:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f00:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f02:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f04:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f06:	20 e0       	ldi	r18, 0x00	; 0
    1f08:	30 e0       	ldi	r19, 0x00	; 0
    1f0a:	4a ef       	ldi	r20, 0xFA	; 250
    1f0c:	54 e4       	ldi	r21, 0x44	; 68
    1f0e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    1f12:	dc 01       	movw	r26, r24
    1f14:	cb 01       	movw	r24, r22
    1f16:	8f 83       	std	Y+7, r24	; 0x07
    1f18:	98 87       	std	Y+8, r25	; 0x08
    1f1a:	a9 87       	std	Y+9, r26	; 0x09
    1f1c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f1e:	6f 81       	ldd	r22, Y+7	; 0x07
    1f20:	78 85       	ldd	r23, Y+8	; 0x08
    1f22:	89 85       	ldd	r24, Y+9	; 0x09
    1f24:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f26:	20 e0       	ldi	r18, 0x00	; 0
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	40 e8       	ldi	r20, 0x80	; 128
    1f2c:	5f e3       	ldi	r21, 0x3F	; 63
    1f2e:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    1f32:	88 23       	and	r24, r24
    1f34:	2c f4       	brge	.+10     	; 0x1f40 <HLCD_void_SEND_COMMEND+0x96>
		__ticks = 1;
    1f36:	81 e0       	ldi	r24, 0x01	; 1
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	9e 83       	std	Y+6, r25	; 0x06
    1f3c:	8d 83       	std	Y+5, r24	; 0x05
    1f3e:	3f c0       	rjmp	.+126    	; 0x1fbe <HLCD_void_SEND_COMMEND+0x114>
	else if (__tmp > 65535)
    1f40:	6f 81       	ldd	r22, Y+7	; 0x07
    1f42:	78 85       	ldd	r23, Y+8	; 0x08
    1f44:	89 85       	ldd	r24, Y+9	; 0x09
    1f46:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	3f ef       	ldi	r19, 0xFF	; 255
    1f4c:	4f e7       	ldi	r20, 0x7F	; 127
    1f4e:	57 e4       	ldi	r21, 0x47	; 71
    1f50:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    1f54:	18 16       	cp	r1, r24
    1f56:	4c f5       	brge	.+82     	; 0x1faa <HLCD_void_SEND_COMMEND+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f58:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f5a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f5c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f5e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f60:	20 e0       	ldi	r18, 0x00	; 0
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	40 e2       	ldi	r20, 0x20	; 32
    1f66:	51 e4       	ldi	r21, 0x41	; 65
    1f68:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    1f6c:	dc 01       	movw	r26, r24
    1f6e:	cb 01       	movw	r24, r22
    1f70:	bc 01       	movw	r22, r24
    1f72:	cd 01       	movw	r24, r26
    1f74:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1f78:	dc 01       	movw	r26, r24
    1f7a:	cb 01       	movw	r24, r22
    1f7c:	9e 83       	std	Y+6, r25	; 0x06
    1f7e:	8d 83       	std	Y+5, r24	; 0x05
    1f80:	0f c0       	rjmp	.+30     	; 0x1fa0 <HLCD_void_SEND_COMMEND+0xf6>
    1f82:	88 ec       	ldi	r24, 0xC8	; 200
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	9c 83       	std	Y+4, r25	; 0x04
    1f88:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1f8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f8c:	9c 81       	ldd	r25, Y+4	; 0x04
    1f8e:	01 97       	sbiw	r24, 0x01	; 1
    1f90:	f1 f7       	brne	.-4      	; 0x1f8e <HLCD_void_SEND_COMMEND+0xe4>
    1f92:	9c 83       	std	Y+4, r25	; 0x04
    1f94:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f96:	8d 81       	ldd	r24, Y+5	; 0x05
    1f98:	9e 81       	ldd	r25, Y+6	; 0x06
    1f9a:	01 97       	sbiw	r24, 0x01	; 1
    1f9c:	9e 83       	std	Y+6, r25	; 0x06
    1f9e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fa0:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa2:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa4:	00 97       	sbiw	r24, 0x00	; 0
    1fa6:	69 f7       	brne	.-38     	; 0x1f82 <HLCD_void_SEND_COMMEND+0xd8>
    1fa8:	14 c0       	rjmp	.+40     	; 0x1fd2 <HLCD_void_SEND_COMMEND+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1faa:	6f 81       	ldd	r22, Y+7	; 0x07
    1fac:	78 85       	ldd	r23, Y+8	; 0x08
    1fae:	89 85       	ldd	r24, Y+9	; 0x09
    1fb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fb2:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1fb6:	dc 01       	movw	r26, r24
    1fb8:	cb 01       	movw	r24, r22
    1fba:	9e 83       	std	Y+6, r25	; 0x06
    1fbc:	8d 83       	std	Y+5, r24	; 0x05
    1fbe:	8d 81       	ldd	r24, Y+5	; 0x05
    1fc0:	9e 81       	ldd	r25, Y+6	; 0x06
    1fc2:	9a 83       	std	Y+2, r25	; 0x02
    1fc4:	89 83       	std	Y+1, r24	; 0x01
    1fc6:	89 81       	ldd	r24, Y+1	; 0x01
    1fc8:	9a 81       	ldd	r25, Y+2	; 0x02
    1fca:	01 97       	sbiw	r24, 0x01	; 1
    1fcc:	f1 f7       	brne	.-4      	; 0x1fca <HLCD_void_SEND_COMMEND+0x120>
    1fce:	9a 83       	std	Y+2, r25	; 0x02
    1fd0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,DIO_RESET);
    1fd2:	82 e0       	ldi	r24, 0x02	; 2
    1fd4:	62 e0       	ldi	r22, 0x02	; 2
    1fd6:	40 e0       	ldi	r20, 0x00	; 0
    1fd8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    1fdc:	2f 96       	adiw	r28, 0x0f	; 15
    1fde:	0f b6       	in	r0, 0x3f	; 63
    1fe0:	f8 94       	cli
    1fe2:	de bf       	out	0x3e, r29	; 62
    1fe4:	0f be       	out	0x3f, r0	; 63
    1fe6:	cd bf       	out	0x3d, r28	; 61
    1fe8:	cf 91       	pop	r28
    1fea:	df 91       	pop	r29
    1fec:	08 95       	ret

00001fee <HLCD_void_SEND_DATA>:
void HLCD_void_SEND_DATA(u8 A_DATA)
{
    1fee:	df 93       	push	r29
    1ff0:	cf 93       	push	r28
    1ff2:	cd b7       	in	r28, 0x3d	; 61
    1ff4:	de b7       	in	r29, 0x3e	; 62
    1ff6:	2f 97       	sbiw	r28, 0x0f	; 15
    1ff8:	0f b6       	in	r0, 0x3f	; 63
    1ffa:	f8 94       	cli
    1ffc:	de bf       	out	0x3e, r29	; 62
    1ffe:	0f be       	out	0x3f, r0	; 63
    2000:	cd bf       	out	0x3d, r28	; 61
    2002:	8f 87       	std	Y+15, r24	; 0x0f
	/*to send command RS->1 RW->0*/
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,DIO_SET);
    2004:	82 e0       	ldi	r24, 0x02	; 2
    2006:	60 e0       	ldi	r22, 0x00	; 0
    2008:	41 e0       	ldi	r20, 0x01	; 1
    200a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,DIO_RESET);
    200e:	82 e0       	ldi	r24, 0x02	; 2
    2010:	61 e0       	ldi	r22, 0x01	; 1
    2012:	40 e0       	ldi	r20, 0x00	; 0
    2014:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	/* send data*/
	MDIO_voidSetPortValue(LCD_DATA_PORT,A_DATA);
    2018:	8f 85       	ldd	r24, Y+15	; 0x0f
    201a:	28 2f       	mov	r18, r24
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	80 e0       	ldi	r24, 0x00	; 0
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	b9 01       	movw	r22, r18
    2024:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
	/*E pulse*/
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,DIO_SET);
    2028:	82 e0       	ldi	r24, 0x02	; 2
    202a:	62 e0       	ldi	r22, 0x02	; 2
    202c:	41 e0       	ldi	r20, 0x01	; 1
    202e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
    2032:	80 e0       	ldi	r24, 0x00	; 0
    2034:	90 e0       	ldi	r25, 0x00	; 0
    2036:	a0 e0       	ldi	r26, 0x00	; 0
    2038:	b0 e4       	ldi	r27, 0x40	; 64
    203a:	8b 87       	std	Y+11, r24	; 0x0b
    203c:	9c 87       	std	Y+12, r25	; 0x0c
    203e:	ad 87       	std	Y+13, r26	; 0x0d
    2040:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2042:	6b 85       	ldd	r22, Y+11	; 0x0b
    2044:	7c 85       	ldd	r23, Y+12	; 0x0c
    2046:	8d 85       	ldd	r24, Y+13	; 0x0d
    2048:	9e 85       	ldd	r25, Y+14	; 0x0e
    204a:	20 e0       	ldi	r18, 0x00	; 0
    204c:	30 e0       	ldi	r19, 0x00	; 0
    204e:	4a ef       	ldi	r20, 0xFA	; 250
    2050:	54 e4       	ldi	r21, 0x44	; 68
    2052:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2056:	dc 01       	movw	r26, r24
    2058:	cb 01       	movw	r24, r22
    205a:	8f 83       	std	Y+7, r24	; 0x07
    205c:	98 87       	std	Y+8, r25	; 0x08
    205e:	a9 87       	std	Y+9, r26	; 0x09
    2060:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2062:	6f 81       	ldd	r22, Y+7	; 0x07
    2064:	78 85       	ldd	r23, Y+8	; 0x08
    2066:	89 85       	ldd	r24, Y+9	; 0x09
    2068:	9a 85       	ldd	r25, Y+10	; 0x0a
    206a:	20 e0       	ldi	r18, 0x00	; 0
    206c:	30 e0       	ldi	r19, 0x00	; 0
    206e:	40 e8       	ldi	r20, 0x80	; 128
    2070:	5f e3       	ldi	r21, 0x3F	; 63
    2072:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    2076:	88 23       	and	r24, r24
    2078:	2c f4       	brge	.+10     	; 0x2084 <HLCD_void_SEND_DATA+0x96>
		__ticks = 1;
    207a:	81 e0       	ldi	r24, 0x01	; 1
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	9e 83       	std	Y+6, r25	; 0x06
    2080:	8d 83       	std	Y+5, r24	; 0x05
    2082:	3f c0       	rjmp	.+126    	; 0x2102 <HLCD_void_SEND_DATA+0x114>
	else if (__tmp > 65535)
    2084:	6f 81       	ldd	r22, Y+7	; 0x07
    2086:	78 85       	ldd	r23, Y+8	; 0x08
    2088:	89 85       	ldd	r24, Y+9	; 0x09
    208a:	9a 85       	ldd	r25, Y+10	; 0x0a
    208c:	20 e0       	ldi	r18, 0x00	; 0
    208e:	3f ef       	ldi	r19, 0xFF	; 255
    2090:	4f e7       	ldi	r20, 0x7F	; 127
    2092:	57 e4       	ldi	r21, 0x47	; 71
    2094:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    2098:	18 16       	cp	r1, r24
    209a:	4c f5       	brge	.+82     	; 0x20ee <HLCD_void_SEND_DATA+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    209c:	6b 85       	ldd	r22, Y+11	; 0x0b
    209e:	7c 85       	ldd	r23, Y+12	; 0x0c
    20a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    20a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    20a4:	20 e0       	ldi	r18, 0x00	; 0
    20a6:	30 e0       	ldi	r19, 0x00	; 0
    20a8:	40 e2       	ldi	r20, 0x20	; 32
    20aa:	51 e4       	ldi	r21, 0x41	; 65
    20ac:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    20b0:	dc 01       	movw	r26, r24
    20b2:	cb 01       	movw	r24, r22
    20b4:	bc 01       	movw	r22, r24
    20b6:	cd 01       	movw	r24, r26
    20b8:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    20bc:	dc 01       	movw	r26, r24
    20be:	cb 01       	movw	r24, r22
    20c0:	9e 83       	std	Y+6, r25	; 0x06
    20c2:	8d 83       	std	Y+5, r24	; 0x05
    20c4:	0f c0       	rjmp	.+30     	; 0x20e4 <HLCD_void_SEND_DATA+0xf6>
    20c6:	88 ec       	ldi	r24, 0xC8	; 200
    20c8:	90 e0       	ldi	r25, 0x00	; 0
    20ca:	9c 83       	std	Y+4, r25	; 0x04
    20cc:	8b 83       	std	Y+3, r24	; 0x03
    20ce:	8b 81       	ldd	r24, Y+3	; 0x03
    20d0:	9c 81       	ldd	r25, Y+4	; 0x04
    20d2:	01 97       	sbiw	r24, 0x01	; 1
    20d4:	f1 f7       	brne	.-4      	; 0x20d2 <HLCD_void_SEND_DATA+0xe4>
    20d6:	9c 83       	std	Y+4, r25	; 0x04
    20d8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20da:	8d 81       	ldd	r24, Y+5	; 0x05
    20dc:	9e 81       	ldd	r25, Y+6	; 0x06
    20de:	01 97       	sbiw	r24, 0x01	; 1
    20e0:	9e 83       	std	Y+6, r25	; 0x06
    20e2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20e4:	8d 81       	ldd	r24, Y+5	; 0x05
    20e6:	9e 81       	ldd	r25, Y+6	; 0x06
    20e8:	00 97       	sbiw	r24, 0x00	; 0
    20ea:	69 f7       	brne	.-38     	; 0x20c6 <HLCD_void_SEND_DATA+0xd8>
    20ec:	14 c0       	rjmp	.+40     	; 0x2116 <HLCD_void_SEND_DATA+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20ee:	6f 81       	ldd	r22, Y+7	; 0x07
    20f0:	78 85       	ldd	r23, Y+8	; 0x08
    20f2:	89 85       	ldd	r24, Y+9	; 0x09
    20f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    20f6:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    20fa:	dc 01       	movw	r26, r24
    20fc:	cb 01       	movw	r24, r22
    20fe:	9e 83       	std	Y+6, r25	; 0x06
    2100:	8d 83       	std	Y+5, r24	; 0x05
    2102:	8d 81       	ldd	r24, Y+5	; 0x05
    2104:	9e 81       	ldd	r25, Y+6	; 0x06
    2106:	9a 83       	std	Y+2, r25	; 0x02
    2108:	89 83       	std	Y+1, r24	; 0x01
    210a:	89 81       	ldd	r24, Y+1	; 0x01
    210c:	9a 81       	ldd	r25, Y+2	; 0x02
    210e:	01 97       	sbiw	r24, 0x01	; 1
    2110:	f1 f7       	brne	.-4      	; 0x210e <HLCD_void_SEND_DATA+0x120>
    2112:	9a 83       	std	Y+2, r25	; 0x02
    2114:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_voidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,DIO_RESET);
    2116:	82 e0       	ldi	r24, 0x02	; 2
    2118:	62 e0       	ldi	r22, 0x02	; 2
    211a:	40 e0       	ldi	r20, 0x00	; 0
    211c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    2120:	2f 96       	adiw	r28, 0x0f	; 15
    2122:	0f b6       	in	r0, 0x3f	; 63
    2124:	f8 94       	cli
    2126:	de bf       	out	0x3e, r29	; 62
    2128:	0f be       	out	0x3f, r0	; 63
    212a:	cd bf       	out	0x3d, r28	; 61
    212c:	cf 91       	pop	r28
    212e:	df 91       	pop	r29
    2130:	08 95       	ret

00002132 <HLCD_void_init>:
void HLCD_void_init(void)
{
    2132:	df 93       	push	r29
    2134:	cf 93       	push	r28
    2136:	cd b7       	in	r28, 0x3d	; 61
    2138:	de b7       	in	r29, 0x3e	; 62
    213a:	e8 97       	sbiw	r28, 0x38	; 56
    213c:	0f b6       	in	r0, 0x3f	; 63
    213e:	f8 94       	cli
    2140:	de bf       	out	0x3e, r29	; 62
    2142:	0f be       	out	0x3f, r0	; 63
    2144:	cd bf       	out	0x3d, r28	; 61
    2146:	80 e0       	ldi	r24, 0x00	; 0
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	a0 e8       	ldi	r26, 0x80	; 128
    214c:	bf e3       	ldi	r27, 0x3F	; 63
    214e:	8d ab       	std	Y+53, r24	; 0x35
    2150:	9e ab       	std	Y+54, r25	; 0x36
    2152:	af ab       	std	Y+55, r26	; 0x37
    2154:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2156:	6d a9       	ldd	r22, Y+53	; 0x35
    2158:	7e a9       	ldd	r23, Y+54	; 0x36
    215a:	8f a9       	ldd	r24, Y+55	; 0x37
    215c:	98 ad       	ldd	r25, Y+56	; 0x38
    215e:	20 e0       	ldi	r18, 0x00	; 0
    2160:	30 e0       	ldi	r19, 0x00	; 0
    2162:	4a ef       	ldi	r20, 0xFA	; 250
    2164:	54 e4       	ldi	r21, 0x44	; 68
    2166:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    216a:	dc 01       	movw	r26, r24
    216c:	cb 01       	movw	r24, r22
    216e:	89 ab       	std	Y+49, r24	; 0x31
    2170:	9a ab       	std	Y+50, r25	; 0x32
    2172:	ab ab       	std	Y+51, r26	; 0x33
    2174:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2176:	69 a9       	ldd	r22, Y+49	; 0x31
    2178:	7a a9       	ldd	r23, Y+50	; 0x32
    217a:	8b a9       	ldd	r24, Y+51	; 0x33
    217c:	9c a9       	ldd	r25, Y+52	; 0x34
    217e:	20 e0       	ldi	r18, 0x00	; 0
    2180:	30 e0       	ldi	r19, 0x00	; 0
    2182:	40 e8       	ldi	r20, 0x80	; 128
    2184:	5f e3       	ldi	r21, 0x3F	; 63
    2186:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    218a:	88 23       	and	r24, r24
    218c:	2c f4       	brge	.+10     	; 0x2198 <HLCD_void_init+0x66>
		__ticks = 1;
    218e:	81 e0       	ldi	r24, 0x01	; 1
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	98 ab       	std	Y+48, r25	; 0x30
    2194:	8f a7       	std	Y+47, r24	; 0x2f
    2196:	3f c0       	rjmp	.+126    	; 0x2216 <HLCD_void_init+0xe4>
	else if (__tmp > 65535)
    2198:	69 a9       	ldd	r22, Y+49	; 0x31
    219a:	7a a9       	ldd	r23, Y+50	; 0x32
    219c:	8b a9       	ldd	r24, Y+51	; 0x33
    219e:	9c a9       	ldd	r25, Y+52	; 0x34
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	3f ef       	ldi	r19, 0xFF	; 255
    21a4:	4f e7       	ldi	r20, 0x7F	; 127
    21a6:	57 e4       	ldi	r21, 0x47	; 71
    21a8:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    21ac:	18 16       	cp	r1, r24
    21ae:	4c f5       	brge	.+82     	; 0x2202 <HLCD_void_init+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21b0:	6d a9       	ldd	r22, Y+53	; 0x35
    21b2:	7e a9       	ldd	r23, Y+54	; 0x36
    21b4:	8f a9       	ldd	r24, Y+55	; 0x37
    21b6:	98 ad       	ldd	r25, Y+56	; 0x38
    21b8:	20 e0       	ldi	r18, 0x00	; 0
    21ba:	30 e0       	ldi	r19, 0x00	; 0
    21bc:	40 e2       	ldi	r20, 0x20	; 32
    21be:	51 e4       	ldi	r21, 0x41	; 65
    21c0:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    21c4:	dc 01       	movw	r26, r24
    21c6:	cb 01       	movw	r24, r22
    21c8:	bc 01       	movw	r22, r24
    21ca:	cd 01       	movw	r24, r26
    21cc:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    21d0:	dc 01       	movw	r26, r24
    21d2:	cb 01       	movw	r24, r22
    21d4:	98 ab       	std	Y+48, r25	; 0x30
    21d6:	8f a7       	std	Y+47, r24	; 0x2f
    21d8:	0f c0       	rjmp	.+30     	; 0x21f8 <HLCD_void_init+0xc6>
    21da:	88 ec       	ldi	r24, 0xC8	; 200
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	9e a7       	std	Y+46, r25	; 0x2e
    21e0:	8d a7       	std	Y+45, r24	; 0x2d
    21e2:	8d a5       	ldd	r24, Y+45	; 0x2d
    21e4:	9e a5       	ldd	r25, Y+46	; 0x2e
    21e6:	01 97       	sbiw	r24, 0x01	; 1
    21e8:	f1 f7       	brne	.-4      	; 0x21e6 <HLCD_void_init+0xb4>
    21ea:	9e a7       	std	Y+46, r25	; 0x2e
    21ec:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    21f0:	98 a9       	ldd	r25, Y+48	; 0x30
    21f2:	01 97       	sbiw	r24, 0x01	; 1
    21f4:	98 ab       	std	Y+48, r25	; 0x30
    21f6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    21fa:	98 a9       	ldd	r25, Y+48	; 0x30
    21fc:	00 97       	sbiw	r24, 0x00	; 0
    21fe:	69 f7       	brne	.-38     	; 0x21da <HLCD_void_init+0xa8>
    2200:	14 c0       	rjmp	.+40     	; 0x222a <HLCD_void_init+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2202:	69 a9       	ldd	r22, Y+49	; 0x31
    2204:	7a a9       	ldd	r23, Y+50	; 0x32
    2206:	8b a9       	ldd	r24, Y+51	; 0x33
    2208:	9c a9       	ldd	r25, Y+52	; 0x34
    220a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    220e:	dc 01       	movw	r26, r24
    2210:	cb 01       	movw	r24, r22
    2212:	98 ab       	std	Y+48, r25	; 0x30
    2214:	8f a7       	std	Y+47, r24	; 0x2f
    2216:	8f a5       	ldd	r24, Y+47	; 0x2f
    2218:	98 a9       	ldd	r25, Y+48	; 0x30
    221a:	9c a7       	std	Y+44, r25	; 0x2c
    221c:	8b a7       	std	Y+43, r24	; 0x2b
    221e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2220:	9c a5       	ldd	r25, Y+44	; 0x2c
    2222:	01 97       	sbiw	r24, 0x01	; 1
    2224:	f1 f7       	brne	.-4      	; 0x2222 <HLCD_void_init+0xf0>
    2226:	9c a7       	std	Y+44, r25	; 0x2c
    2228:	8b a7       	std	Y+43, r24	; 0x2b
/* 8bit mode*/

	/*wait for more than 30micro second after VDD rises to 4.5v*/
	_delay_ms(1);
	HLCD_void_SEND_COMMEND(FUNCTION_SET);
    222a:	8c e3       	ldi	r24, 0x3C	; 60
    222c:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
    2230:	80 e0       	ldi	r24, 0x00	; 0
    2232:	90 e0       	ldi	r25, 0x00	; 0
    2234:	a0 e8       	ldi	r26, 0x80	; 128
    2236:	bf e3       	ldi	r27, 0x3F	; 63
    2238:	8f a3       	std	Y+39, r24	; 0x27
    223a:	98 a7       	std	Y+40, r25	; 0x28
    223c:	a9 a7       	std	Y+41, r26	; 0x29
    223e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2240:	6f a1       	ldd	r22, Y+39	; 0x27
    2242:	78 a5       	ldd	r23, Y+40	; 0x28
    2244:	89 a5       	ldd	r24, Y+41	; 0x29
    2246:	9a a5       	ldd	r25, Y+42	; 0x2a
    2248:	20 e0       	ldi	r18, 0x00	; 0
    224a:	30 e0       	ldi	r19, 0x00	; 0
    224c:	4a ef       	ldi	r20, 0xFA	; 250
    224e:	54 e4       	ldi	r21, 0x44	; 68
    2250:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2254:	dc 01       	movw	r26, r24
    2256:	cb 01       	movw	r24, r22
    2258:	8b a3       	std	Y+35, r24	; 0x23
    225a:	9c a3       	std	Y+36, r25	; 0x24
    225c:	ad a3       	std	Y+37, r26	; 0x25
    225e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2260:	6b a1       	ldd	r22, Y+35	; 0x23
    2262:	7c a1       	ldd	r23, Y+36	; 0x24
    2264:	8d a1       	ldd	r24, Y+37	; 0x25
    2266:	9e a1       	ldd	r25, Y+38	; 0x26
    2268:	20 e0       	ldi	r18, 0x00	; 0
    226a:	30 e0       	ldi	r19, 0x00	; 0
    226c:	40 e8       	ldi	r20, 0x80	; 128
    226e:	5f e3       	ldi	r21, 0x3F	; 63
    2270:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    2274:	88 23       	and	r24, r24
    2276:	2c f4       	brge	.+10     	; 0x2282 <HLCD_void_init+0x150>
		__ticks = 1;
    2278:	81 e0       	ldi	r24, 0x01	; 1
    227a:	90 e0       	ldi	r25, 0x00	; 0
    227c:	9a a3       	std	Y+34, r25	; 0x22
    227e:	89 a3       	std	Y+33, r24	; 0x21
    2280:	3f c0       	rjmp	.+126    	; 0x2300 <HLCD_void_init+0x1ce>
	else if (__tmp > 65535)
    2282:	6b a1       	ldd	r22, Y+35	; 0x23
    2284:	7c a1       	ldd	r23, Y+36	; 0x24
    2286:	8d a1       	ldd	r24, Y+37	; 0x25
    2288:	9e a1       	ldd	r25, Y+38	; 0x26
    228a:	20 e0       	ldi	r18, 0x00	; 0
    228c:	3f ef       	ldi	r19, 0xFF	; 255
    228e:	4f e7       	ldi	r20, 0x7F	; 127
    2290:	57 e4       	ldi	r21, 0x47	; 71
    2292:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    2296:	18 16       	cp	r1, r24
    2298:	4c f5       	brge	.+82     	; 0x22ec <HLCD_void_init+0x1ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    229a:	6f a1       	ldd	r22, Y+39	; 0x27
    229c:	78 a5       	ldd	r23, Y+40	; 0x28
    229e:	89 a5       	ldd	r24, Y+41	; 0x29
    22a0:	9a a5       	ldd	r25, Y+42	; 0x2a
    22a2:	20 e0       	ldi	r18, 0x00	; 0
    22a4:	30 e0       	ldi	r19, 0x00	; 0
    22a6:	40 e2       	ldi	r20, 0x20	; 32
    22a8:	51 e4       	ldi	r21, 0x41	; 65
    22aa:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    22ae:	dc 01       	movw	r26, r24
    22b0:	cb 01       	movw	r24, r22
    22b2:	bc 01       	movw	r22, r24
    22b4:	cd 01       	movw	r24, r26
    22b6:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    22ba:	dc 01       	movw	r26, r24
    22bc:	cb 01       	movw	r24, r22
    22be:	9a a3       	std	Y+34, r25	; 0x22
    22c0:	89 a3       	std	Y+33, r24	; 0x21
    22c2:	0f c0       	rjmp	.+30     	; 0x22e2 <HLCD_void_init+0x1b0>
    22c4:	88 ec       	ldi	r24, 0xC8	; 200
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	98 a3       	std	Y+32, r25	; 0x20
    22ca:	8f 8f       	std	Y+31, r24	; 0x1f
    22cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    22ce:	98 a1       	ldd	r25, Y+32	; 0x20
    22d0:	01 97       	sbiw	r24, 0x01	; 1
    22d2:	f1 f7       	brne	.-4      	; 0x22d0 <HLCD_void_init+0x19e>
    22d4:	98 a3       	std	Y+32, r25	; 0x20
    22d6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22d8:	89 a1       	ldd	r24, Y+33	; 0x21
    22da:	9a a1       	ldd	r25, Y+34	; 0x22
    22dc:	01 97       	sbiw	r24, 0x01	; 1
    22de:	9a a3       	std	Y+34, r25	; 0x22
    22e0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22e2:	89 a1       	ldd	r24, Y+33	; 0x21
    22e4:	9a a1       	ldd	r25, Y+34	; 0x22
    22e6:	00 97       	sbiw	r24, 0x00	; 0
    22e8:	69 f7       	brne	.-38     	; 0x22c4 <HLCD_void_init+0x192>
    22ea:	14 c0       	rjmp	.+40     	; 0x2314 <HLCD_void_init+0x1e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ec:	6b a1       	ldd	r22, Y+35	; 0x23
    22ee:	7c a1       	ldd	r23, Y+36	; 0x24
    22f0:	8d a1       	ldd	r24, Y+37	; 0x25
    22f2:	9e a1       	ldd	r25, Y+38	; 0x26
    22f4:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    22f8:	dc 01       	movw	r26, r24
    22fa:	cb 01       	movw	r24, r22
    22fc:	9a a3       	std	Y+34, r25	; 0x22
    22fe:	89 a3       	std	Y+33, r24	; 0x21
    2300:	89 a1       	ldd	r24, Y+33	; 0x21
    2302:	9a a1       	ldd	r25, Y+34	; 0x22
    2304:	9e 8f       	std	Y+30, r25	; 0x1e
    2306:	8d 8f       	std	Y+29, r24	; 0x1d
    2308:	8d 8d       	ldd	r24, Y+29	; 0x1d
    230a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    230c:	01 97       	sbiw	r24, 0x01	; 1
    230e:	f1 f7       	brne	.-4      	; 0x230c <HLCD_void_init+0x1da>
    2310:	9e 8f       	std	Y+30, r25	; 0x1e
    2312:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	HLCD_void_SEND_COMMEND(DISPLAY_ON_OFF_CONTROL);
    2314:	8c e0       	ldi	r24, 0x0C	; 12
    2316:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
    231a:	80 e0       	ldi	r24, 0x00	; 0
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	a0 e8       	ldi	r26, 0x80	; 128
    2320:	bf e3       	ldi	r27, 0x3F	; 63
    2322:	89 8f       	std	Y+25, r24	; 0x19
    2324:	9a 8f       	std	Y+26, r25	; 0x1a
    2326:	ab 8f       	std	Y+27, r26	; 0x1b
    2328:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    232a:	69 8d       	ldd	r22, Y+25	; 0x19
    232c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    232e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2330:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2332:	20 e0       	ldi	r18, 0x00	; 0
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	4a ef       	ldi	r20, 0xFA	; 250
    2338:	54 e4       	ldi	r21, 0x44	; 68
    233a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    233e:	dc 01       	movw	r26, r24
    2340:	cb 01       	movw	r24, r22
    2342:	8d 8b       	std	Y+21, r24	; 0x15
    2344:	9e 8b       	std	Y+22, r25	; 0x16
    2346:	af 8b       	std	Y+23, r26	; 0x17
    2348:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    234a:	6d 89       	ldd	r22, Y+21	; 0x15
    234c:	7e 89       	ldd	r23, Y+22	; 0x16
    234e:	8f 89       	ldd	r24, Y+23	; 0x17
    2350:	98 8d       	ldd	r25, Y+24	; 0x18
    2352:	20 e0       	ldi	r18, 0x00	; 0
    2354:	30 e0       	ldi	r19, 0x00	; 0
    2356:	40 e8       	ldi	r20, 0x80	; 128
    2358:	5f e3       	ldi	r21, 0x3F	; 63
    235a:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    235e:	88 23       	and	r24, r24
    2360:	2c f4       	brge	.+10     	; 0x236c <HLCD_void_init+0x23a>
		__ticks = 1;
    2362:	81 e0       	ldi	r24, 0x01	; 1
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	9c 8b       	std	Y+20, r25	; 0x14
    2368:	8b 8b       	std	Y+19, r24	; 0x13
    236a:	3f c0       	rjmp	.+126    	; 0x23ea <HLCD_void_init+0x2b8>
	else if (__tmp > 65535)
    236c:	6d 89       	ldd	r22, Y+21	; 0x15
    236e:	7e 89       	ldd	r23, Y+22	; 0x16
    2370:	8f 89       	ldd	r24, Y+23	; 0x17
    2372:	98 8d       	ldd	r25, Y+24	; 0x18
    2374:	20 e0       	ldi	r18, 0x00	; 0
    2376:	3f ef       	ldi	r19, 0xFF	; 255
    2378:	4f e7       	ldi	r20, 0x7F	; 127
    237a:	57 e4       	ldi	r21, 0x47	; 71
    237c:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    2380:	18 16       	cp	r1, r24
    2382:	4c f5       	brge	.+82     	; 0x23d6 <HLCD_void_init+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2384:	69 8d       	ldd	r22, Y+25	; 0x19
    2386:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2388:	8b 8d       	ldd	r24, Y+27	; 0x1b
    238a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    238c:	20 e0       	ldi	r18, 0x00	; 0
    238e:	30 e0       	ldi	r19, 0x00	; 0
    2390:	40 e2       	ldi	r20, 0x20	; 32
    2392:	51 e4       	ldi	r21, 0x41	; 65
    2394:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2398:	dc 01       	movw	r26, r24
    239a:	cb 01       	movw	r24, r22
    239c:	bc 01       	movw	r22, r24
    239e:	cd 01       	movw	r24, r26
    23a0:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    23a4:	dc 01       	movw	r26, r24
    23a6:	cb 01       	movw	r24, r22
    23a8:	9c 8b       	std	Y+20, r25	; 0x14
    23aa:	8b 8b       	std	Y+19, r24	; 0x13
    23ac:	0f c0       	rjmp	.+30     	; 0x23cc <HLCD_void_init+0x29a>
    23ae:	88 ec       	ldi	r24, 0xC8	; 200
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	9a 8b       	std	Y+18, r25	; 0x12
    23b4:	89 8b       	std	Y+17, r24	; 0x11
    23b6:	89 89       	ldd	r24, Y+17	; 0x11
    23b8:	9a 89       	ldd	r25, Y+18	; 0x12
    23ba:	01 97       	sbiw	r24, 0x01	; 1
    23bc:	f1 f7       	brne	.-4      	; 0x23ba <HLCD_void_init+0x288>
    23be:	9a 8b       	std	Y+18, r25	; 0x12
    23c0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23c2:	8b 89       	ldd	r24, Y+19	; 0x13
    23c4:	9c 89       	ldd	r25, Y+20	; 0x14
    23c6:	01 97       	sbiw	r24, 0x01	; 1
    23c8:	9c 8b       	std	Y+20, r25	; 0x14
    23ca:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23cc:	8b 89       	ldd	r24, Y+19	; 0x13
    23ce:	9c 89       	ldd	r25, Y+20	; 0x14
    23d0:	00 97       	sbiw	r24, 0x00	; 0
    23d2:	69 f7       	brne	.-38     	; 0x23ae <HLCD_void_init+0x27c>
    23d4:	14 c0       	rjmp	.+40     	; 0x23fe <HLCD_void_init+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23d6:	6d 89       	ldd	r22, Y+21	; 0x15
    23d8:	7e 89       	ldd	r23, Y+22	; 0x16
    23da:	8f 89       	ldd	r24, Y+23	; 0x17
    23dc:	98 8d       	ldd	r25, Y+24	; 0x18
    23de:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    23e2:	dc 01       	movw	r26, r24
    23e4:	cb 01       	movw	r24, r22
    23e6:	9c 8b       	std	Y+20, r25	; 0x14
    23e8:	8b 8b       	std	Y+19, r24	; 0x13
    23ea:	8b 89       	ldd	r24, Y+19	; 0x13
    23ec:	9c 89       	ldd	r25, Y+20	; 0x14
    23ee:	98 8b       	std	Y+16, r25	; 0x10
    23f0:	8f 87       	std	Y+15, r24	; 0x0f
    23f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    23f4:	98 89       	ldd	r25, Y+16	; 0x10
    23f6:	01 97       	sbiw	r24, 0x01	; 1
    23f8:	f1 f7       	brne	.-4      	; 0x23f6 <HLCD_void_init+0x2c4>
    23fa:	98 8b       	std	Y+16, r25	; 0x10
    23fc:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	HLCD_void_SEND_COMMEND(DISPLAY_CLEAR);
    23fe:	81 e0       	ldi	r24, 0x01	; 1
    2400:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
    2404:	80 e0       	ldi	r24, 0x00	; 0
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	a0 e0       	ldi	r26, 0x00	; 0
    240a:	b0 e4       	ldi	r27, 0x40	; 64
    240c:	8b 87       	std	Y+11, r24	; 0x0b
    240e:	9c 87       	std	Y+12, r25	; 0x0c
    2410:	ad 87       	std	Y+13, r26	; 0x0d
    2412:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2414:	6b 85       	ldd	r22, Y+11	; 0x0b
    2416:	7c 85       	ldd	r23, Y+12	; 0x0c
    2418:	8d 85       	ldd	r24, Y+13	; 0x0d
    241a:	9e 85       	ldd	r25, Y+14	; 0x0e
    241c:	20 e0       	ldi	r18, 0x00	; 0
    241e:	30 e0       	ldi	r19, 0x00	; 0
    2420:	4a ef       	ldi	r20, 0xFA	; 250
    2422:	54 e4       	ldi	r21, 0x44	; 68
    2424:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	8f 83       	std	Y+7, r24	; 0x07
    242e:	98 87       	std	Y+8, r25	; 0x08
    2430:	a9 87       	std	Y+9, r26	; 0x09
    2432:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2434:	6f 81       	ldd	r22, Y+7	; 0x07
    2436:	78 85       	ldd	r23, Y+8	; 0x08
    2438:	89 85       	ldd	r24, Y+9	; 0x09
    243a:	9a 85       	ldd	r25, Y+10	; 0x0a
    243c:	20 e0       	ldi	r18, 0x00	; 0
    243e:	30 e0       	ldi	r19, 0x00	; 0
    2440:	40 e8       	ldi	r20, 0x80	; 128
    2442:	5f e3       	ldi	r21, 0x3F	; 63
    2444:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    2448:	88 23       	and	r24, r24
    244a:	2c f4       	brge	.+10     	; 0x2456 <HLCD_void_init+0x324>
		__ticks = 1;
    244c:	81 e0       	ldi	r24, 0x01	; 1
    244e:	90 e0       	ldi	r25, 0x00	; 0
    2450:	9e 83       	std	Y+6, r25	; 0x06
    2452:	8d 83       	std	Y+5, r24	; 0x05
    2454:	3f c0       	rjmp	.+126    	; 0x24d4 <HLCD_void_init+0x3a2>
	else if (__tmp > 65535)
    2456:	6f 81       	ldd	r22, Y+7	; 0x07
    2458:	78 85       	ldd	r23, Y+8	; 0x08
    245a:	89 85       	ldd	r24, Y+9	; 0x09
    245c:	9a 85       	ldd	r25, Y+10	; 0x0a
    245e:	20 e0       	ldi	r18, 0x00	; 0
    2460:	3f ef       	ldi	r19, 0xFF	; 255
    2462:	4f e7       	ldi	r20, 0x7F	; 127
    2464:	57 e4       	ldi	r21, 0x47	; 71
    2466:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    246a:	18 16       	cp	r1, r24
    246c:	4c f5       	brge	.+82     	; 0x24c0 <HLCD_void_init+0x38e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    246e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2470:	7c 85       	ldd	r23, Y+12	; 0x0c
    2472:	8d 85       	ldd	r24, Y+13	; 0x0d
    2474:	9e 85       	ldd	r25, Y+14	; 0x0e
    2476:	20 e0       	ldi	r18, 0x00	; 0
    2478:	30 e0       	ldi	r19, 0x00	; 0
    247a:	40 e2       	ldi	r20, 0x20	; 32
    247c:	51 e4       	ldi	r21, 0x41	; 65
    247e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2482:	dc 01       	movw	r26, r24
    2484:	cb 01       	movw	r24, r22
    2486:	bc 01       	movw	r22, r24
    2488:	cd 01       	movw	r24, r26
    248a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    248e:	dc 01       	movw	r26, r24
    2490:	cb 01       	movw	r24, r22
    2492:	9e 83       	std	Y+6, r25	; 0x06
    2494:	8d 83       	std	Y+5, r24	; 0x05
    2496:	0f c0       	rjmp	.+30     	; 0x24b6 <HLCD_void_init+0x384>
    2498:	88 ec       	ldi	r24, 0xC8	; 200
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	9c 83       	std	Y+4, r25	; 0x04
    249e:	8b 83       	std	Y+3, r24	; 0x03
    24a0:	8b 81       	ldd	r24, Y+3	; 0x03
    24a2:	9c 81       	ldd	r25, Y+4	; 0x04
    24a4:	01 97       	sbiw	r24, 0x01	; 1
    24a6:	f1 f7       	brne	.-4      	; 0x24a4 <HLCD_void_init+0x372>
    24a8:	9c 83       	std	Y+4, r25	; 0x04
    24aa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ac:	8d 81       	ldd	r24, Y+5	; 0x05
    24ae:	9e 81       	ldd	r25, Y+6	; 0x06
    24b0:	01 97       	sbiw	r24, 0x01	; 1
    24b2:	9e 83       	std	Y+6, r25	; 0x06
    24b4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24b6:	8d 81       	ldd	r24, Y+5	; 0x05
    24b8:	9e 81       	ldd	r25, Y+6	; 0x06
    24ba:	00 97       	sbiw	r24, 0x00	; 0
    24bc:	69 f7       	brne	.-38     	; 0x2498 <HLCD_void_init+0x366>
    24be:	14 c0       	rjmp	.+40     	; 0x24e8 <HLCD_void_init+0x3b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24c0:	6f 81       	ldd	r22, Y+7	; 0x07
    24c2:	78 85       	ldd	r23, Y+8	; 0x08
    24c4:	89 85       	ldd	r24, Y+9	; 0x09
    24c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    24c8:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    24cc:	dc 01       	movw	r26, r24
    24ce:	cb 01       	movw	r24, r22
    24d0:	9e 83       	std	Y+6, r25	; 0x06
    24d2:	8d 83       	std	Y+5, r24	; 0x05
    24d4:	8d 81       	ldd	r24, Y+5	; 0x05
    24d6:	9e 81       	ldd	r25, Y+6	; 0x06
    24d8:	9a 83       	std	Y+2, r25	; 0x02
    24da:	89 83       	std	Y+1, r24	; 0x01
    24dc:	89 81       	ldd	r24, Y+1	; 0x01
    24de:	9a 81       	ldd	r25, Y+2	; 0x02
    24e0:	01 97       	sbiw	r24, 0x01	; 1
    24e2:	f1 f7       	brne	.-4      	; 0x24e0 <HLCD_void_init+0x3ae>
    24e4:	9a 83       	std	Y+2, r25	; 0x02
    24e6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	HLCD_void_SEND_COMMEND(ENTRY_MODE_SET);
    24e8:	86 e0       	ldi	r24, 0x06	; 6
    24ea:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>


}
    24ee:	e8 96       	adiw	r28, 0x38	; 56
    24f0:	0f b6       	in	r0, 0x3f	; 63
    24f2:	f8 94       	cli
    24f4:	de bf       	out	0x3e, r29	; 62
    24f6:	0f be       	out	0x3f, r0	; 63
    24f8:	cd bf       	out	0x3d, r28	; 61
    24fa:	cf 91       	pop	r28
    24fc:	df 91       	pop	r29
    24fe:	08 95       	ret

00002500 <HLCD_void_Clear_Display>:
void HLCD_void_Clear_Display(void)
{
    2500:	df 93       	push	r29
    2502:	cf 93       	push	r28
    2504:	cd b7       	in	r28, 0x3d	; 61
    2506:	de b7       	in	r29, 0x3e	; 62
    2508:	2e 97       	sbiw	r28, 0x0e	; 14
    250a:	0f b6       	in	r0, 0x3f	; 63
    250c:	f8 94       	cli
    250e:	de bf       	out	0x3e, r29	; 62
    2510:	0f be       	out	0x3f, r0	; 63
    2512:	cd bf       	out	0x3d, r28	; 61
	// Display Clear Command then wait for more than 1.53ms
	HLCD_void_SEND_COMMEND(DISPLAY_CLEAR);
    2514:	81 e0       	ldi	r24, 0x01	; 1
    2516:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
    251a:	80 e0       	ldi	r24, 0x00	; 0
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	a0 e0       	ldi	r26, 0x00	; 0
    2520:	b0 e4       	ldi	r27, 0x40	; 64
    2522:	8b 87       	std	Y+11, r24	; 0x0b
    2524:	9c 87       	std	Y+12, r25	; 0x0c
    2526:	ad 87       	std	Y+13, r26	; 0x0d
    2528:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    252a:	6b 85       	ldd	r22, Y+11	; 0x0b
    252c:	7c 85       	ldd	r23, Y+12	; 0x0c
    252e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2530:	9e 85       	ldd	r25, Y+14	; 0x0e
    2532:	20 e0       	ldi	r18, 0x00	; 0
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	4a ef       	ldi	r20, 0xFA	; 250
    2538:	54 e4       	ldi	r21, 0x44	; 68
    253a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    253e:	dc 01       	movw	r26, r24
    2540:	cb 01       	movw	r24, r22
    2542:	8f 83       	std	Y+7, r24	; 0x07
    2544:	98 87       	std	Y+8, r25	; 0x08
    2546:	a9 87       	std	Y+9, r26	; 0x09
    2548:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    254a:	6f 81       	ldd	r22, Y+7	; 0x07
    254c:	78 85       	ldd	r23, Y+8	; 0x08
    254e:	89 85       	ldd	r24, Y+9	; 0x09
    2550:	9a 85       	ldd	r25, Y+10	; 0x0a
    2552:	20 e0       	ldi	r18, 0x00	; 0
    2554:	30 e0       	ldi	r19, 0x00	; 0
    2556:	40 e8       	ldi	r20, 0x80	; 128
    2558:	5f e3       	ldi	r21, 0x3F	; 63
    255a:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    255e:	88 23       	and	r24, r24
    2560:	2c f4       	brge	.+10     	; 0x256c <HLCD_void_Clear_Display+0x6c>
		__ticks = 1;
    2562:	81 e0       	ldi	r24, 0x01	; 1
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	9e 83       	std	Y+6, r25	; 0x06
    2568:	8d 83       	std	Y+5, r24	; 0x05
    256a:	3f c0       	rjmp	.+126    	; 0x25ea <HLCD_void_Clear_Display+0xea>
	else if (__tmp > 65535)
    256c:	6f 81       	ldd	r22, Y+7	; 0x07
    256e:	78 85       	ldd	r23, Y+8	; 0x08
    2570:	89 85       	ldd	r24, Y+9	; 0x09
    2572:	9a 85       	ldd	r25, Y+10	; 0x0a
    2574:	20 e0       	ldi	r18, 0x00	; 0
    2576:	3f ef       	ldi	r19, 0xFF	; 255
    2578:	4f e7       	ldi	r20, 0x7F	; 127
    257a:	57 e4       	ldi	r21, 0x47	; 71
    257c:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    2580:	18 16       	cp	r1, r24
    2582:	4c f5       	brge	.+82     	; 0x25d6 <HLCD_void_Clear_Display+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2584:	6b 85       	ldd	r22, Y+11	; 0x0b
    2586:	7c 85       	ldd	r23, Y+12	; 0x0c
    2588:	8d 85       	ldd	r24, Y+13	; 0x0d
    258a:	9e 85       	ldd	r25, Y+14	; 0x0e
    258c:	20 e0       	ldi	r18, 0x00	; 0
    258e:	30 e0       	ldi	r19, 0x00	; 0
    2590:	40 e2       	ldi	r20, 0x20	; 32
    2592:	51 e4       	ldi	r21, 0x41	; 65
    2594:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2598:	dc 01       	movw	r26, r24
    259a:	cb 01       	movw	r24, r22
    259c:	bc 01       	movw	r22, r24
    259e:	cd 01       	movw	r24, r26
    25a0:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    25a4:	dc 01       	movw	r26, r24
    25a6:	cb 01       	movw	r24, r22
    25a8:	9e 83       	std	Y+6, r25	; 0x06
    25aa:	8d 83       	std	Y+5, r24	; 0x05
    25ac:	0f c0       	rjmp	.+30     	; 0x25cc <HLCD_void_Clear_Display+0xcc>
    25ae:	88 ec       	ldi	r24, 0xC8	; 200
    25b0:	90 e0       	ldi	r25, 0x00	; 0
    25b2:	9c 83       	std	Y+4, r25	; 0x04
    25b4:	8b 83       	std	Y+3, r24	; 0x03
    25b6:	8b 81       	ldd	r24, Y+3	; 0x03
    25b8:	9c 81       	ldd	r25, Y+4	; 0x04
    25ba:	01 97       	sbiw	r24, 0x01	; 1
    25bc:	f1 f7       	brne	.-4      	; 0x25ba <HLCD_void_Clear_Display+0xba>
    25be:	9c 83       	std	Y+4, r25	; 0x04
    25c0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25c2:	8d 81       	ldd	r24, Y+5	; 0x05
    25c4:	9e 81       	ldd	r25, Y+6	; 0x06
    25c6:	01 97       	sbiw	r24, 0x01	; 1
    25c8:	9e 83       	std	Y+6, r25	; 0x06
    25ca:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25cc:	8d 81       	ldd	r24, Y+5	; 0x05
    25ce:	9e 81       	ldd	r25, Y+6	; 0x06
    25d0:	00 97       	sbiw	r24, 0x00	; 0
    25d2:	69 f7       	brne	.-38     	; 0x25ae <HLCD_void_Clear_Display+0xae>
    25d4:	14 c0       	rjmp	.+40     	; 0x25fe <HLCD_void_Clear_Display+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25d6:	6f 81       	ldd	r22, Y+7	; 0x07
    25d8:	78 85       	ldd	r23, Y+8	; 0x08
    25da:	89 85       	ldd	r24, Y+9	; 0x09
    25dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    25de:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    25e2:	dc 01       	movw	r26, r24
    25e4:	cb 01       	movw	r24, r22
    25e6:	9e 83       	std	Y+6, r25	; 0x06
    25e8:	8d 83       	std	Y+5, r24	; 0x05
    25ea:	8d 81       	ldd	r24, Y+5	; 0x05
    25ec:	9e 81       	ldd	r25, Y+6	; 0x06
    25ee:	9a 83       	std	Y+2, r25	; 0x02
    25f0:	89 83       	std	Y+1, r24	; 0x01
    25f2:	89 81       	ldd	r24, Y+1	; 0x01
    25f4:	9a 81       	ldd	r25, Y+2	; 0x02
    25f6:	01 97       	sbiw	r24, 0x01	; 1
    25f8:	f1 f7       	brne	.-4      	; 0x25f6 <HLCD_void_Clear_Display+0xf6>
    25fa:	9a 83       	std	Y+2, r25	; 0x02
    25fc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    25fe:	2e 96       	adiw	r28, 0x0e	; 14
    2600:	0f b6       	in	r0, 0x3f	; 63
    2602:	f8 94       	cli
    2604:	de bf       	out	0x3e, r29	; 62
    2606:	0f be       	out	0x3f, r0	; 63
    2608:	cd bf       	out	0x3d, r28	; 61
    260a:	cf 91       	pop	r28
    260c:	df 91       	pop	r29
    260e:	08 95       	ret

00002610 <HLCD_void_DISPLAY_STRING>:
void HLCD_void_DISPLAY_STRING( u8 A_string[])
{
    2610:	df 93       	push	r29
    2612:	cf 93       	push	r28
    2614:	00 d0       	rcall	.+0      	; 0x2616 <HLCD_void_DISPLAY_STRING+0x6>
    2616:	cd b7       	in	r28, 0x3d	; 61
    2618:	de b7       	in	r29, 0x3e	; 62
    261a:	9a 83       	std	Y+2, r25	; 0x02
    261c:	89 83       	std	Y+1, r24	; 0x01
    261e:	0a c0       	rjmp	.+20     	; 0x2634 <HLCD_void_DISPLAY_STRING+0x24>
	while(*A_string !='\0')
	{
		HLCD_void_SEND_DATA(*A_string);
    2620:	e9 81       	ldd	r30, Y+1	; 0x01
    2622:	fa 81       	ldd	r31, Y+2	; 0x02
    2624:	80 81       	ld	r24, Z
    2626:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <HLCD_void_SEND_DATA>
		A_string++;
    262a:	89 81       	ldd	r24, Y+1	; 0x01
    262c:	9a 81       	ldd	r25, Y+2	; 0x02
    262e:	01 96       	adiw	r24, 0x01	; 1
    2630:	9a 83       	std	Y+2, r25	; 0x02
    2632:	89 83       	std	Y+1, r24	; 0x01
	HLCD_void_SEND_COMMEND(DISPLAY_CLEAR);
	_delay_ms(2);
}
void HLCD_void_DISPLAY_STRING( u8 A_string[])
{
	while(*A_string !='\0')
    2634:	e9 81       	ldd	r30, Y+1	; 0x01
    2636:	fa 81       	ldd	r31, Y+2	; 0x02
    2638:	80 81       	ld	r24, Z
    263a:	88 23       	and	r24, r24
    263c:	89 f7       	brne	.-30     	; 0x2620 <HLCD_void_DISPLAY_STRING+0x10>
	{
		HLCD_void_SEND_DATA(*A_string);
		A_string++;
		//_delay_ms(200); //for keyboard effiction
	}
}
    263e:	0f 90       	pop	r0
    2640:	0f 90       	pop	r0
    2642:	cf 91       	pop	r28
    2644:	df 91       	pop	r29
    2646:	08 95       	ret

00002648 <HLCD_void_DISPLAY_NUMBER>:
void HLCD_void_DISPLAY_NUMBER(u32 A_number)
{
    2648:	df 93       	push	r29
    264a:	cf 93       	push	r28
    264c:	cd b7       	in	r28, 0x3d	; 61
    264e:	de b7       	in	r29, 0x3e	; 62
    2650:	c8 58       	subi	r28, 0x88	; 136
    2652:	d0 40       	sbci	r29, 0x00	; 0
    2654:	0f b6       	in	r0, 0x3f	; 63
    2656:	f8 94       	cli
    2658:	de bf       	out	0x3e, r29	; 62
    265a:	0f be       	out	0x3f, r0	; 63
    265c:	cd bf       	out	0x3d, r28	; 61
    265e:	fe 01       	movw	r30, r28
    2660:	eb 57       	subi	r30, 0x7B	; 123
    2662:	ff 4f       	sbci	r31, 0xFF	; 255
    2664:	60 83       	st	Z, r22
    2666:	71 83       	std	Z+1, r23	; 0x01
    2668:	82 83       	std	Z+2, r24	; 0x02
    266a:	93 83       	std	Z+3, r25	; 0x03
	u32 number[sizeof(u32)*8+1] ;
	itoa(A_number,number,10);
    266c:	fe 01       	movw	r30, r28
    266e:	eb 57       	subi	r30, 0x7B	; 123
    2670:	ff 4f       	sbci	r31, 0xFF	; 255
    2672:	80 81       	ld	r24, Z
    2674:	91 81       	ldd	r25, Z+1	; 0x01
    2676:	9e 01       	movw	r18, r28
    2678:	2f 5f       	subi	r18, 0xFF	; 255
    267a:	3f 4f       	sbci	r19, 0xFF	; 255
    267c:	b9 01       	movw	r22, r18
    267e:	4a e0       	ldi	r20, 0x0A	; 10
    2680:	50 e0       	ldi	r21, 0x00	; 0
    2682:	0e 94 95 25 	call	0x4b2a	; 0x4b2a <itoa>
	HLCD_void_DISPLAY_STRING(number);
    2686:	ce 01       	movw	r24, r28
    2688:	01 96       	adiw	r24, 0x01	; 1
    268a:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
}
    268e:	c8 57       	subi	r28, 0x78	; 120
    2690:	df 4f       	sbci	r29, 0xFF	; 255
    2692:	0f b6       	in	r0, 0x3f	; 63
    2694:	f8 94       	cli
    2696:	de bf       	out	0x3e, r29	; 62
    2698:	0f be       	out	0x3f, r0	; 63
    269a:	cd bf       	out	0x3d, r28	; 61
    269c:	cf 91       	pop	r28
    269e:	df 91       	pop	r29
    26a0:	08 95       	ret

000026a2 <HLCD_void_GOTO_POS>:
		local_num/=10;
	}

}*/
void HLCD_void_GOTO_POS(LCD_ROW_E A_ROW,LCD_COL_E A_COL)
{
    26a2:	df 93       	push	r29
    26a4:	cf 93       	push	r28
    26a6:	00 d0       	rcall	.+0      	; 0x26a8 <HLCD_void_GOTO_POS+0x6>
    26a8:	00 d0       	rcall	.+0      	; 0x26aa <HLCD_void_GOTO_POS+0x8>
    26aa:	cd b7       	in	r28, 0x3d	; 61
    26ac:	de b7       	in	r29, 0x3e	; 62
    26ae:	89 83       	std	Y+1, r24	; 0x01
    26b0:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_ROW)
    26b2:	89 81       	ldd	r24, Y+1	; 0x01
    26b4:	28 2f       	mov	r18, r24
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	3c 83       	std	Y+4, r19	; 0x04
    26ba:	2b 83       	std	Y+3, r18	; 0x03
    26bc:	8b 81       	ldd	r24, Y+3	; 0x03
    26be:	9c 81       	ldd	r25, Y+4	; 0x04
    26c0:	81 30       	cpi	r24, 0x01	; 1
    26c2:	91 05       	cpc	r25, r1
    26c4:	31 f0       	breq	.+12     	; 0x26d2 <HLCD_void_GOTO_POS+0x30>
    26c6:	2b 81       	ldd	r18, Y+3	; 0x03
    26c8:	3c 81       	ldd	r19, Y+4	; 0x04
    26ca:	22 30       	cpi	r18, 0x02	; 2
    26cc:	31 05       	cpc	r19, r1
    26ce:	31 f0       	breq	.+12     	; 0x26dc <HLCD_void_GOTO_POS+0x3a>
    26d0:	09 c0       	rjmp	.+18     	; 0x26e4 <HLCD_void_GOTO_POS+0x42>
	{
	case LCD_ROW1:HLCD_void_SEND_COMMEND(ROW1_BASS_ADD+A_COL);
    26d2:	8a 81       	ldd	r24, Y+2	; 0x02
    26d4:	81 58       	subi	r24, 0x81	; 129
    26d6:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
    26da:	04 c0       	rjmp	.+8      	; 0x26e4 <HLCD_void_GOTO_POS+0x42>
		break;
	case LCD_ROW2:HLCD_void_SEND_COMMEND(ROW2_BASS_ADD+A_COL);
    26dc:	8a 81       	ldd	r24, Y+2	; 0x02
    26de:	81 54       	subi	r24, 0x41	; 65
    26e0:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
		break;
	default:
		break;
	}

}
    26e4:	0f 90       	pop	r0
    26e6:	0f 90       	pop	r0
    26e8:	0f 90       	pop	r0
    26ea:	0f 90       	pop	r0
    26ec:	cf 91       	pop	r28
    26ee:	df 91       	pop	r29
    26f0:	08 95       	ret

000026f2 <HLCD_void_LEFT_SHIFT>:
void HLCD_void_LEFT_SHIFT()
{
    26f2:	df 93       	push	r29
    26f4:	cf 93       	push	r28
    26f6:	cd b7       	in	r28, 0x3d	; 61
    26f8:	de b7       	in	r29, 0x3e	; 62
	HLCD_void_SEND_COMMEND(0x18);
    26fa:	88 e1       	ldi	r24, 0x18	; 24
    26fc:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
}
    2700:	cf 91       	pop	r28
    2702:	df 91       	pop	r29
    2704:	08 95       	ret

00002706 <HLCD_void_RIGHT_SHIFT>:
void HLCD_void_RIGHT_SHIFT()
{
    2706:	df 93       	push	r29
    2708:	cf 93       	push	r28
    270a:	cd b7       	in	r28, 0x3d	; 61
    270c:	de b7       	in	r29, 0x3e	; 62
	HLCD_void_SEND_COMMEND(0x1C);
    270e:	8c e1       	ldi	r24, 0x1C	; 28
    2710:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
}
    2714:	cf 91       	pop	r28
    2716:	df 91       	pop	r29
    2718:	08 95       	ret

0000271a <HLCD_void_send_spicial_sympol>:
 void HLCD_void_send_spicial_sympol(u8 *A_sympol_array,LCD_PATTERN_E A_pattern_num,LCD_ROW_E A_ROW,LCD_COL_E A_COL)
 {
    271a:	df 93       	push	r29
    271c:	cf 93       	push	r28
    271e:	cd b7       	in	r28, 0x3d	; 61
    2720:	de b7       	in	r29, 0x3e	; 62
    2722:	27 97       	sbiw	r28, 0x07	; 7
    2724:	0f b6       	in	r0, 0x3f	; 63
    2726:	f8 94       	cli
    2728:	de bf       	out	0x3e, r29	; 62
    272a:	0f be       	out	0x3f, r0	; 63
    272c:	cd bf       	out	0x3d, r28	; 61
    272e:	9c 83       	std	Y+4, r25	; 0x04
    2730:	8b 83       	std	Y+3, r24	; 0x03
    2732:	6d 83       	std	Y+5, r22	; 0x05
    2734:	4e 83       	std	Y+6, r20	; 0x06
    2736:	2f 83       	std	Y+7, r18	; 0x07
	 u8 locAL_CGRAM_ADDRESS;
	 // CALCULATE CGRAM ADDRESS

	 /* we have only 8 pattern*/
	 locAL_CGRAM_ADDRESS=A_pattern_num * 8 ;
    2738:	8d 81       	ldd	r24, Y+5	; 0x05
    273a:	88 2f       	mov	r24, r24
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	88 0f       	add	r24, r24
    2740:	99 1f       	adc	r25, r25
    2742:	88 0f       	add	r24, r24
    2744:	99 1f       	adc	r25, r25
    2746:	88 0f       	add	r24, r24
    2748:	99 1f       	adc	r25, r25
    274a:	8a 83       	std	Y+2, r24	; 0x02
	 SET_BIT(locAL_CGRAM_ADDRESS,6);
    274c:	8a 81       	ldd	r24, Y+2	; 0x02
    274e:	80 64       	ori	r24, 0x40	; 64
    2750:	8a 83       	std	Y+2, r24	; 0x02
	 // send pattern array byte by byte

	 /*pattern is 5*8 pixel (8) is the number of byte and (5)is the number on bits we use from each byte */
	 HLCD_void_SEND_COMMEND(locAL_CGRAM_ADDRESS);
    2752:	8a 81       	ldd	r24, Y+2	; 0x02
    2754:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <HLCD_void_SEND_COMMEND>
	 for( u8 i=0;i<8;i++)
    2758:	19 82       	std	Y+1, r1	; 0x01
    275a:	0e c0       	rjmp	.+28     	; 0x2778 <HLCD_void_send_spicial_sympol+0x5e>
	 {
		 HLCD_void_SEND_DATA(A_sympol_array[i]);
    275c:	89 81       	ldd	r24, Y+1	; 0x01
    275e:	28 2f       	mov	r18, r24
    2760:	30 e0       	ldi	r19, 0x00	; 0
    2762:	8b 81       	ldd	r24, Y+3	; 0x03
    2764:	9c 81       	ldd	r25, Y+4	; 0x04
    2766:	fc 01       	movw	r30, r24
    2768:	e2 0f       	add	r30, r18
    276a:	f3 1f       	adc	r31, r19
    276c:	80 81       	ld	r24, Z
    276e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <HLCD_void_SEND_DATA>
	 SET_BIT(locAL_CGRAM_ADDRESS,6);
	 // send pattern array byte by byte

	 /*pattern is 5*8 pixel (8) is the number of byte and (5)is the number on bits we use from each byte */
	 HLCD_void_SEND_COMMEND(locAL_CGRAM_ADDRESS);
	 for( u8 i=0;i<8;i++)
    2772:	89 81       	ldd	r24, Y+1	; 0x01
    2774:	8f 5f       	subi	r24, 0xFF	; 255
    2776:	89 83       	std	Y+1, r24	; 0x01
    2778:	89 81       	ldd	r24, Y+1	; 0x01
    277a:	88 30       	cpi	r24, 0x08	; 8
    277c:	78 f3       	brcs	.-34     	; 0x275c <HLCD_void_send_spicial_sympol+0x42>
	 {
		 HLCD_void_SEND_DATA(A_sympol_array[i]);
	 }
	 // set DDRAM address
	 HLCD_void_GOTO_POS(A_ROW,A_COL);
    277e:	8e 81       	ldd	r24, Y+6	; 0x06
    2780:	6f 81       	ldd	r22, Y+7	; 0x07
    2782:	0e 94 51 13 	call	0x26a2	; 0x26a2 <HLCD_void_GOTO_POS>
	 HLCD_void_SEND_DATA(A_pattern_num);
    2786:	8d 81       	ldd	r24, Y+5	; 0x05
    2788:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <HLCD_void_SEND_DATA>

 }
    278c:	27 96       	adiw	r28, 0x07	; 7
    278e:	0f b6       	in	r0, 0x3f	; 63
    2790:	f8 94       	cli
    2792:	de bf       	out	0x3e, r29	; 62
    2794:	0f be       	out	0x3f, r0	; 63
    2796:	cd bf       	out	0x3d, r28	; 61
    2798:	cf 91       	pop	r28
    279a:	df 91       	pop	r29
    279c:	08 95       	ret

0000279e <HSSD_voidDisplayNumber>:
#include "../Include/HAL/SSD/SSD_Interface.h"
#include "../Include/HAL/SSD/SSD_Private.h"
#include "../Include/HAL/SSD/SSD_Cfg.h"

	void HSSD_voidDisplayNumber(u8 A_u8port,u8 A_u8Number)
	{
    279e:	df 93       	push	r29
    27a0:	cf 93       	push	r28
    27a2:	00 d0       	rcall	.+0      	; 0x27a4 <HSSD_voidDisplayNumber+0x6>
    27a4:	00 d0       	rcall	.+0      	; 0x27a6 <HSSD_voidDisplayNumber+0x8>
    27a6:	cd b7       	in	r28, 0x3d	; 61
    27a8:	de b7       	in	r29, 0x3e	; 62
    27aa:	89 83       	std	Y+1, r24	; 0x01
    27ac:	6a 83       	std	Y+2, r22	; 0x02
		//MDIO_voidSetPortDirection(A_u8port,PORT_OUTPUT);
		switch(A_u8Number)
    27ae:	8a 81       	ldd	r24, Y+2	; 0x02
    27b0:	28 2f       	mov	r18, r24
    27b2:	30 e0       	ldi	r19, 0x00	; 0
    27b4:	3c 83       	std	Y+4, r19	; 0x04
    27b6:	2b 83       	std	Y+3, r18	; 0x03
    27b8:	8b 81       	ldd	r24, Y+3	; 0x03
    27ba:	9c 81       	ldd	r25, Y+4	; 0x04
    27bc:	84 30       	cpi	r24, 0x04	; 4
    27be:	91 05       	cpc	r25, r1
    27c0:	09 f4       	brne	.+2      	; 0x27c4 <HSSD_voidDisplayNumber+0x26>
    27c2:	65 c0       	rjmp	.+202    	; 0x288e <HSSD_voidDisplayNumber+0xf0>
    27c4:	2b 81       	ldd	r18, Y+3	; 0x03
    27c6:	3c 81       	ldd	r19, Y+4	; 0x04
    27c8:	25 30       	cpi	r18, 0x05	; 5
    27ca:	31 05       	cpc	r19, r1
    27cc:	e4 f4       	brge	.+56     	; 0x2806 <HSSD_voidDisplayNumber+0x68>
    27ce:	8b 81       	ldd	r24, Y+3	; 0x03
    27d0:	9c 81       	ldd	r25, Y+4	; 0x04
    27d2:	81 30       	cpi	r24, 0x01	; 1
    27d4:	91 05       	cpc	r25, r1
    27d6:	09 f4       	brne	.+2      	; 0x27da <HSSD_voidDisplayNumber+0x3c>
    27d8:	42 c0       	rjmp	.+132    	; 0x285e <HSSD_voidDisplayNumber+0xc0>
    27da:	2b 81       	ldd	r18, Y+3	; 0x03
    27dc:	3c 81       	ldd	r19, Y+4	; 0x04
    27de:	22 30       	cpi	r18, 0x02	; 2
    27e0:	31 05       	cpc	r19, r1
    27e2:	2c f4       	brge	.+10     	; 0x27ee <HSSD_voidDisplayNumber+0x50>
    27e4:	8b 81       	ldd	r24, Y+3	; 0x03
    27e6:	9c 81       	ldd	r25, Y+4	; 0x04
    27e8:	00 97       	sbiw	r24, 0x00	; 0
    27ea:	89 f1       	breq	.+98     	; 0x284e <HSSD_voidDisplayNumber+0xb0>
    27ec:	7f c0       	rjmp	.+254    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
    27ee:	2b 81       	ldd	r18, Y+3	; 0x03
    27f0:	3c 81       	ldd	r19, Y+4	; 0x04
    27f2:	22 30       	cpi	r18, 0x02	; 2
    27f4:	31 05       	cpc	r19, r1
    27f6:	d9 f1       	breq	.+118    	; 0x286e <HSSD_voidDisplayNumber+0xd0>
    27f8:	8b 81       	ldd	r24, Y+3	; 0x03
    27fa:	9c 81       	ldd	r25, Y+4	; 0x04
    27fc:	83 30       	cpi	r24, 0x03	; 3
    27fe:	91 05       	cpc	r25, r1
    2800:	09 f4       	brne	.+2      	; 0x2804 <HSSD_voidDisplayNumber+0x66>
    2802:	3d c0       	rjmp	.+122    	; 0x287e <HSSD_voidDisplayNumber+0xe0>
    2804:	73 c0       	rjmp	.+230    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
    2806:	2b 81       	ldd	r18, Y+3	; 0x03
    2808:	3c 81       	ldd	r19, Y+4	; 0x04
    280a:	27 30       	cpi	r18, 0x07	; 7
    280c:	31 05       	cpc	r19, r1
    280e:	09 f4       	brne	.+2      	; 0x2812 <HSSD_voidDisplayNumber+0x74>
    2810:	56 c0       	rjmp	.+172    	; 0x28be <HSSD_voidDisplayNumber+0x120>
    2812:	8b 81       	ldd	r24, Y+3	; 0x03
    2814:	9c 81       	ldd	r25, Y+4	; 0x04
    2816:	88 30       	cpi	r24, 0x08	; 8
    2818:	91 05       	cpc	r25, r1
    281a:	64 f4       	brge	.+24     	; 0x2834 <HSSD_voidDisplayNumber+0x96>
    281c:	2b 81       	ldd	r18, Y+3	; 0x03
    281e:	3c 81       	ldd	r19, Y+4	; 0x04
    2820:	25 30       	cpi	r18, 0x05	; 5
    2822:	31 05       	cpc	r19, r1
    2824:	e1 f1       	breq	.+120    	; 0x289e <HSSD_voidDisplayNumber+0x100>
    2826:	8b 81       	ldd	r24, Y+3	; 0x03
    2828:	9c 81       	ldd	r25, Y+4	; 0x04
    282a:	86 30       	cpi	r24, 0x06	; 6
    282c:	91 05       	cpc	r25, r1
    282e:	09 f4       	brne	.+2      	; 0x2832 <HSSD_voidDisplayNumber+0x94>
    2830:	3e c0       	rjmp	.+124    	; 0x28ae <HSSD_voidDisplayNumber+0x110>
    2832:	5c c0       	rjmp	.+184    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
    2834:	2b 81       	ldd	r18, Y+3	; 0x03
    2836:	3c 81       	ldd	r19, Y+4	; 0x04
    2838:	28 30       	cpi	r18, 0x08	; 8
    283a:	31 05       	cpc	r19, r1
    283c:	09 f4       	brne	.+2      	; 0x2840 <HSSD_voidDisplayNumber+0xa2>
    283e:	47 c0       	rjmp	.+142    	; 0x28ce <HSSD_voidDisplayNumber+0x130>
    2840:	8b 81       	ldd	r24, Y+3	; 0x03
    2842:	9c 81       	ldd	r25, Y+4	; 0x04
    2844:	89 30       	cpi	r24, 0x09	; 9
    2846:	91 05       	cpc	r25, r1
    2848:	09 f4       	brne	.+2      	; 0x284c <HSSD_voidDisplayNumber+0xae>
    284a:	49 c0       	rjmp	.+146    	; 0x28de <HSSD_voidDisplayNumber+0x140>
    284c:	4f c0       	rjmp	.+158    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
		{
		case 0: MDIO_voidSetPortValue(A_u8port,ZERO);
    284e:	89 81       	ldd	r24, Y+1	; 0x01
    2850:	88 2f       	mov	r24, r24
    2852:	90 e0       	ldi	r25, 0x00	; 0
    2854:	60 e4       	ldi	r22, 0x40	; 64
    2856:	70 e0       	ldi	r23, 0x00	; 0
    2858:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    285c:	47 c0       	rjmp	.+142    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 1: MDIO_voidSetPortValue(A_u8port,ONE);
    285e:	89 81       	ldd	r24, Y+1	; 0x01
    2860:	88 2f       	mov	r24, r24
    2862:	90 e0       	ldi	r25, 0x00	; 0
    2864:	69 e7       	ldi	r22, 0x79	; 121
    2866:	70 e0       	ldi	r23, 0x00	; 0
    2868:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    286c:	3f c0       	rjmp	.+126    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 2: MDIO_voidSetPortValue(A_u8port,TWO);
    286e:	89 81       	ldd	r24, Y+1	; 0x01
    2870:	88 2f       	mov	r24, r24
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	64 e2       	ldi	r22, 0x24	; 36
    2876:	70 e0       	ldi	r23, 0x00	; 0
    2878:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    287c:	37 c0       	rjmp	.+110    	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 3: MDIO_voidSetPortValue(A_u8port,THREE);
    287e:	89 81       	ldd	r24, Y+1	; 0x01
    2880:	88 2f       	mov	r24, r24
    2882:	90 e0       	ldi	r25, 0x00	; 0
    2884:	60 e3       	ldi	r22, 0x30	; 48
    2886:	70 e0       	ldi	r23, 0x00	; 0
    2888:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    288c:	2f c0       	rjmp	.+94     	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 4: MDIO_voidSetPortValue(A_u8port,FOUR);
    288e:	89 81       	ldd	r24, Y+1	; 0x01
    2890:	88 2f       	mov	r24, r24
    2892:	90 e0       	ldi	r25, 0x00	; 0
    2894:	69 e1       	ldi	r22, 0x19	; 25
    2896:	70 e0       	ldi	r23, 0x00	; 0
    2898:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    289c:	27 c0       	rjmp	.+78     	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 5: MDIO_voidSetPortValue(A_u8port,FIVE);
    289e:	89 81       	ldd	r24, Y+1	; 0x01
    28a0:	88 2f       	mov	r24, r24
    28a2:	90 e0       	ldi	r25, 0x00	; 0
    28a4:	62 e1       	ldi	r22, 0x12	; 18
    28a6:	70 e0       	ldi	r23, 0x00	; 0
    28a8:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    28ac:	1f c0       	rjmp	.+62     	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 6: MDIO_voidSetPortValue(A_u8port,SIX);
    28ae:	89 81       	ldd	r24, Y+1	; 0x01
    28b0:	88 2f       	mov	r24, r24
    28b2:	90 e0       	ldi	r25, 0x00	; 0
    28b4:	62 e0       	ldi	r22, 0x02	; 2
    28b6:	70 e0       	ldi	r23, 0x00	; 0
    28b8:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    28bc:	17 c0       	rjmp	.+46     	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 7: MDIO_voidSetPortValue(A_u8port,SEVEN);
    28be:	89 81       	ldd	r24, Y+1	; 0x01
    28c0:	88 2f       	mov	r24, r24
    28c2:	90 e0       	ldi	r25, 0x00	; 0
    28c4:	68 e7       	ldi	r22, 0x78	; 120
    28c6:	70 e0       	ldi	r23, 0x00	; 0
    28c8:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    28cc:	0f c0       	rjmp	.+30     	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 8: MDIO_voidSetPortValue(A_u8port,EIGHT);
    28ce:	89 81       	ldd	r24, Y+1	; 0x01
    28d0:	88 2f       	mov	r24, r24
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	60 e0       	ldi	r22, 0x00	; 0
    28d6:	70 e0       	ldi	r23, 0x00	; 0
    28d8:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
    28dc:	07 c0       	rjmp	.+14     	; 0x28ec <HSSD_voidDisplayNumber+0x14e>
			break;
		case 9: MDIO_voidSetPortValue(A_u8port,NINE);
    28de:	89 81       	ldd	r24, Y+1	; 0x01
    28e0:	88 2f       	mov	r24, r24
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	60 e1       	ldi	r22, 0x10	; 16
    28e6:	70 e0       	ldi	r23, 0x00	; 0
    28e8:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
			break;
		default:
			break;

		}
	}
    28ec:	0f 90       	pop	r0
    28ee:	0f 90       	pop	r0
    28f0:	0f 90       	pop	r0
    28f2:	0f 90       	pop	r0
    28f4:	cf 91       	pop	r28
    28f6:	df 91       	pop	r29
    28f8:	08 95       	ret

000028fa <HSSD_voidDisplayNumbersAscending>:
	void HSSD_voidDisplayNumbersAscending(u8 A_u8port, u16 A_u16delay)
	{
    28fa:	df 93       	push	r29
    28fc:	cf 93       	push	r28
    28fe:	cd b7       	in	r28, 0x3d	; 61
    2900:	de b7       	in	r29, 0x3e	; 62
    2902:	a1 97       	sbiw	r28, 0x21	; 33
    2904:	0f b6       	in	r0, 0x3f	; 63
    2906:	f8 94       	cli
    2908:	de bf       	out	0x3e, r29	; 62
    290a:	0f be       	out	0x3f, r0	; 63
    290c:	cd bf       	out	0x3d, r28	; 61
    290e:	8a 8f       	std	Y+26, r24	; 0x1a
    2910:	7c 8f       	std	Y+28, r23	; 0x1c
    2912:	6b 8f       	std	Y+27, r22	; 0x1b
		u8 _7_segmant[]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    2914:	ce 01       	movw	r24, r28
    2916:	40 96       	adiw	r24, 0x10	; 16
    2918:	9e 8f       	std	Y+30, r25	; 0x1e
    291a:	8d 8f       	std	Y+29, r24	; 0x1d
    291c:	e5 ea       	ldi	r30, 0xA5	; 165
    291e:	f1 e0       	ldi	r31, 0x01	; 1
    2920:	f8 a3       	std	Y+32, r31	; 0x20
    2922:	ef 8f       	std	Y+31, r30	; 0x1f
    2924:	fa e0       	ldi	r31, 0x0A	; 10
    2926:	f9 a3       	std	Y+33, r31	; 0x21
    2928:	ef 8d       	ldd	r30, Y+31	; 0x1f
    292a:	f8 a1       	ldd	r31, Y+32	; 0x20
    292c:	00 80       	ld	r0, Z
    292e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2930:	98 a1       	ldd	r25, Y+32	; 0x20
    2932:	01 96       	adiw	r24, 0x01	; 1
    2934:	98 a3       	std	Y+32, r25	; 0x20
    2936:	8f 8f       	std	Y+31, r24	; 0x1f
    2938:	ed 8d       	ldd	r30, Y+29	; 0x1d
    293a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    293c:	00 82       	st	Z, r0
    293e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2940:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2942:	01 96       	adiw	r24, 0x01	; 1
    2944:	9e 8f       	std	Y+30, r25	; 0x1e
    2946:	8d 8f       	std	Y+29, r24	; 0x1d
    2948:	99 a1       	ldd	r25, Y+33	; 0x21
    294a:	91 50       	subi	r25, 0x01	; 1
    294c:	99 a3       	std	Y+33, r25	; 0x21
    294e:	e9 a1       	ldd	r30, Y+33	; 0x21
    2950:	ee 23       	and	r30, r30
    2952:	51 f7       	brne	.-44     	; 0x2928 <HSSD_voidDisplayNumbersAscending+0x2e>
		//MDIO_voidSetPortDirection(A_u8port,PORT_OUTPUT);
		for( u8 i=0 ;i<10;i++)
    2954:	1f 86       	std	Y+15, r1	; 0x0f
    2956:	8e c0       	rjmp	.+284    	; 0x2a74 <HSSD_voidDisplayNumbersAscending+0x17a>
		{
			MDIO_voidSetPortValue(A_u8port,_7_segmant[i]);
    2958:	8a 8d       	ldd	r24, Y+26	; 0x1a
    295a:	48 2f       	mov	r20, r24
    295c:	50 e0       	ldi	r21, 0x00	; 0
    295e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2960:	28 2f       	mov	r18, r24
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	ce 01       	movw	r24, r28
    2966:	40 96       	adiw	r24, 0x10	; 16
    2968:	fc 01       	movw	r30, r24
    296a:	e2 0f       	add	r30, r18
    296c:	f3 1f       	adc	r31, r19
    296e:	80 81       	ld	r24, Z
    2970:	28 2f       	mov	r18, r24
    2972:	30 e0       	ldi	r19, 0x00	; 0
    2974:	ca 01       	movw	r24, r20
    2976:	b9 01       	movw	r22, r18
    2978:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <MDIO_voidSetPortValue>
			_delay_ms(A_u16delay);
    297c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    297e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2980:	cc 01       	movw	r24, r24
    2982:	a0 e0       	ldi	r26, 0x00	; 0
    2984:	b0 e0       	ldi	r27, 0x00	; 0
    2986:	bc 01       	movw	r22, r24
    2988:	cd 01       	movw	r24, r26
    298a:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__floatunsisf>
    298e:	dc 01       	movw	r26, r24
    2990:	cb 01       	movw	r24, r22
    2992:	8b 87       	std	Y+11, r24	; 0x0b
    2994:	9c 87       	std	Y+12, r25	; 0x0c
    2996:	ad 87       	std	Y+13, r26	; 0x0d
    2998:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    299a:	6b 85       	ldd	r22, Y+11	; 0x0b
    299c:	7c 85       	ldd	r23, Y+12	; 0x0c
    299e:	8d 85       	ldd	r24, Y+13	; 0x0d
    29a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    29a2:	20 e0       	ldi	r18, 0x00	; 0
    29a4:	30 e0       	ldi	r19, 0x00	; 0
    29a6:	4a ef       	ldi	r20, 0xFA	; 250
    29a8:	54 e4       	ldi	r21, 0x44	; 68
    29aa:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    29ae:	dc 01       	movw	r26, r24
    29b0:	cb 01       	movw	r24, r22
    29b2:	8f 83       	std	Y+7, r24	; 0x07
    29b4:	98 87       	std	Y+8, r25	; 0x08
    29b6:	a9 87       	std	Y+9, r26	; 0x09
    29b8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    29ba:	6f 81       	ldd	r22, Y+7	; 0x07
    29bc:	78 85       	ldd	r23, Y+8	; 0x08
    29be:	89 85       	ldd	r24, Y+9	; 0x09
    29c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    29c2:	20 e0       	ldi	r18, 0x00	; 0
    29c4:	30 e0       	ldi	r19, 0x00	; 0
    29c6:	40 e8       	ldi	r20, 0x80	; 128
    29c8:	5f e3       	ldi	r21, 0x3F	; 63
    29ca:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    29ce:	88 23       	and	r24, r24
    29d0:	2c f4       	brge	.+10     	; 0x29dc <HSSD_voidDisplayNumbersAscending+0xe2>
		__ticks = 1;
    29d2:	81 e0       	ldi	r24, 0x01	; 1
    29d4:	90 e0       	ldi	r25, 0x00	; 0
    29d6:	9e 83       	std	Y+6, r25	; 0x06
    29d8:	8d 83       	std	Y+5, r24	; 0x05
    29da:	3f c0       	rjmp	.+126    	; 0x2a5a <HSSD_voidDisplayNumbersAscending+0x160>
	else if (__tmp > 65535)
    29dc:	6f 81       	ldd	r22, Y+7	; 0x07
    29de:	78 85       	ldd	r23, Y+8	; 0x08
    29e0:	89 85       	ldd	r24, Y+9	; 0x09
    29e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	3f ef       	ldi	r19, 0xFF	; 255
    29e8:	4f e7       	ldi	r20, 0x7F	; 127
    29ea:	57 e4       	ldi	r21, 0x47	; 71
    29ec:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    29f0:	18 16       	cp	r1, r24
    29f2:	4c f5       	brge	.+82     	; 0x2a46 <HSSD_voidDisplayNumbersAscending+0x14c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    29f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    29f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    29fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    29fc:	20 e0       	ldi	r18, 0x00	; 0
    29fe:	30 e0       	ldi	r19, 0x00	; 0
    2a00:	40 e2       	ldi	r20, 0x20	; 32
    2a02:	51 e4       	ldi	r21, 0x41	; 65
    2a04:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    2a08:	dc 01       	movw	r26, r24
    2a0a:	cb 01       	movw	r24, r22
    2a0c:	bc 01       	movw	r22, r24
    2a0e:	cd 01       	movw	r24, r26
    2a10:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2a14:	dc 01       	movw	r26, r24
    2a16:	cb 01       	movw	r24, r22
    2a18:	9e 83       	std	Y+6, r25	; 0x06
    2a1a:	8d 83       	std	Y+5, r24	; 0x05
    2a1c:	0f c0       	rjmp	.+30     	; 0x2a3c <HSSD_voidDisplayNumbersAscending+0x142>
    2a1e:	88 ec       	ldi	r24, 0xC8	; 200
    2a20:	90 e0       	ldi	r25, 0x00	; 0
    2a22:	9c 83       	std	Y+4, r25	; 0x04
    2a24:	8b 83       	std	Y+3, r24	; 0x03
    2a26:	8b 81       	ldd	r24, Y+3	; 0x03
    2a28:	9c 81       	ldd	r25, Y+4	; 0x04
    2a2a:	01 97       	sbiw	r24, 0x01	; 1
    2a2c:	f1 f7       	brne	.-4      	; 0x2a2a <HSSD_voidDisplayNumbersAscending+0x130>
    2a2e:	9c 83       	std	Y+4, r25	; 0x04
    2a30:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a32:	8d 81       	ldd	r24, Y+5	; 0x05
    2a34:	9e 81       	ldd	r25, Y+6	; 0x06
    2a36:	01 97       	sbiw	r24, 0x01	; 1
    2a38:	9e 83       	std	Y+6, r25	; 0x06
    2a3a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a3c:	8d 81       	ldd	r24, Y+5	; 0x05
    2a3e:	9e 81       	ldd	r25, Y+6	; 0x06
    2a40:	00 97       	sbiw	r24, 0x00	; 0
    2a42:	69 f7       	brne	.-38     	; 0x2a1e <HSSD_voidDisplayNumbersAscending+0x124>
    2a44:	14 c0       	rjmp	.+40     	; 0x2a6e <HSSD_voidDisplayNumbersAscending+0x174>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a46:	6f 81       	ldd	r22, Y+7	; 0x07
    2a48:	78 85       	ldd	r23, Y+8	; 0x08
    2a4a:	89 85       	ldd	r24, Y+9	; 0x09
    2a4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a4e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2a52:	dc 01       	movw	r26, r24
    2a54:	cb 01       	movw	r24, r22
    2a56:	9e 83       	std	Y+6, r25	; 0x06
    2a58:	8d 83       	std	Y+5, r24	; 0x05
    2a5a:	8d 81       	ldd	r24, Y+5	; 0x05
    2a5c:	9e 81       	ldd	r25, Y+6	; 0x06
    2a5e:	9a 83       	std	Y+2, r25	; 0x02
    2a60:	89 83       	std	Y+1, r24	; 0x01
    2a62:	89 81       	ldd	r24, Y+1	; 0x01
    2a64:	9a 81       	ldd	r25, Y+2	; 0x02
    2a66:	01 97       	sbiw	r24, 0x01	; 1
    2a68:	f1 f7       	brne	.-4      	; 0x2a66 <HSSD_voidDisplayNumbersAscending+0x16c>
    2a6a:	9a 83       	std	Y+2, r25	; 0x02
    2a6c:	89 83       	std	Y+1, r24	; 0x01
	}
	void HSSD_voidDisplayNumbersAscending(u8 A_u8port, u16 A_u16delay)
	{
		u8 _7_segmant[]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
		//MDIO_voidSetPortDirection(A_u8port,PORT_OUTPUT);
		for( u8 i=0 ;i<10;i++)
    2a6e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a70:	8f 5f       	subi	r24, 0xFF	; 255
    2a72:	8f 87       	std	Y+15, r24	; 0x0f
    2a74:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a76:	8a 30       	cpi	r24, 0x0A	; 10
    2a78:	08 f4       	brcc	.+2      	; 0x2a7c <HSSD_voidDisplayNumbersAscending+0x182>
    2a7a:	6e cf       	rjmp	.-292    	; 0x2958 <HSSD_voidDisplayNumbersAscending+0x5e>
		{
			MDIO_voidSetPortValue(A_u8port,_7_segmant[i]);
			_delay_ms(A_u16delay);
		}
	}
    2a7c:	a1 96       	adiw	r28, 0x21	; 33
    2a7e:	0f b6       	in	r0, 0x3f	; 63
    2a80:	f8 94       	cli
    2a82:	de bf       	out	0x3e, r29	; 62
    2a84:	0f be       	out	0x3f, r0	; 63
    2a86:	cd bf       	out	0x3d, r28	; 61
    2a88:	cf 91       	pop	r28
    2a8a:	df 91       	pop	r29
    2a8c:	08 95       	ret

00002a8e <MTIMER0_voidInit>:
/*******************************************    TIMER0    *******************************************/
/****************************************************************************************************/


void MTIMER0_voidInit(void)
{
    2a8e:	df 93       	push	r29
    2a90:	cf 93       	push	r28
    2a92:	cd b7       	in	r28, 0x3d	; 61
    2a94:	de b7       	in	r29, 0x3e	; 62


		/****************************************************************************************************************************/
	#elif TIMER0_MODE == FAST_PWM_MODE
		// set wave generation to PWM mode
		SET_BIT(TCCR0,3);
    2a96:	a3 e5       	ldi	r26, 0x53	; 83
    2a98:	b0 e0       	ldi	r27, 0x00	; 0
    2a9a:	e3 e5       	ldi	r30, 0x53	; 83
    2a9c:	f0 e0       	ldi	r31, 0x00	; 0
    2a9e:	80 81       	ld	r24, Z
    2aa0:	88 60       	ori	r24, 0x08	; 8
    2aa2:	8c 93       	st	X, r24
		SET_BIT(TCCR0,6);
    2aa4:	a3 e5       	ldi	r26, 0x53	; 83
    2aa6:	b0 e0       	ldi	r27, 0x00	; 0
    2aa8:	e3 e5       	ldi	r30, 0x53	; 83
    2aaa:	f0 e0       	ldi	r31, 0x00	; 0
    2aac:	80 81       	ld	r24, Z
    2aae:	80 64       	ori	r24, 0x40	; 64
    2ab0:	8c 93       	st	X, r24

		// disable all interrupts
		CLR_BIT(TIMSK,1);
    2ab2:	a9 e5       	ldi	r26, 0x59	; 89
    2ab4:	b0 e0       	ldi	r27, 0x00	; 0
    2ab6:	e9 e5       	ldi	r30, 0x59	; 89
    2ab8:	f0 e0       	ldi	r31, 0x00	; 0
    2aba:	80 81       	ld	r24, Z
    2abc:	8d 7f       	andi	r24, 0xFD	; 253
    2abe:	8c 93       	st	X, r24
		CLR_BIT(TIMSK,0);
    2ac0:	a9 e5       	ldi	r26, 0x59	; 89
    2ac2:	b0 e0       	ldi	r27, 0x00	; 0
    2ac4:	e9 e5       	ldi	r30, 0x59	; 89
    2ac6:	f0 e0       	ldi	r31, 0x00	; 0
    2ac8:	80 81       	ld	r24, Z
    2aca:	8e 7f       	andi	r24, 0xFE	; 254
    2acc:	8c 93       	st	X, r24

		//set OCR0 value
		OCR0 = OCR0_value ;
    2ace:	ec e5       	ldi	r30, 0x5C	; 92
    2ad0:	f0 e0       	ldi	r31, 0x00	; 0
    2ad2:	8c e9       	ldi	r24, 0x9C	; 156
    2ad4:	80 83       	st	Z, r24

		//set oc0 configuration
		//start timer
		TCCR0 &= TIMER0_CLK_OCR_MASK;
    2ad6:	a3 e5       	ldi	r26, 0x53	; 83
    2ad8:	b0 e0       	ldi	r27, 0x00	; 0
    2ada:	e3 e5       	ldi	r30, 0x53	; 83
    2adc:	f0 e0       	ldi	r31, 0x00	; 0
    2ade:	80 81       	ld	r24, Z
    2ae0:	88 7c       	andi	r24, 0xC8	; 200
    2ae2:	8c 93       	st	X, r24
		TCCR0 |= (TIMER0_CLK | (OC0_MODE << 4));
    2ae4:	a3 e5       	ldi	r26, 0x53	; 83
    2ae6:	b0 e0       	ldi	r27, 0x00	; 0
    2ae8:	e3 e5       	ldi	r30, 0x53	; 83
    2aea:	f0 e0       	ldi	r31, 0x00	; 0
    2aec:	80 81       	ld	r24, Z
    2aee:	85 62       	ori	r24, 0x25	; 37
    2af0:	8c 93       	st	X, r24
		/****************************************************************************************************************************/
	#elif TIMER0_MODE == PHASE_CORRECT_MODE

		/****************************************************************************************************************************/
	#endif
}
    2af2:	cf 91       	pop	r28
    2af4:	df 91       	pop	r29
    2af6:	08 95       	ret

00002af8 <MTIMER0_voidSet_preload_value>:
void MTIMER0_voidSet_preload_value(u8 A_No_of_tricks)
{
    2af8:	df 93       	push	r29
    2afa:	cf 93       	push	r28
    2afc:	0f 92       	push	r0
    2afe:	cd b7       	in	r28, 0x3d	; 61
    2b00:	de b7       	in	r29, 0x3e	; 62
    2b02:	89 83       	std	Y+1, r24	; 0x01
	TCNT0=A_No_of_tricks;
    2b04:	e2 e5       	ldi	r30, 0x52	; 82
    2b06:	f0 e0       	ldi	r31, 0x00	; 0
    2b08:	89 81       	ldd	r24, Y+1	; 0x01
    2b0a:	80 83       	st	Z, r24
}
    2b0c:	0f 90       	pop	r0
    2b0e:	cf 91       	pop	r28
    2b10:	df 91       	pop	r29
    2b12:	08 95       	ret

00002b14 <MTIMER0_voidStop_timer>:
void MTIMER0_voidStop_timer(void)
{
    2b14:	df 93       	push	r29
    2b16:	cf 93       	push	r28
    2b18:	cd b7       	in	r28, 0x3d	; 61
    2b1a:	de b7       	in	r29, 0x3e	; 62
	TCCR0&=0b11111000; //clear first 3 bit only
    2b1c:	a3 e5       	ldi	r26, 0x53	; 83
    2b1e:	b0 e0       	ldi	r27, 0x00	; 0
    2b20:	e3 e5       	ldi	r30, 0x53	; 83
    2b22:	f0 e0       	ldi	r31, 0x00	; 0
    2b24:	80 81       	ld	r24, Z
    2b26:	88 7f       	andi	r24, 0xF8	; 248
    2b28:	8c 93       	st	X, r24
}
    2b2a:	cf 91       	pop	r28
    2b2c:	df 91       	pop	r29
    2b2e:	08 95       	ret

00002b30 <MTIMER0_voidSet_OCR0_value>:
void MTIMER0_voidSet_OCR0_value(u8 A_OCR0_value)
{
    2b30:	df 93       	push	r29
    2b32:	cf 93       	push	r28
    2b34:	0f 92       	push	r0
    2b36:	cd b7       	in	r28, 0x3d	; 61
    2b38:	de b7       	in	r29, 0x3e	; 62
    2b3a:	89 83       	std	Y+1, r24	; 0x01
	OCR0 = A_OCR0_value;
    2b3c:	ec e5       	ldi	r30, 0x5C	; 92
    2b3e:	f0 e0       	ldi	r31, 0x00	; 0
    2b40:	89 81       	ldd	r24, Y+1	; 0x01
    2b42:	80 83       	st	Z, r24
}
    2b44:	0f 90       	pop	r0
    2b46:	cf 91       	pop	r28
    2b48:	df 91       	pop	r29
    2b4a:	08 95       	ret

00002b4c <MTIMER0_voidSet_CTC_callback>:
void MTIMER0_voidSet_CTC_callback(void (*A_ptr_to_func)(void))
{
    2b4c:	df 93       	push	r29
    2b4e:	cf 93       	push	r28
    2b50:	00 d0       	rcall	.+0      	; 0x2b52 <MTIMER0_voidSet_CTC_callback+0x6>
    2b52:	cd b7       	in	r28, 0x3d	; 61
    2b54:	de b7       	in	r29, 0x3e	; 62
    2b56:	9a 83       	std	Y+2, r25	; 0x02
    2b58:	89 83       	std	Y+1, r24	; 0x01
	if (A_ptr_to_func != NULL)
    2b5a:	89 81       	ldd	r24, Y+1	; 0x01
    2b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b5e:	00 97       	sbiw	r24, 0x00	; 0
    2b60:	31 f0       	breq	.+12     	; 0x2b6e <MTIMER0_voidSet_CTC_callback+0x22>
	{
		Timer0_CALLBACK_CTC = A_ptr_to_func;
    2b62:	89 81       	ldd	r24, Y+1	; 0x01
    2b64:	9a 81       	ldd	r25, Y+2	; 0x02
    2b66:	90 93 b9 01 	sts	0x01B9, r25
    2b6a:	80 93 b8 01 	sts	0x01B8, r24
	}
}
    2b6e:	0f 90       	pop	r0
    2b70:	0f 90       	pop	r0
    2b72:	cf 91       	pop	r28
    2b74:	df 91       	pop	r29
    2b76:	08 95       	ret

00002b78 <MTIMER0_voidSet_overflow_callback>:
void MTIMER0_voidSet_overflow_callback(void (*A_ptr_to_func)(void))
{
    2b78:	df 93       	push	r29
    2b7a:	cf 93       	push	r28
    2b7c:	00 d0       	rcall	.+0      	; 0x2b7e <MTIMER0_voidSet_overflow_callback+0x6>
    2b7e:	cd b7       	in	r28, 0x3d	; 61
    2b80:	de b7       	in	r29, 0x3e	; 62
    2b82:	9a 83       	std	Y+2, r25	; 0x02
    2b84:	89 83       	std	Y+1, r24	; 0x01
	if(A_ptr_to_func != NULL)
    2b86:	89 81       	ldd	r24, Y+1	; 0x01
    2b88:	9a 81       	ldd	r25, Y+2	; 0x02
    2b8a:	00 97       	sbiw	r24, 0x00	; 0
    2b8c:	31 f0       	breq	.+12     	; 0x2b9a <MTIMER0_voidSet_overflow_callback+0x22>
	{

		Timer0_CALLBACK_OVF=A_ptr_to_func;
    2b8e:	89 81       	ldd	r24, Y+1	; 0x01
    2b90:	9a 81       	ldd	r25, Y+2	; 0x02
    2b92:	90 93 b7 01 	sts	0x01B7, r25
    2b96:	80 93 b6 01 	sts	0x01B6, r24
	}
}
    2b9a:	0f 90       	pop	r0
    2b9c:	0f 90       	pop	r0
    2b9e:	cf 91       	pop	r28
    2ba0:	df 91       	pop	r29
    2ba2:	08 95       	ret

00002ba4 <MTIMER1_init_FAST_PWM>:
/*******************************************    TIMER1    *******************************************/
/****************************************************************************************************/


void MTIMER1_init_FAST_PWM()// for SERVO motor only  it's not configurable
{
    2ba4:	df 93       	push	r29
    2ba6:	cf 93       	push	r28
    2ba8:	cd b7       	in	r28, 0x3d	; 61
    2baa:	de b7       	in	r29, 0x3e	; 62
	// select wave form of  FASR PWM mode (number 14 in the table)
	CLR_BIT(TCCR1A,0);
    2bac:	af e4       	ldi	r26, 0x4F	; 79
    2bae:	b0 e0       	ldi	r27, 0x00	; 0
    2bb0:	ef e4       	ldi	r30, 0x4F	; 79
    2bb2:	f0 e0       	ldi	r31, 0x00	; 0
    2bb4:	80 81       	ld	r24, Z
    2bb6:	8e 7f       	andi	r24, 0xFE	; 254
    2bb8:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,1);
    2bba:	af e4       	ldi	r26, 0x4F	; 79
    2bbc:	b0 e0       	ldi	r27, 0x00	; 0
    2bbe:	ef e4       	ldi	r30, 0x4F	; 79
    2bc0:	f0 e0       	ldi	r31, 0x00	; 0
    2bc2:	80 81       	ld	r24, Z
    2bc4:	82 60       	ori	r24, 0x02	; 2
    2bc6:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,3);
    2bc8:	ae e4       	ldi	r26, 0x4E	; 78
    2bca:	b0 e0       	ldi	r27, 0x00	; 0
    2bcc:	ee e4       	ldi	r30, 0x4E	; 78
    2bce:	f0 e0       	ldi	r31, 0x00	; 0
    2bd0:	80 81       	ld	r24, Z
    2bd2:	88 60       	ori	r24, 0x08	; 8
    2bd4:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,4);
    2bd6:	ae e4       	ldi	r26, 0x4E	; 78
    2bd8:	b0 e0       	ldi	r27, 0x00	; 0
    2bda:	ee e4       	ldi	r30, 0x4E	; 78
    2bdc:	f0 e0       	ldi	r31, 0x00	; 0
    2bde:	80 81       	ld	r24, Z
    2be0:	80 61       	ori	r24, 0x10	; 16
    2be2:	8c 93       	st	X, r24
	//disable OVF interrupt and ICU interrupt disable CTC interrupts
	CLR_BIT(TIMSK,TICIE1);
    2be4:	a9 e5       	ldi	r26, 0x59	; 89
    2be6:	b0 e0       	ldi	r27, 0x00	; 0
    2be8:	e9 e5       	ldi	r30, 0x59	; 89
    2bea:	f0 e0       	ldi	r31, 0x00	; 0
    2bec:	80 81       	ld	r24, Z
    2bee:	8f 7d       	andi	r24, 0xDF	; 223
    2bf0:	8c 93       	st	X, r24
	CLR_BIT(TIMSK,TOIE1);
    2bf2:	a9 e5       	ldi	r26, 0x59	; 89
    2bf4:	b0 e0       	ldi	r27, 0x00	; 0
    2bf6:	e9 e5       	ldi	r30, 0x59	; 89
    2bf8:	f0 e0       	ldi	r31, 0x00	; 0
    2bfa:	80 81       	ld	r24, Z
    2bfc:	8b 7f       	andi	r24, 0xFB	; 251
    2bfe:	8c 93       	st	X, r24
	CLR_BIT(TIMSK,OCIE1A);
    2c00:	a9 e5       	ldi	r26, 0x59	; 89
    2c02:	b0 e0       	ldi	r27, 0x00	; 0
    2c04:	e9 e5       	ldi	r30, 0x59	; 89
    2c06:	f0 e0       	ldi	r31, 0x00	; 0
    2c08:	80 81       	ld	r24, Z
    2c0a:	8f 7e       	andi	r24, 0xEF	; 239
    2c0c:	8c 93       	st	X, r24
	CLR_BIT(TIMSK,OCIE1B);
    2c0e:	a9 e5       	ldi	r26, 0x59	; 89
    2c10:	b0 e0       	ldi	r27, 0x00	; 0
    2c12:	e9 e5       	ldi	r30, 0x59	; 89
    2c14:	f0 e0       	ldi	r31, 0x00	; 0
    2c16:	80 81       	ld	r24, Z
    2c18:	87 7f       	andi	r24, 0xF7	; 247
    2c1a:	8c 93       	st	X, r24
	// select non inverting mode
	CLR_BIT(TCCR1A,6);
    2c1c:	af e4       	ldi	r26, 0x4F	; 79
    2c1e:	b0 e0       	ldi	r27, 0x00	; 0
    2c20:	ef e4       	ldi	r30, 0x4F	; 79
    2c22:	f0 e0       	ldi	r31, 0x00	; 0
    2c24:	80 81       	ld	r24, Z
    2c26:	8f 7b       	andi	r24, 0xBF	; 191
    2c28:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,7);
    2c2a:	af e4       	ldi	r26, 0x4F	; 79
    2c2c:	b0 e0       	ldi	r27, 0x00	; 0
    2c2e:	ef e4       	ldi	r30, 0x4F	; 79
    2c30:	f0 e0       	ldi	r31, 0x00	; 0
    2c32:	80 81       	ld	r24, Z
    2c34:	80 68       	ori	r24, 0x80	; 128
    2c36:	8c 93       	st	X, r24
	//set ICR-->19999
	ICR1=19999;
    2c38:	e6 e4       	ldi	r30, 0x46	; 70
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	8f e1       	ldi	r24, 0x1F	; 31
    2c3e:	9e e4       	ldi	r25, 0x4E	; 78
    2c40:	91 83       	std	Z+1, r25	; 0x01
    2c42:	80 83       	st	Z, r24
	// set OCR1A -->1000 ==1000 MICRO SEC for 1 m SEC
	OCR1A=500;
    2c44:	ea e4       	ldi	r30, 0x4A	; 74
    2c46:	f0 e0       	ldi	r31, 0x00	; 0
    2c48:	84 ef       	ldi	r24, 0xF4	; 244
    2c4a:	91 e0       	ldi	r25, 0x01	; 1
    2c4c:	91 83       	std	Z+1, r25	; 0x01
    2c4e:	80 83       	st	Z, r24
	//start timer by setting it's CLK
	CLR_BIT(TCCR1B,0);
    2c50:	ae e4       	ldi	r26, 0x4E	; 78
    2c52:	b0 e0       	ldi	r27, 0x00	; 0
    2c54:	ee e4       	ldi	r30, 0x4E	; 78
    2c56:	f0 e0       	ldi	r31, 0x00	; 0
    2c58:	80 81       	ld	r24, Z
    2c5a:	8e 7f       	andi	r24, 0xFE	; 254
    2c5c:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,1);
    2c5e:	ae e4       	ldi	r26, 0x4E	; 78
    2c60:	b0 e0       	ldi	r27, 0x00	; 0
    2c62:	ee e4       	ldi	r30, 0x4E	; 78
    2c64:	f0 e0       	ldi	r31, 0x00	; 0
    2c66:	80 81       	ld	r24, Z
    2c68:	82 60       	ori	r24, 0x02	; 2
    2c6a:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,2);
    2c6c:	ae e4       	ldi	r26, 0x4E	; 78
    2c6e:	b0 e0       	ldi	r27, 0x00	; 0
    2c70:	ee e4       	ldi	r30, 0x4E	; 78
    2c72:	f0 e0       	ldi	r31, 0x00	; 0
    2c74:	80 81       	ld	r24, Z
    2c76:	8b 7f       	andi	r24, 0xFB	; 251
    2c78:	8c 93       	st	X, r24
}
    2c7a:	cf 91       	pop	r28
    2c7c:	df 91       	pop	r29
    2c7e:	08 95       	ret

00002c80 <MTIMER1_init_ICU>:
void MTIMER1_init_ICU()
{
    2c80:	df 93       	push	r29
    2c82:	cf 93       	push	r28
    2c84:	cd b7       	in	r28, 0x3d	; 61
    2c86:	de b7       	in	r29, 0x3e	; 62
	/****** normal mode**********/
	//set wave generation mode on normal mode
	CLR_BIT(TCCR1A, 0);
    2c88:	af e4       	ldi	r26, 0x4F	; 79
    2c8a:	b0 e0       	ldi	r27, 0x00	; 0
    2c8c:	ef e4       	ldi	r30, 0x4F	; 79
    2c8e:	f0 e0       	ldi	r31, 0x00	; 0
    2c90:	80 81       	ld	r24, Z
    2c92:	8e 7f       	andi	r24, 0xFE	; 254
    2c94:	8c 93       	st	X, r24
	CLR_BIT(TCCR1A, 1);
    2c96:	af e4       	ldi	r26, 0x4F	; 79
    2c98:	b0 e0       	ldi	r27, 0x00	; 0
    2c9a:	ef e4       	ldi	r30, 0x4F	; 79
    2c9c:	f0 e0       	ldi	r31, 0x00	; 0
    2c9e:	80 81       	ld	r24, Z
    2ca0:	8d 7f       	andi	r24, 0xFD	; 253
    2ca2:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B, 3);
    2ca4:	ae e4       	ldi	r26, 0x4E	; 78
    2ca6:	b0 e0       	ldi	r27, 0x00	; 0
    2ca8:	ee e4       	ldi	r30, 0x4E	; 78
    2caa:	f0 e0       	ldi	r31, 0x00	; 0
    2cac:	80 81       	ld	r24, Z
    2cae:	87 7f       	andi	r24, 0xF7	; 247
    2cb0:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B, 4);
    2cb2:	ae e4       	ldi	r26, 0x4E	; 78
    2cb4:	b0 e0       	ldi	r27, 0x00	; 0
    2cb6:	ee e4       	ldi	r30, 0x4E	; 78
    2cb8:	f0 e0       	ldi	r31, 0x00	; 0
    2cba:	80 81       	ld	r24, Z
    2cbc:	8f 7e       	andi	r24, 0xEF	; 239
    2cbe:	8c 93       	st	X, r24
	//enable OVF interrupt and ICU interrupt disable CTC interrupts
	SET_BIT(TIMSK,TICIE1);
    2cc0:	a9 e5       	ldi	r26, 0x59	; 89
    2cc2:	b0 e0       	ldi	r27, 0x00	; 0
    2cc4:	e9 e5       	ldi	r30, 0x59	; 89
    2cc6:	f0 e0       	ldi	r31, 0x00	; 0
    2cc8:	80 81       	ld	r24, Z
    2cca:	80 62       	ori	r24, 0x20	; 32
    2ccc:	8c 93       	st	X, r24
	SET_BIT(TIMSK,TOIE1);
    2cce:	a9 e5       	ldi	r26, 0x59	; 89
    2cd0:	b0 e0       	ldi	r27, 0x00	; 0
    2cd2:	e9 e5       	ldi	r30, 0x59	; 89
    2cd4:	f0 e0       	ldi	r31, 0x00	; 0
    2cd6:	80 81       	ld	r24, Z
    2cd8:	84 60       	ori	r24, 0x04	; 4
    2cda:	8c 93       	st	X, r24
	CLR_BIT(TIMSK,OCIE1A);
    2cdc:	a9 e5       	ldi	r26, 0x59	; 89
    2cde:	b0 e0       	ldi	r27, 0x00	; 0
    2ce0:	e9 e5       	ldi	r30, 0x59	; 89
    2ce2:	f0 e0       	ldi	r31, 0x00	; 0
    2ce4:	80 81       	ld	r24, Z
    2ce6:	8f 7e       	andi	r24, 0xEF	; 239
    2ce8:	8c 93       	st	X, r24
	CLR_BIT(TIMSK,OCIE1B);
    2cea:	a9 e5       	ldi	r26, 0x59	; 89
    2cec:	b0 e0       	ldi	r27, 0x00	; 0
    2cee:	e9 e5       	ldi	r30, 0x59	; 89
    2cf0:	f0 e0       	ldi	r31, 0x00	; 0
    2cf2:	80 81       	ld	r24, Z
    2cf4:	87 7f       	andi	r24, 0xF7	; 247
    2cf6:	8c 93       	st	X, r24
	//select the edge of the ICU
	SET_BIT(TCCR1B,ICES1);
    2cf8:	ae e4       	ldi	r26, 0x4E	; 78
    2cfa:	b0 e0       	ldi	r27, 0x00	; 0
    2cfc:	ee e4       	ldi	r30, 0x4E	; 78
    2cfe:	f0 e0       	ldi	r31, 0x00	; 0
    2d00:	80 81       	ld	r24, Z
    2d02:	80 64       	ori	r24, 0x40	; 64
    2d04:	8c 93       	st	X, r24
	//start timer by setting it's CLK
	CLR_BIT(TCCR1B, 0);
    2d06:	ae e4       	ldi	r26, 0x4E	; 78
    2d08:	b0 e0       	ldi	r27, 0x00	; 0
    2d0a:	ee e4       	ldi	r30, 0x4E	; 78
    2d0c:	f0 e0       	ldi	r31, 0x00	; 0
    2d0e:	80 81       	ld	r24, Z
    2d10:	8e 7f       	andi	r24, 0xFE	; 254
    2d12:	8c 93       	st	X, r24
	SET_BIT(TCCR1B, 1);
    2d14:	ae e4       	ldi	r26, 0x4E	; 78
    2d16:	b0 e0       	ldi	r27, 0x00	; 0
    2d18:	ee e4       	ldi	r30, 0x4E	; 78
    2d1a:	f0 e0       	ldi	r31, 0x00	; 0
    2d1c:	80 81       	ld	r24, Z
    2d1e:	82 60       	ori	r24, 0x02	; 2
    2d20:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B, 2);
    2d22:	ae e4       	ldi	r26, 0x4E	; 78
    2d24:	b0 e0       	ldi	r27, 0x00	; 0
    2d26:	ee e4       	ldi	r30, 0x4E	; 78
    2d28:	f0 e0       	ldi	r31, 0x00	; 0
    2d2a:	80 81       	ld	r24, Z
    2d2c:	8b 7f       	andi	r24, 0xFB	; 251
    2d2e:	8c 93       	st	X, r24
}
    2d30:	cf 91       	pop	r28
    2d32:	df 91       	pop	r29
    2d34:	08 95       	ret

00002d36 <MTimer1_SetCallBack_OVF>:
void MTimer1_SetCallBack_OVF(void (*tmr1_ptf)(void)) {
    2d36:	df 93       	push	r29
    2d38:	cf 93       	push	r28
    2d3a:	00 d0       	rcall	.+0      	; 0x2d3c <MTimer1_SetCallBack_OVF+0x6>
    2d3c:	cd b7       	in	r28, 0x3d	; 61
    2d3e:	de b7       	in	r29, 0x3e	; 62
    2d40:	9a 83       	std	Y+2, r25	; 0x02
    2d42:	89 83       	std	Y+1, r24	; 0x01
	if (tmr1_ptf != NULL)
    2d44:	89 81       	ldd	r24, Y+1	; 0x01
    2d46:	9a 81       	ldd	r25, Y+2	; 0x02
    2d48:	00 97       	sbiw	r24, 0x00	; 0
    2d4a:	31 f0       	breq	.+12     	; 0x2d58 <MTimer1_SetCallBack_OVF+0x22>
	{
		TIMER1_CALLBACK_OVF = tmr1_ptf;
    2d4c:	89 81       	ldd	r24, Y+1	; 0x01
    2d4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d50:	90 93 bb 01 	sts	0x01BB, r25
    2d54:	80 93 ba 01 	sts	0x01BA, r24
	}
}
    2d58:	0f 90       	pop	r0
    2d5a:	0f 90       	pop	r0
    2d5c:	cf 91       	pop	r28
    2d5e:	df 91       	pop	r29
    2d60:	08 95       	ret

00002d62 <MTimer1_SetCallBack_ICU>:
void MTimer1_SetCallBack_ICU(void (*(TMR1_ICU))(void)) {
    2d62:	df 93       	push	r29
    2d64:	cf 93       	push	r28
    2d66:	00 d0       	rcall	.+0      	; 0x2d68 <MTimer1_SetCallBack_ICU+0x6>
    2d68:	cd b7       	in	r28, 0x3d	; 61
    2d6a:	de b7       	in	r29, 0x3e	; 62
    2d6c:	9a 83       	std	Y+2, r25	; 0x02
    2d6e:	89 83       	std	Y+1, r24	; 0x01
	if (TMR1_ICU != NULL)
    2d70:	89 81       	ldd	r24, Y+1	; 0x01
    2d72:	9a 81       	ldd	r25, Y+2	; 0x02
    2d74:	00 97       	sbiw	r24, 0x00	; 0
    2d76:	31 f0       	breq	.+12     	; 0x2d84 <MTimer1_SetCallBack_ICU+0x22>
	{
		TIMER1_CALLBACK_ICU = TMR1_ICU;
    2d78:	89 81       	ldd	r24, Y+1	; 0x01
    2d7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7c:	90 93 bd 01 	sts	0x01BD, r25
    2d80:	80 93 bc 01 	sts	0x01BC, r24
	}
}
    2d84:	0f 90       	pop	r0
    2d86:	0f 90       	pop	r0
    2d88:	cf 91       	pop	r28
    2d8a:	df 91       	pop	r29
    2d8c:	08 95       	ret

00002d8e <MTimer1_SetCallBack_COMPA>:
void MTimer1_SetCallBack_COMPA(void (*tmr1_ptf)(void)) {
    2d8e:	df 93       	push	r29
    2d90:	cf 93       	push	r28
    2d92:	00 d0       	rcall	.+0      	; 0x2d94 <MTimer1_SetCallBack_COMPA+0x6>
    2d94:	cd b7       	in	r28, 0x3d	; 61
    2d96:	de b7       	in	r29, 0x3e	; 62
    2d98:	9a 83       	std	Y+2, r25	; 0x02
    2d9a:	89 83       	std	Y+1, r24	; 0x01
	if (tmr1_ptf != NULL)
    2d9c:	89 81       	ldd	r24, Y+1	; 0x01
    2d9e:	9a 81       	ldd	r25, Y+2	; 0x02
    2da0:	00 97       	sbiw	r24, 0x00	; 0
    2da2:	31 f0       	breq	.+12     	; 0x2db0 <MTimer1_SetCallBack_COMPA+0x22>
	{
		TIMER1_CALLBACK_COMPA = tmr1_ptf;
    2da4:	89 81       	ldd	r24, Y+1	; 0x01
    2da6:	9a 81       	ldd	r25, Y+2	; 0x02
    2da8:	90 93 bf 01 	sts	0x01BF, r25
    2dac:	80 93 be 01 	sts	0x01BE, r24
	}
}
    2db0:	0f 90       	pop	r0
    2db2:	0f 90       	pop	r0
    2db4:	cf 91       	pop	r28
    2db6:	df 91       	pop	r29
    2db8:	08 95       	ret

00002dba <MTimer1_SetCallBack_COMPB>:
void MTimer1_SetCallBack_COMPB(void (*tmr1_ptf)(void)) {
    2dba:	df 93       	push	r29
    2dbc:	cf 93       	push	r28
    2dbe:	00 d0       	rcall	.+0      	; 0x2dc0 <MTimer1_SetCallBack_COMPB+0x6>
    2dc0:	cd b7       	in	r28, 0x3d	; 61
    2dc2:	de b7       	in	r29, 0x3e	; 62
    2dc4:	9a 83       	std	Y+2, r25	; 0x02
    2dc6:	89 83       	std	Y+1, r24	; 0x01
	if (tmr1_ptf != NULL)
    2dc8:	89 81       	ldd	r24, Y+1	; 0x01
    2dca:	9a 81       	ldd	r25, Y+2	; 0x02
    2dcc:	00 97       	sbiw	r24, 0x00	; 0
    2dce:	31 f0       	breq	.+12     	; 0x2ddc <MTimer1_SetCallBack_COMPB+0x22>
	{
		TIMER1_CALLBACK_COMPB = tmr1_ptf;
    2dd0:	89 81       	ldd	r24, Y+1	; 0x01
    2dd2:	9a 81       	ldd	r25, Y+2	; 0x02
    2dd4:	90 93 c1 01 	sts	0x01C1, r25
    2dd8:	80 93 c0 01 	sts	0x01C0, r24
	}
}
    2ddc:	0f 90       	pop	r0
    2dde:	0f 90       	pop	r0
    2de0:	cf 91       	pop	r28
    2de2:	df 91       	pop	r29
    2de4:	08 95       	ret

00002de6 <MTimer1_Init>:
void MTimer1_Init(TIMER1_MODE_E A_mode,OCRA_PHASE_FAST_PWM_E A_OCRA,OCRB_PHASE_FAST_PWM_E A_OCRB)
{
    2de6:	df 93       	push	r29
    2de8:	cf 93       	push	r28
    2dea:	00 d0       	rcall	.+0      	; 0x2dec <MTimer1_Init+0x6>
    2dec:	0f 92       	push	r0
    2dee:	cd b7       	in	r28, 0x3d	; 61
    2df0:	de b7       	in	r29, 0x3e	; 62
    2df2:	89 83       	std	Y+1, r24	; 0x01
    2df4:	6a 83       	std	Y+2, r22	; 0x02
    2df6:	4b 83       	std	Y+3, r20	; 0x03
	if(A_mode<=TIMER1_PWM_FAST_MODE_OCR1A && A_mode>=TIMER1_NORMAL_MODE)
    2df8:	89 81       	ldd	r24, Y+1	; 0x01
    2dfa:	80 31       	cpi	r24, 0x10	; 16
    2dfc:	38 f5       	brcc	.+78     	; 0x2e4c <MTimer1_Init+0x66>
	{
		TCCR1A &= TIMER1_MODE_MASK_TCCR1A;
    2dfe:	af e4       	ldi	r26, 0x4F	; 79
    2e00:	b0 e0       	ldi	r27, 0x00	; 0
    2e02:	ef e4       	ldi	r30, 0x4F	; 79
    2e04:	f0 e0       	ldi	r31, 0x00	; 0
    2e06:	80 81       	ld	r24, Z
    2e08:	8c 70       	andi	r24, 0x0C	; 12
    2e0a:	8c 93       	st	X, r24
		TCCR1B &= TIMER1_MODE_MASK_TCCR1B;
    2e0c:	ae e4       	ldi	r26, 0x4E	; 78
    2e0e:	b0 e0       	ldi	r27, 0x00	; 0
    2e10:	ee e4       	ldi	r30, 0x4E	; 78
    2e12:	f0 e0       	ldi	r31, 0x00	; 0
    2e14:	80 81       	ld	r24, Z
    2e16:	87 7c       	andi	r24, 0xC7	; 199
    2e18:	8c 93       	st	X, r24
		TCCR1A  = TCCR1A | (A_mode & 0b00000011);
    2e1a:	af e4       	ldi	r26, 0x4F	; 79
    2e1c:	b0 e0       	ldi	r27, 0x00	; 0
    2e1e:	ef e4       	ldi	r30, 0x4F	; 79
    2e20:	f0 e0       	ldi	r31, 0x00	; 0
    2e22:	80 81       	ld	r24, Z
    2e24:	98 2f       	mov	r25, r24
    2e26:	89 81       	ldd	r24, Y+1	; 0x01
    2e28:	83 70       	andi	r24, 0x03	; 3
    2e2a:	89 2b       	or	r24, r25
    2e2c:	8c 93       	st	X, r24
		TCCR1B  = TCCR1B | ((A_mode & 0b00001100)<<1);
    2e2e:	ae e4       	ldi	r26, 0x4E	; 78
    2e30:	b0 e0       	ldi	r27, 0x00	; 0
    2e32:	ee e4       	ldi	r30, 0x4E	; 78
    2e34:	f0 e0       	ldi	r31, 0x00	; 0
    2e36:	80 81       	ld	r24, Z
    2e38:	28 2f       	mov	r18, r24
    2e3a:	89 81       	ldd	r24, Y+1	; 0x01
    2e3c:	88 2f       	mov	r24, r24
    2e3e:	90 e0       	ldi	r25, 0x00	; 0
    2e40:	8c 70       	andi	r24, 0x0C	; 12
    2e42:	90 70       	andi	r25, 0x00	; 0
    2e44:	88 0f       	add	r24, r24
    2e46:	99 1f       	adc	r25, r25
    2e48:	82 2b       	or	r24, r18
    2e4a:	8c 93       	st	X, r24
	}
        TCCR1A = TCCR1A | A_OCRA;
    2e4c:	af e4       	ldi	r26, 0x4F	; 79
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	ef e4       	ldi	r30, 0x4F	; 79
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	90 81       	ld	r25, Z
    2e56:	8a 81       	ldd	r24, Y+2	; 0x02
    2e58:	89 2b       	or	r24, r25
    2e5a:	8c 93       	st	X, r24
        TCCR1A = TCCR1A | A_OCRB;
    2e5c:	af e4       	ldi	r26, 0x4F	; 79
    2e5e:	b0 e0       	ldi	r27, 0x00	; 0
    2e60:	ef e4       	ldi	r30, 0x4F	; 79
    2e62:	f0 e0       	ldi	r31, 0x00	; 0
    2e64:	90 81       	ld	r25, Z
    2e66:	8b 81       	ldd	r24, Y+3	; 0x03
    2e68:	89 2b       	or	r24, r25
    2e6a:	8c 93       	st	X, r24
}
    2e6c:	0f 90       	pop	r0
    2e6e:	0f 90       	pop	r0
    2e70:	0f 90       	pop	r0
    2e72:	cf 91       	pop	r28
    2e74:	df 91       	pop	r29
    2e76:	08 95       	ret

00002e78 <MTimer1_Start>:
void MTimer1_Start(Prescalar_E A_value)
{
    2e78:	df 93       	push	r29
    2e7a:	cf 93       	push	r28
    2e7c:	0f 92       	push	r0
    2e7e:	cd b7       	in	r28, 0x3d	; 61
    2e80:	de b7       	in	r29, 0x3e	; 62
    2e82:	89 83       	std	Y+1, r24	; 0x01
	TCCR1B&= TIMER_CLK_MASK;
    2e84:	ae e4       	ldi	r26, 0x4E	; 78
    2e86:	b0 e0       	ldi	r27, 0x00	; 0
    2e88:	ee e4       	ldi	r30, 0x4E	; 78
    2e8a:	f0 e0       	ldi	r31, 0x00	; 0
    2e8c:	80 81       	ld	r24, Z
    2e8e:	88 7f       	andi	r24, 0xF8	; 248
    2e90:	8c 93       	st	X, r24
	if(A_value<=EXTERNAL_T0_RISING_EDGE && A_value>=NO_CLOCK_SOURCE )
    2e92:	89 81       	ldd	r24, Y+1	; 0x01
    2e94:	88 30       	cpi	r24, 0x08	; 8
    2e96:	40 f4       	brcc	.+16     	; 0x2ea8 <MTimer1_Start+0x30>
	TCCR1B|= A_value;
    2e98:	ae e4       	ldi	r26, 0x4E	; 78
    2e9a:	b0 e0       	ldi	r27, 0x00	; 0
    2e9c:	ee e4       	ldi	r30, 0x4E	; 78
    2e9e:	f0 e0       	ldi	r31, 0x00	; 0
    2ea0:	90 81       	ld	r25, Z
    2ea2:	89 81       	ldd	r24, Y+1	; 0x01
    2ea4:	89 2b       	or	r24, r25
    2ea6:	8c 93       	st	X, r24
}
    2ea8:	0f 90       	pop	r0
    2eaa:	cf 91       	pop	r28
    2eac:	df 91       	pop	r29
    2eae:	08 95       	ret

00002eb0 <MTimer1_Stop>:
void MTimer1_Stop(void)
{
    2eb0:	df 93       	push	r29
    2eb2:	cf 93       	push	r28
    2eb4:	cd b7       	in	r28, 0x3d	; 61
    2eb6:	de b7       	in	r29, 0x3e	; 62
	TCCR1B&= TIMER_CLK_MASK;
    2eb8:	ae e4       	ldi	r26, 0x4E	; 78
    2eba:	b0 e0       	ldi	r27, 0x00	; 0
    2ebc:	ee e4       	ldi	r30, 0x4E	; 78
    2ebe:	f0 e0       	ldi	r31, 0x00	; 0
    2ec0:	80 81       	ld	r24, Z
    2ec2:	88 7f       	andi	r24, 0xF8	; 248
    2ec4:	8c 93       	st	X, r24
}
    2ec6:	cf 91       	pop	r28
    2ec8:	df 91       	pop	r29
    2eca:	08 95       	ret

00002ecc <MTIMER1_SetOCR1A>:
void MTIMER1_SetOCR1A(u16 A_u16Value)
{
    2ecc:	df 93       	push	r29
    2ece:	cf 93       	push	r28
    2ed0:	00 d0       	rcall	.+0      	; 0x2ed2 <MTIMER1_SetOCR1A+0x6>
    2ed2:	cd b7       	in	r28, 0x3d	; 61
    2ed4:	de b7       	in	r29, 0x3e	; 62
    2ed6:	9a 83       	std	Y+2, r25	; 0x02
    2ed8:	89 83       	std	Y+1, r24	; 0x01
	OCR1A = A_u16Value;
    2eda:	ea e4       	ldi	r30, 0x4A	; 74
    2edc:	f0 e0       	ldi	r31, 0x00	; 0
    2ede:	89 81       	ldd	r24, Y+1	; 0x01
    2ee0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ee2:	91 83       	std	Z+1, r25	; 0x01
    2ee4:	80 83       	st	Z, r24
}
    2ee6:	0f 90       	pop	r0
    2ee8:	0f 90       	pop	r0
    2eea:	cf 91       	pop	r28
    2eec:	df 91       	pop	r29
    2eee:	08 95       	ret

00002ef0 <MTIMER1_SetOCR1B>:
void MTIMER1_SetOCR1B(u16 A_u16Value)
{
    2ef0:	df 93       	push	r29
    2ef2:	cf 93       	push	r28
    2ef4:	00 d0       	rcall	.+0      	; 0x2ef6 <MTIMER1_SetOCR1B+0x6>
    2ef6:	cd b7       	in	r28, 0x3d	; 61
    2ef8:	de b7       	in	r29, 0x3e	; 62
    2efa:	9a 83       	std	Y+2, r25	; 0x02
    2efc:	89 83       	std	Y+1, r24	; 0x01
	OCR1B = A_u16Value;
    2efe:	e8 e4       	ldi	r30, 0x48	; 72
    2f00:	f0 e0       	ldi	r31, 0x00	; 0
    2f02:	89 81       	ldd	r24, Y+1	; 0x01
    2f04:	9a 81       	ldd	r25, Y+2	; 0x02
    2f06:	91 83       	std	Z+1, r25	; 0x01
    2f08:	80 83       	st	Z, r24
}
    2f0a:	0f 90       	pop	r0
    2f0c:	0f 90       	pop	r0
    2f0e:	cf 91       	pop	r28
    2f10:	df 91       	pop	r29
    2f12:	08 95       	ret

00002f14 <MTIMER1_SetICR1>:
void MTIMER1_SetICR1(u16 A_u16Value)
{
    2f14:	df 93       	push	r29
    2f16:	cf 93       	push	r28
    2f18:	00 d0       	rcall	.+0      	; 0x2f1a <MTIMER1_SetICR1+0x6>
    2f1a:	cd b7       	in	r28, 0x3d	; 61
    2f1c:	de b7       	in	r29, 0x3e	; 62
    2f1e:	9a 83       	std	Y+2, r25	; 0x02
    2f20:	89 83       	std	Y+1, r24	; 0x01
	ICR1 = A_u16Value;
    2f22:	e6 e4       	ldi	r30, 0x46	; 70
    2f24:	f0 e0       	ldi	r31, 0x00	; 0
    2f26:	89 81       	ldd	r24, Y+1	; 0x01
    2f28:	9a 81       	ldd	r25, Y+2	; 0x02
    2f2a:	91 83       	std	Z+1, r25	; 0x01
    2f2c:	80 83       	st	Z, r24
}
    2f2e:	0f 90       	pop	r0
    2f30:	0f 90       	pop	r0
    2f32:	cf 91       	pop	r28
    2f34:	df 91       	pop	r29
    2f36:	08 95       	ret

00002f38 <MTIMER1_SetTCNT1>:
void MTIMER1_SetTCNT1(u16 A_u16Value)
{
    2f38:	df 93       	push	r29
    2f3a:	cf 93       	push	r28
    2f3c:	00 d0       	rcall	.+0      	; 0x2f3e <MTIMER1_SetTCNT1+0x6>
    2f3e:	cd b7       	in	r28, 0x3d	; 61
    2f40:	de b7       	in	r29, 0x3e	; 62
    2f42:	9a 83       	std	Y+2, r25	; 0x02
    2f44:	89 83       	std	Y+1, r24	; 0x01
	TCNT1 = A_u16Value;
    2f46:	ec e4       	ldi	r30, 0x4C	; 76
    2f48:	f0 e0       	ldi	r31, 0x00	; 0
    2f4a:	89 81       	ldd	r24, Y+1	; 0x01
    2f4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f4e:	91 83       	std	Z+1, r25	; 0x01
    2f50:	80 83       	st	Z, r24
}
    2f52:	0f 90       	pop	r0
    2f54:	0f 90       	pop	r0
    2f56:	cf 91       	pop	r28
    2f58:	df 91       	pop	r29
    2f5a:	08 95       	ret

00002f5c <MTimer1_InputCpetureEdge>:
void MTimer1_InputCpetureEdge(EDGE_E A_Edge)
{
    2f5c:	df 93       	push	r29
    2f5e:	cf 93       	push	r28
    2f60:	0f 92       	push	r0
    2f62:	cd b7       	in	r28, 0x3d	; 61
    2f64:	de b7       	in	r29, 0x3e	; 62
    2f66:	89 83       	std	Y+1, r24	; 0x01
	if(FALLING_EDGE_ICU ==A_Edge)
    2f68:	89 81       	ldd	r24, Y+1	; 0x01
    2f6a:	88 23       	and	r24, r24
    2f6c:	41 f4       	brne	.+16     	; 0x2f7e <MTimer1_InputCpetureEdge+0x22>
	{
		CLR_BIT(TCCR1B,ICES1);
    2f6e:	ae e4       	ldi	r26, 0x4E	; 78
    2f70:	b0 e0       	ldi	r27, 0x00	; 0
    2f72:	ee e4       	ldi	r30, 0x4E	; 78
    2f74:	f0 e0       	ldi	r31, 0x00	; 0
    2f76:	80 81       	ld	r24, Z
    2f78:	8f 7b       	andi	r24, 0xBF	; 191
    2f7a:	8c 93       	st	X, r24
    2f7c:	0a c0       	rjmp	.+20     	; 0x2f92 <MTimer1_InputCpetureEdge+0x36>
	}
	else if(RISING_EDGE_ICU ==A_Edge)
    2f7e:	89 81       	ldd	r24, Y+1	; 0x01
    2f80:	81 30       	cpi	r24, 0x01	; 1
    2f82:	39 f4       	brne	.+14     	; 0x2f92 <MTimer1_InputCpetureEdge+0x36>
	{
		SET_BIT(TCCR1B,ICES1);
    2f84:	ae e4       	ldi	r26, 0x4E	; 78
    2f86:	b0 e0       	ldi	r27, 0x00	; 0
    2f88:	ee e4       	ldi	r30, 0x4E	; 78
    2f8a:	f0 e0       	ldi	r31, 0x00	; 0
    2f8c:	80 81       	ld	r24, Z
    2f8e:	80 64       	ori	r24, 0x40	; 64
    2f90:	8c 93       	st	X, r24
	}
}
    2f92:	0f 90       	pop	r0
    2f94:	cf 91       	pop	r28
    2f96:	df 91       	pop	r29
    2f98:	08 95       	ret

00002f9a <MTIMER1_OVF_Interrupt_Enable>:
void MTIMER1_OVF_Interrupt_Enable(void)
{
    2f9a:	df 93       	push	r29
    2f9c:	cf 93       	push	r28
    2f9e:	cd b7       	in	r28, 0x3d	; 61
    2fa0:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TOIE1);
    2fa2:	a9 e5       	ldi	r26, 0x59	; 89
    2fa4:	b0 e0       	ldi	r27, 0x00	; 0
    2fa6:	e9 e5       	ldi	r30, 0x59	; 89
    2fa8:	f0 e0       	ldi	r31, 0x00	; 0
    2faa:	80 81       	ld	r24, Z
    2fac:	84 60       	ori	r24, 0x04	; 4
    2fae:	8c 93       	st	X, r24
}
    2fb0:	cf 91       	pop	r28
    2fb2:	df 91       	pop	r29
    2fb4:	08 95       	ret

00002fb6 <MTIMER1_OCMA_Interrupt_Enable>:
void MTIMER1_OCMA_Interrupt_Enable(void)
{
    2fb6:	df 93       	push	r29
    2fb8:	cf 93       	push	r28
    2fba:	cd b7       	in	r28, 0x3d	; 61
    2fbc:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE1A);
    2fbe:	a9 e5       	ldi	r26, 0x59	; 89
    2fc0:	b0 e0       	ldi	r27, 0x00	; 0
    2fc2:	e9 e5       	ldi	r30, 0x59	; 89
    2fc4:	f0 e0       	ldi	r31, 0x00	; 0
    2fc6:	80 81       	ld	r24, Z
    2fc8:	80 61       	ori	r24, 0x10	; 16
    2fca:	8c 93       	st	X, r24
}
    2fcc:	cf 91       	pop	r28
    2fce:	df 91       	pop	r29
    2fd0:	08 95       	ret

00002fd2 <MTIMER1_OCMB_Interrupt_Enable>:
void MTIMER1_OCMB_Interrupt_Enable(void)
{
    2fd2:	df 93       	push	r29
    2fd4:	cf 93       	push	r28
    2fd6:	cd b7       	in	r28, 0x3d	; 61
    2fd8:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE1B);
    2fda:	a9 e5       	ldi	r26, 0x59	; 89
    2fdc:	b0 e0       	ldi	r27, 0x00	; 0
    2fde:	e9 e5       	ldi	r30, 0x59	; 89
    2fe0:	f0 e0       	ldi	r31, 0x00	; 0
    2fe2:	80 81       	ld	r24, Z
    2fe4:	88 60       	ori	r24, 0x08	; 8
    2fe6:	8c 93       	st	X, r24
}
    2fe8:	cf 91       	pop	r28
    2fea:	df 91       	pop	r29
    2fec:	08 95       	ret

00002fee <MTIMER1_ICU_Interrupt_Enable>:
void MTIMER1_ICU_Interrupt_Enable(void)
{
    2fee:	df 93       	push	r29
    2ff0:	cf 93       	push	r28
    2ff2:	cd b7       	in	r28, 0x3d	; 61
    2ff4:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TICIE1);
    2ff6:	a9 e5       	ldi	r26, 0x59	; 89
    2ff8:	b0 e0       	ldi	r27, 0x00	; 0
    2ffa:	e9 e5       	ldi	r30, 0x59	; 89
    2ffc:	f0 e0       	ldi	r31, 0x00	; 0
    2ffe:	80 81       	ld	r24, Z
    3000:	80 62       	ori	r24, 0x20	; 32
    3002:	8c 93       	st	X, r24
}
    3004:	cf 91       	pop	r28
    3006:	df 91       	pop	r29
    3008:	08 95       	ret

0000300a <MTIMER1_OVF_Interrupt_Disable>:
void MTIMER1_OVF_Interrupt_Disable(void)
{
    300a:	df 93       	push	r29
    300c:	cf 93       	push	r28
    300e:	cd b7       	in	r28, 0x3d	; 61
    3010:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TOIE1);
    3012:	a9 e5       	ldi	r26, 0x59	; 89
    3014:	b0 e0       	ldi	r27, 0x00	; 0
    3016:	e9 e5       	ldi	r30, 0x59	; 89
    3018:	f0 e0       	ldi	r31, 0x00	; 0
    301a:	80 81       	ld	r24, Z
    301c:	8b 7f       	andi	r24, 0xFB	; 251
    301e:	8c 93       	st	X, r24
}
    3020:	cf 91       	pop	r28
    3022:	df 91       	pop	r29
    3024:	08 95       	ret

00003026 <MTIMER1_OCMA_Interrupt_Disable>:
void MTIMER1_OCMA_Interrupt_Disable(void)
{
    3026:	df 93       	push	r29
    3028:	cf 93       	push	r28
    302a:	cd b7       	in	r28, 0x3d	; 61
    302c:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE1A);
    302e:	a9 e5       	ldi	r26, 0x59	; 89
    3030:	b0 e0       	ldi	r27, 0x00	; 0
    3032:	e9 e5       	ldi	r30, 0x59	; 89
    3034:	f0 e0       	ldi	r31, 0x00	; 0
    3036:	80 81       	ld	r24, Z
    3038:	8f 7e       	andi	r24, 0xEF	; 239
    303a:	8c 93       	st	X, r24
}
    303c:	cf 91       	pop	r28
    303e:	df 91       	pop	r29
    3040:	08 95       	ret

00003042 <MTIMER1_OCMB_Interrupt_Disable>:
void MTIMER1_OCMB_Interrupt_Disable(void)
{
    3042:	df 93       	push	r29
    3044:	cf 93       	push	r28
    3046:	cd b7       	in	r28, 0x3d	; 61
    3048:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE1B);
    304a:	a9 e5       	ldi	r26, 0x59	; 89
    304c:	b0 e0       	ldi	r27, 0x00	; 0
    304e:	e9 e5       	ldi	r30, 0x59	; 89
    3050:	f0 e0       	ldi	r31, 0x00	; 0
    3052:	80 81       	ld	r24, Z
    3054:	87 7f       	andi	r24, 0xF7	; 247
    3056:	8c 93       	st	X, r24
}
    3058:	cf 91       	pop	r28
    305a:	df 91       	pop	r29
    305c:	08 95       	ret

0000305e <MTIMER1_ICU_Interrupt_Disable>:
void MTIMER1_ICU_Interrupt_Disable(void)
{
    305e:	df 93       	push	r29
    3060:	cf 93       	push	r28
    3062:	cd b7       	in	r28, 0x3d	; 61
    3064:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TICIE1);
    3066:	a9 e5       	ldi	r26, 0x59	; 89
    3068:	b0 e0       	ldi	r27, 0x00	; 0
    306a:	e9 e5       	ldi	r30, 0x59	; 89
    306c:	f0 e0       	ldi	r31, 0x00	; 0
    306e:	80 81       	ld	r24, Z
    3070:	8f 7d       	andi	r24, 0xDF	; 223
    3072:	8c 93       	st	X, r24
}
    3074:	cf 91       	pop	r28
    3076:	df 91       	pop	r29
    3078:	08 95       	ret

0000307a <__vector_11>:
/*******************************************    VECTORS   *******************************************/
/****************************************************************************************************/

void __vector_11(void) __attribute__((signal));
void __vector_11(void)
{
    307a:	1f 92       	push	r1
    307c:	0f 92       	push	r0
    307e:	0f b6       	in	r0, 0x3f	; 63
    3080:	0f 92       	push	r0
    3082:	11 24       	eor	r1, r1
    3084:	2f 93       	push	r18
    3086:	3f 93       	push	r19
    3088:	4f 93       	push	r20
    308a:	5f 93       	push	r21
    308c:	6f 93       	push	r22
    308e:	7f 93       	push	r23
    3090:	8f 93       	push	r24
    3092:	9f 93       	push	r25
    3094:	af 93       	push	r26
    3096:	bf 93       	push	r27
    3098:	ef 93       	push	r30
    309a:	ff 93       	push	r31
    309c:	df 93       	push	r29
    309e:	cf 93       	push	r28
    30a0:	cd b7       	in	r28, 0x3d	; 61
    30a2:	de b7       	in	r29, 0x3e	; 62
	if(Timer0_CALLBACK_OVF != NULL)
    30a4:	80 91 b6 01 	lds	r24, 0x01B6
    30a8:	90 91 b7 01 	lds	r25, 0x01B7
    30ac:	00 97       	sbiw	r24, 0x00	; 0
    30ae:	29 f0       	breq	.+10     	; 0x30ba <__vector_11+0x40>
	{
		Timer0_CALLBACK_OVF();
    30b0:	e0 91 b6 01 	lds	r30, 0x01B6
    30b4:	f0 91 b7 01 	lds	r31, 0x01B7
    30b8:	09 95       	icall
	}
}
    30ba:	cf 91       	pop	r28
    30bc:	df 91       	pop	r29
    30be:	ff 91       	pop	r31
    30c0:	ef 91       	pop	r30
    30c2:	bf 91       	pop	r27
    30c4:	af 91       	pop	r26
    30c6:	9f 91       	pop	r25
    30c8:	8f 91       	pop	r24
    30ca:	7f 91       	pop	r23
    30cc:	6f 91       	pop	r22
    30ce:	5f 91       	pop	r21
    30d0:	4f 91       	pop	r20
    30d2:	3f 91       	pop	r19
    30d4:	2f 91       	pop	r18
    30d6:	0f 90       	pop	r0
    30d8:	0f be       	out	0x3f, r0	; 63
    30da:	0f 90       	pop	r0
    30dc:	1f 90       	pop	r1
    30de:	18 95       	reti

000030e0 <__vector_10>:
void __vector_10(void) __attribute__((signal));
void __vector_10(void)
{
    30e0:	1f 92       	push	r1
    30e2:	0f 92       	push	r0
    30e4:	0f b6       	in	r0, 0x3f	; 63
    30e6:	0f 92       	push	r0
    30e8:	11 24       	eor	r1, r1
    30ea:	2f 93       	push	r18
    30ec:	3f 93       	push	r19
    30ee:	4f 93       	push	r20
    30f0:	5f 93       	push	r21
    30f2:	6f 93       	push	r22
    30f4:	7f 93       	push	r23
    30f6:	8f 93       	push	r24
    30f8:	9f 93       	push	r25
    30fa:	af 93       	push	r26
    30fc:	bf 93       	push	r27
    30fe:	ef 93       	push	r30
    3100:	ff 93       	push	r31
    3102:	df 93       	push	r29
    3104:	cf 93       	push	r28
    3106:	cd b7       	in	r28, 0x3d	; 61
    3108:	de b7       	in	r29, 0x3e	; 62
	if(Timer0_CALLBACK_CTC != NULL)
    310a:	80 91 b8 01 	lds	r24, 0x01B8
    310e:	90 91 b9 01 	lds	r25, 0x01B9
    3112:	00 97       	sbiw	r24, 0x00	; 0
    3114:	29 f0       	breq	.+10     	; 0x3120 <__vector_10+0x40>
	{
		Timer0_CALLBACK_CTC();
    3116:	e0 91 b8 01 	lds	r30, 0x01B8
    311a:	f0 91 b9 01 	lds	r31, 0x01B9
    311e:	09 95       	icall
	}
}
    3120:	cf 91       	pop	r28
    3122:	df 91       	pop	r29
    3124:	ff 91       	pop	r31
    3126:	ef 91       	pop	r30
    3128:	bf 91       	pop	r27
    312a:	af 91       	pop	r26
    312c:	9f 91       	pop	r25
    312e:	8f 91       	pop	r24
    3130:	7f 91       	pop	r23
    3132:	6f 91       	pop	r22
    3134:	5f 91       	pop	r21
    3136:	4f 91       	pop	r20
    3138:	3f 91       	pop	r19
    313a:	2f 91       	pop	r18
    313c:	0f 90       	pop	r0
    313e:	0f be       	out	0x3f, r0	; 63
    3140:	0f 90       	pop	r0
    3142:	1f 90       	pop	r1
    3144:	18 95       	reti

00003146 <__vector_9>:
void __vector_9(void) __attribute__((signal));
void __vector_9(void)
{
    3146:	1f 92       	push	r1
    3148:	0f 92       	push	r0
    314a:	0f b6       	in	r0, 0x3f	; 63
    314c:	0f 92       	push	r0
    314e:	11 24       	eor	r1, r1
    3150:	2f 93       	push	r18
    3152:	3f 93       	push	r19
    3154:	4f 93       	push	r20
    3156:	5f 93       	push	r21
    3158:	6f 93       	push	r22
    315a:	7f 93       	push	r23
    315c:	8f 93       	push	r24
    315e:	9f 93       	push	r25
    3160:	af 93       	push	r26
    3162:	bf 93       	push	r27
    3164:	ef 93       	push	r30
    3166:	ff 93       	push	r31
    3168:	df 93       	push	r29
    316a:	cf 93       	push	r28
    316c:	cd b7       	in	r28, 0x3d	; 61
    316e:	de b7       	in	r29, 0x3e	; 62
	if( TIMER1_CALLBACK_OVF!= NULL)
    3170:	80 91 ba 01 	lds	r24, 0x01BA
    3174:	90 91 bb 01 	lds	r25, 0x01BB
    3178:	00 97       	sbiw	r24, 0x00	; 0
    317a:	29 f0       	breq	.+10     	; 0x3186 <__vector_9+0x40>
	{
		TIMER1_CALLBACK_OVF();
    317c:	e0 91 ba 01 	lds	r30, 0x01BA
    3180:	f0 91 bb 01 	lds	r31, 0x01BB
    3184:	09 95       	icall
	}
}
    3186:	cf 91       	pop	r28
    3188:	df 91       	pop	r29
    318a:	ff 91       	pop	r31
    318c:	ef 91       	pop	r30
    318e:	bf 91       	pop	r27
    3190:	af 91       	pop	r26
    3192:	9f 91       	pop	r25
    3194:	8f 91       	pop	r24
    3196:	7f 91       	pop	r23
    3198:	6f 91       	pop	r22
    319a:	5f 91       	pop	r21
    319c:	4f 91       	pop	r20
    319e:	3f 91       	pop	r19
    31a0:	2f 91       	pop	r18
    31a2:	0f 90       	pop	r0
    31a4:	0f be       	out	0x3f, r0	; 63
    31a6:	0f 90       	pop	r0
    31a8:	1f 90       	pop	r1
    31aa:	18 95       	reti

000031ac <__vector_8>:
void __vector_8(void) __attribute__((signal));
void __vector_8(void)
{
    31ac:	1f 92       	push	r1
    31ae:	0f 92       	push	r0
    31b0:	0f b6       	in	r0, 0x3f	; 63
    31b2:	0f 92       	push	r0
    31b4:	11 24       	eor	r1, r1
    31b6:	2f 93       	push	r18
    31b8:	3f 93       	push	r19
    31ba:	4f 93       	push	r20
    31bc:	5f 93       	push	r21
    31be:	6f 93       	push	r22
    31c0:	7f 93       	push	r23
    31c2:	8f 93       	push	r24
    31c4:	9f 93       	push	r25
    31c6:	af 93       	push	r26
    31c8:	bf 93       	push	r27
    31ca:	ef 93       	push	r30
    31cc:	ff 93       	push	r31
    31ce:	df 93       	push	r29
    31d0:	cf 93       	push	r28
    31d2:	cd b7       	in	r28, 0x3d	; 61
    31d4:	de b7       	in	r29, 0x3e	; 62
	if( TIMER1_CALLBACK_COMPB!= NULL)
    31d6:	80 91 c0 01 	lds	r24, 0x01C0
    31da:	90 91 c1 01 	lds	r25, 0x01C1
    31de:	00 97       	sbiw	r24, 0x00	; 0
    31e0:	29 f0       	breq	.+10     	; 0x31ec <__vector_8+0x40>
	{
		TIMER1_CALLBACK_COMPB();
    31e2:	e0 91 c0 01 	lds	r30, 0x01C0
    31e6:	f0 91 c1 01 	lds	r31, 0x01C1
    31ea:	09 95       	icall
	}
}
    31ec:	cf 91       	pop	r28
    31ee:	df 91       	pop	r29
    31f0:	ff 91       	pop	r31
    31f2:	ef 91       	pop	r30
    31f4:	bf 91       	pop	r27
    31f6:	af 91       	pop	r26
    31f8:	9f 91       	pop	r25
    31fa:	8f 91       	pop	r24
    31fc:	7f 91       	pop	r23
    31fe:	6f 91       	pop	r22
    3200:	5f 91       	pop	r21
    3202:	4f 91       	pop	r20
    3204:	3f 91       	pop	r19
    3206:	2f 91       	pop	r18
    3208:	0f 90       	pop	r0
    320a:	0f be       	out	0x3f, r0	; 63
    320c:	0f 90       	pop	r0
    320e:	1f 90       	pop	r1
    3210:	18 95       	reti

00003212 <__vector_7>:
void __vector_7(void) __attribute__((signal));
void __vector_7(void)
{
    3212:	1f 92       	push	r1
    3214:	0f 92       	push	r0
    3216:	0f b6       	in	r0, 0x3f	; 63
    3218:	0f 92       	push	r0
    321a:	11 24       	eor	r1, r1
    321c:	2f 93       	push	r18
    321e:	3f 93       	push	r19
    3220:	4f 93       	push	r20
    3222:	5f 93       	push	r21
    3224:	6f 93       	push	r22
    3226:	7f 93       	push	r23
    3228:	8f 93       	push	r24
    322a:	9f 93       	push	r25
    322c:	af 93       	push	r26
    322e:	bf 93       	push	r27
    3230:	ef 93       	push	r30
    3232:	ff 93       	push	r31
    3234:	df 93       	push	r29
    3236:	cf 93       	push	r28
    3238:	cd b7       	in	r28, 0x3d	; 61
    323a:	de b7       	in	r29, 0x3e	; 62
	if( TIMER1_CALLBACK_COMPA!= NULL)
    323c:	80 91 be 01 	lds	r24, 0x01BE
    3240:	90 91 bf 01 	lds	r25, 0x01BF
    3244:	00 97       	sbiw	r24, 0x00	; 0
    3246:	29 f0       	breq	.+10     	; 0x3252 <__vector_7+0x40>
		{
		TIMER1_CALLBACK_COMPA();
    3248:	e0 91 be 01 	lds	r30, 0x01BE
    324c:	f0 91 bf 01 	lds	r31, 0x01BF
    3250:	09 95       	icall
		}
}
    3252:	cf 91       	pop	r28
    3254:	df 91       	pop	r29
    3256:	ff 91       	pop	r31
    3258:	ef 91       	pop	r30
    325a:	bf 91       	pop	r27
    325c:	af 91       	pop	r26
    325e:	9f 91       	pop	r25
    3260:	8f 91       	pop	r24
    3262:	7f 91       	pop	r23
    3264:	6f 91       	pop	r22
    3266:	5f 91       	pop	r21
    3268:	4f 91       	pop	r20
    326a:	3f 91       	pop	r19
    326c:	2f 91       	pop	r18
    326e:	0f 90       	pop	r0
    3270:	0f be       	out	0x3f, r0	; 63
    3272:	0f 90       	pop	r0
    3274:	1f 90       	pop	r1
    3276:	18 95       	reti

00003278 <__vector_6>:
void __vector_6(void) __attribute__((signal));
void __vector_6(void)
{
    3278:	1f 92       	push	r1
    327a:	0f 92       	push	r0
    327c:	0f b6       	in	r0, 0x3f	; 63
    327e:	0f 92       	push	r0
    3280:	11 24       	eor	r1, r1
    3282:	2f 93       	push	r18
    3284:	3f 93       	push	r19
    3286:	4f 93       	push	r20
    3288:	5f 93       	push	r21
    328a:	6f 93       	push	r22
    328c:	7f 93       	push	r23
    328e:	8f 93       	push	r24
    3290:	9f 93       	push	r25
    3292:	af 93       	push	r26
    3294:	bf 93       	push	r27
    3296:	ef 93       	push	r30
    3298:	ff 93       	push	r31
    329a:	df 93       	push	r29
    329c:	cf 93       	push	r28
    329e:	cd b7       	in	r28, 0x3d	; 61
    32a0:	de b7       	in	r29, 0x3e	; 62
	if( TIMER1_CALLBACK_ICU!= NULL)
    32a2:	80 91 bc 01 	lds	r24, 0x01BC
    32a6:	90 91 bd 01 	lds	r25, 0x01BD
    32aa:	00 97       	sbiw	r24, 0x00	; 0
    32ac:	29 f0       	breq	.+10     	; 0x32b8 <__vector_6+0x40>
		{
			TIMER1_CALLBACK_ICU();
    32ae:	e0 91 bc 01 	lds	r30, 0x01BC
    32b2:	f0 91 bd 01 	lds	r31, 0x01BD
    32b6:	09 95       	icall
		}
}
    32b8:	cf 91       	pop	r28
    32ba:	df 91       	pop	r29
    32bc:	ff 91       	pop	r31
    32be:	ef 91       	pop	r30
    32c0:	bf 91       	pop	r27
    32c2:	af 91       	pop	r26
    32c4:	9f 91       	pop	r25
    32c6:	8f 91       	pop	r24
    32c8:	7f 91       	pop	r23
    32ca:	6f 91       	pop	r22
    32cc:	5f 91       	pop	r21
    32ce:	4f 91       	pop	r20
    32d0:	3f 91       	pop	r19
    32d2:	2f 91       	pop	r18
    32d4:	0f 90       	pop	r0
    32d6:	0f be       	out	0x3f, r0	; 63
    32d8:	0f 90       	pop	r0
    32da:	1f 90       	pop	r1
    32dc:	18 95       	reti

000032de <main>:
#define F_CPU  8000000UL

#define Low_Distance  40


int main() {
    32de:	af 92       	push	r10
    32e0:	bf 92       	push	r11
    32e2:	cf 92       	push	r12
    32e4:	df 92       	push	r13
    32e6:	ef 92       	push	r14
    32e8:	ff 92       	push	r15
    32ea:	0f 93       	push	r16
    32ec:	1f 93       	push	r17
    32ee:	df 93       	push	r29
    32f0:	cf 93       	push	r28
    32f2:	cd b7       	in	r28, 0x3d	; 61
    32f4:	de b7       	in	r29, 0x3e	; 62
    32f6:	cc 59       	subi	r28, 0x9C	; 156
    32f8:	d0 40       	sbci	r29, 0x00	; 0
    32fa:	0f b6       	in	r0, 0x3f	; 63
    32fc:	f8 94       	cli
    32fe:	de bf       	out	0x3e, r29	; 62
    3300:	0f be       	out	0x3f, r0	; 63
    3302:	cd bf       	out	0x3d, r28	; 61
	MDIO_voidInit();
    3304:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <MDIO_voidInit>
	HLCD_void_init();
    3308:	0e 94 99 10 	call	0x2132	; 0x2132 <HLCD_void_init>
	MGI_enable_GI();
    330c:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <MGI_enable_GI>
	HULTRASONIC_init();
    3310:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <HULTRASONIC_init>

	u64 Distance;
	u64 Left_Distance,Right_Distance;

	u8 string[10] = { 0 };
    3314:	ce 01       	movw	r24, r28
    3316:	87 57       	subi	r24, 0x77	; 119
    3318:	9f 4f       	sbci	r25, 0xFF	; 255
    331a:	2a e0       	ldi	r18, 0x0A	; 10
    331c:	fc 01       	movw	r30, r24
    331e:	df 01       	movw	r26, r30
    3320:	82 2f       	mov	r24, r18
    3322:	1d 92       	st	X+, r1
    3324:	8a 95       	dec	r24
    3326:	e9 f7       	brne	.-6      	; 0x3322 <main+0x44>

	while (1) {
		HSERVO_angel(90);
    3328:	8a e5       	ldi	r24, 0x5A	; 90
    332a:	90 e0       	ldi	r25, 0x00	; 0
    332c:	0e 94 2e 22 	call	0x445c	; 0x445c <HSERVO_angel>
		Distance = HULTRASONIC_GET_Distance();
    3330:	0e 94 78 22 	call	0x44f0	; 0x44f0 <HULTRASONIC_GET_Distance>
    3334:	a2 2e       	mov	r10, r18
    3336:	b3 2e       	mov	r11, r19
    3338:	c4 2e       	mov	r12, r20
    333a:	d5 2e       	mov	r13, r21
    333c:	e6 2e       	mov	r14, r22
    333e:	f7 2e       	mov	r15, r23
    3340:	08 2f       	mov	r16, r24
    3342:	19 2f       	mov	r17, r25
    3344:	fe 01       	movw	r30, r28
    3346:	ef 57       	subi	r30, 0x7F	; 127
    3348:	ff 4f       	sbci	r31, 0xFF	; 255
    334a:	a0 82       	st	Z, r10
    334c:	b1 82       	std	Z+1, r11	; 0x01
    334e:	c2 82       	std	Z+2, r12	; 0x02
    3350:	d3 82       	std	Z+3, r13	; 0x03
    3352:	e4 82       	std	Z+4, r14	; 0x04
    3354:	f5 82       	std	Z+5, r15	; 0x05
    3356:	06 83       	std	Z+6, r16	; 0x06
    3358:	17 83       	std	Z+7, r17	; 0x07
		HLCD_void_GOTO_POS(2, 1);
    335a:	82 e0       	ldi	r24, 0x02	; 2
    335c:	61 e0       	ldi	r22, 0x01	; 1
    335e:	0e 94 51 13 	call	0x26a2	; 0x26a2 <HLCD_void_GOTO_POS>
		HLCD_void_DISPLAY_STRING("dist= ");
    3362:	80 e6       	ldi	r24, 0x60	; 96
    3364:	90 e0       	ldi	r25, 0x00	; 0
    3366:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
		dtostrf(Distance, 2, 2, string);
    336a:	fe 01       	movw	r30, r28
    336c:	ef 57       	subi	r30, 0x7F	; 127
    336e:	ff 4f       	sbci	r31, 0xFF	; 255
    3370:	20 81       	ld	r18, Z
    3372:	31 81       	ldd	r19, Z+1	; 0x01
    3374:	42 81       	ldd	r20, Z+2	; 0x02
    3376:	53 81       	ldd	r21, Z+3	; 0x03
    3378:	64 81       	ldd	r22, Z+4	; 0x04
    337a:	75 81       	ldd	r23, Z+5	; 0x05
    337c:	86 81       	ldd	r24, Z+6	; 0x06
    337e:	97 81       	ldd	r25, Z+7	; 0x07
    3380:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <__floatundisf>
    3384:	dc 01       	movw	r26, r24
    3386:	cb 01       	movw	r24, r22
    3388:	fe 01       	movw	r30, r28
    338a:	e7 57       	subi	r30, 0x77	; 119
    338c:	ff 4f       	sbci	r31, 0xFF	; 255
    338e:	bc 01       	movw	r22, r24
    3390:	cd 01       	movw	r24, r26
    3392:	42 e0       	ldi	r20, 0x02	; 2
    3394:	22 e0       	ldi	r18, 0x02	; 2
    3396:	8f 01       	movw	r16, r30
    3398:	0e 94 74 25 	call	0x4ae8	; 0x4ae8 <dtostrf>
		HLCD_void_DISPLAY_STRING(string);
    339c:	ce 01       	movw	r24, r28
    339e:	87 57       	subi	r24, 0x77	; 119
    33a0:	9f 4f       	sbci	r25, 0xFF	; 255
    33a2:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
		HLCD_void_DISPLAY_STRING(" cm   ");
    33a6:	87 e6       	ldi	r24, 0x67	; 103
    33a8:	90 e0       	ldi	r25, 0x00	; 0
    33aa:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
		if(Distance <Low_Distance)
    33ae:	de 01       	movw	r26, r28
    33b0:	af 57       	subi	r26, 0x7F	; 127
    33b2:	bf 4f       	sbci	r27, 0xFF	; 255
    33b4:	cd 56       	subi	r28, 0x6D	; 109
    33b6:	df 4f       	sbci	r29, 0xFF	; 255
    33b8:	b9 83       	std	Y+1, r27	; 0x01
    33ba:	a8 83       	st	Y, r26
    33bc:	c3 59       	subi	r28, 0x93	; 147
    33be:	d0 40       	sbci	r29, 0x00	; 0
    33c0:	cd 56       	subi	r28, 0x6D	; 109
    33c2:	df 4f       	sbci	r29, 0xFF	; 255
    33c4:	e8 81       	ld	r30, Y
    33c6:	f9 81       	ldd	r31, Y+1	; 0x01
    33c8:	c3 59       	subi	r28, 0x93	; 147
    33ca:	d0 40       	sbci	r29, 0x00	; 0
    33cc:	87 81       	ldd	r24, Z+7	; 0x07
    33ce:	88 23       	and	r24, r24
    33d0:	09 f0       	breq	.+2      	; 0x33d4 <main+0xf6>
    33d2:	b1 c7       	rjmp	.+3938   	; 0x4336 <main+0x1058>
    33d4:	cd 56       	subi	r28, 0x6D	; 109
    33d6:	df 4f       	sbci	r29, 0xFF	; 255
    33d8:	a8 81       	ld	r26, Y
    33da:	b9 81       	ldd	r27, Y+1	; 0x01
    33dc:	c3 59       	subi	r28, 0x93	; 147
    33de:	d0 40       	sbci	r29, 0x00	; 0
    33e0:	17 96       	adiw	r26, 0x07	; 7
    33e2:	8c 91       	ld	r24, X
    33e4:	17 97       	sbiw	r26, 0x07	; 7
    33e6:	88 23       	and	r24, r24
    33e8:	09 f0       	breq	.+2      	; 0x33ec <main+0x10e>
    33ea:	8b c0       	rjmp	.+278    	; 0x3502 <main+0x224>
    33ec:	cd 56       	subi	r28, 0x6D	; 109
    33ee:	df 4f       	sbci	r29, 0xFF	; 255
    33f0:	e8 81       	ld	r30, Y
    33f2:	f9 81       	ldd	r31, Y+1	; 0x01
    33f4:	c3 59       	subi	r28, 0x93	; 147
    33f6:	d0 40       	sbci	r29, 0x00	; 0
    33f8:	86 81       	ldd	r24, Z+6	; 0x06
    33fa:	88 23       	and	r24, r24
    33fc:	09 f0       	breq	.+2      	; 0x3400 <main+0x122>
    33fe:	9b c7       	rjmp	.+3894   	; 0x4336 <main+0x1058>
    3400:	cd 56       	subi	r28, 0x6D	; 109
    3402:	df 4f       	sbci	r29, 0xFF	; 255
    3404:	a8 81       	ld	r26, Y
    3406:	b9 81       	ldd	r27, Y+1	; 0x01
    3408:	c3 59       	subi	r28, 0x93	; 147
    340a:	d0 40       	sbci	r29, 0x00	; 0
    340c:	16 96       	adiw	r26, 0x06	; 6
    340e:	8c 91       	ld	r24, X
    3410:	16 97       	sbiw	r26, 0x06	; 6
    3412:	88 23       	and	r24, r24
    3414:	09 f0       	breq	.+2      	; 0x3418 <main+0x13a>
    3416:	75 c0       	rjmp	.+234    	; 0x3502 <main+0x224>
    3418:	cd 56       	subi	r28, 0x6D	; 109
    341a:	df 4f       	sbci	r29, 0xFF	; 255
    341c:	e8 81       	ld	r30, Y
    341e:	f9 81       	ldd	r31, Y+1	; 0x01
    3420:	c3 59       	subi	r28, 0x93	; 147
    3422:	d0 40       	sbci	r29, 0x00	; 0
    3424:	85 81       	ldd	r24, Z+5	; 0x05
    3426:	88 23       	and	r24, r24
    3428:	09 f0       	breq	.+2      	; 0x342c <main+0x14e>
    342a:	85 c7       	rjmp	.+3850   	; 0x4336 <main+0x1058>
    342c:	cd 56       	subi	r28, 0x6D	; 109
    342e:	df 4f       	sbci	r29, 0xFF	; 255
    3430:	a8 81       	ld	r26, Y
    3432:	b9 81       	ldd	r27, Y+1	; 0x01
    3434:	c3 59       	subi	r28, 0x93	; 147
    3436:	d0 40       	sbci	r29, 0x00	; 0
    3438:	15 96       	adiw	r26, 0x05	; 5
    343a:	8c 91       	ld	r24, X
    343c:	15 97       	sbiw	r26, 0x05	; 5
    343e:	88 23       	and	r24, r24
    3440:	09 f0       	breq	.+2      	; 0x3444 <main+0x166>
    3442:	5f c0       	rjmp	.+190    	; 0x3502 <main+0x224>
    3444:	cd 56       	subi	r28, 0x6D	; 109
    3446:	df 4f       	sbci	r29, 0xFF	; 255
    3448:	e8 81       	ld	r30, Y
    344a:	f9 81       	ldd	r31, Y+1	; 0x01
    344c:	c3 59       	subi	r28, 0x93	; 147
    344e:	d0 40       	sbci	r29, 0x00	; 0
    3450:	84 81       	ldd	r24, Z+4	; 0x04
    3452:	88 23       	and	r24, r24
    3454:	09 f0       	breq	.+2      	; 0x3458 <main+0x17a>
    3456:	6f c7       	rjmp	.+3806   	; 0x4336 <main+0x1058>
    3458:	cd 56       	subi	r28, 0x6D	; 109
    345a:	df 4f       	sbci	r29, 0xFF	; 255
    345c:	a8 81       	ld	r26, Y
    345e:	b9 81       	ldd	r27, Y+1	; 0x01
    3460:	c3 59       	subi	r28, 0x93	; 147
    3462:	d0 40       	sbci	r29, 0x00	; 0
    3464:	14 96       	adiw	r26, 0x04	; 4
    3466:	8c 91       	ld	r24, X
    3468:	14 97       	sbiw	r26, 0x04	; 4
    346a:	88 23       	and	r24, r24
    346c:	09 f0       	breq	.+2      	; 0x3470 <main+0x192>
    346e:	49 c0       	rjmp	.+146    	; 0x3502 <main+0x224>
    3470:	cd 56       	subi	r28, 0x6D	; 109
    3472:	df 4f       	sbci	r29, 0xFF	; 255
    3474:	e8 81       	ld	r30, Y
    3476:	f9 81       	ldd	r31, Y+1	; 0x01
    3478:	c3 59       	subi	r28, 0x93	; 147
    347a:	d0 40       	sbci	r29, 0x00	; 0
    347c:	83 81       	ldd	r24, Z+3	; 0x03
    347e:	88 23       	and	r24, r24
    3480:	09 f0       	breq	.+2      	; 0x3484 <main+0x1a6>
    3482:	59 c7       	rjmp	.+3762   	; 0x4336 <main+0x1058>
    3484:	cd 56       	subi	r28, 0x6D	; 109
    3486:	df 4f       	sbci	r29, 0xFF	; 255
    3488:	a8 81       	ld	r26, Y
    348a:	b9 81       	ldd	r27, Y+1	; 0x01
    348c:	c3 59       	subi	r28, 0x93	; 147
    348e:	d0 40       	sbci	r29, 0x00	; 0
    3490:	13 96       	adiw	r26, 0x03	; 3
    3492:	8c 91       	ld	r24, X
    3494:	13 97       	sbiw	r26, 0x03	; 3
    3496:	88 23       	and	r24, r24
    3498:	a1 f5       	brne	.+104    	; 0x3502 <main+0x224>
    349a:	cd 56       	subi	r28, 0x6D	; 109
    349c:	df 4f       	sbci	r29, 0xFF	; 255
    349e:	e8 81       	ld	r30, Y
    34a0:	f9 81       	ldd	r31, Y+1	; 0x01
    34a2:	c3 59       	subi	r28, 0x93	; 147
    34a4:	d0 40       	sbci	r29, 0x00	; 0
    34a6:	82 81       	ldd	r24, Z+2	; 0x02
    34a8:	88 23       	and	r24, r24
    34aa:	09 f0       	breq	.+2      	; 0x34ae <main+0x1d0>
    34ac:	44 c7       	rjmp	.+3720   	; 0x4336 <main+0x1058>
    34ae:	cd 56       	subi	r28, 0x6D	; 109
    34b0:	df 4f       	sbci	r29, 0xFF	; 255
    34b2:	a8 81       	ld	r26, Y
    34b4:	b9 81       	ldd	r27, Y+1	; 0x01
    34b6:	c3 59       	subi	r28, 0x93	; 147
    34b8:	d0 40       	sbci	r29, 0x00	; 0
    34ba:	12 96       	adiw	r26, 0x02	; 2
    34bc:	8c 91       	ld	r24, X
    34be:	12 97       	sbiw	r26, 0x02	; 2
    34c0:	88 23       	and	r24, r24
    34c2:	f9 f4       	brne	.+62     	; 0x3502 <main+0x224>
    34c4:	cd 56       	subi	r28, 0x6D	; 109
    34c6:	df 4f       	sbci	r29, 0xFF	; 255
    34c8:	e8 81       	ld	r30, Y
    34ca:	f9 81       	ldd	r31, Y+1	; 0x01
    34cc:	c3 59       	subi	r28, 0x93	; 147
    34ce:	d0 40       	sbci	r29, 0x00	; 0
    34d0:	81 81       	ldd	r24, Z+1	; 0x01
    34d2:	88 23       	and	r24, r24
    34d4:	09 f0       	breq	.+2      	; 0x34d8 <main+0x1fa>
    34d6:	2f c7       	rjmp	.+3678   	; 0x4336 <main+0x1058>
    34d8:	cd 56       	subi	r28, 0x6D	; 109
    34da:	df 4f       	sbci	r29, 0xFF	; 255
    34dc:	a8 81       	ld	r26, Y
    34de:	b9 81       	ldd	r27, Y+1	; 0x01
    34e0:	c3 59       	subi	r28, 0x93	; 147
    34e2:	d0 40       	sbci	r29, 0x00	; 0
    34e4:	11 96       	adiw	r26, 0x01	; 1
    34e6:	8c 91       	ld	r24, X
    34e8:	11 97       	sbiw	r26, 0x01	; 1
    34ea:	88 23       	and	r24, r24
    34ec:	51 f4       	brne	.+20     	; 0x3502 <main+0x224>
    34ee:	cd 56       	subi	r28, 0x6D	; 109
    34f0:	df 4f       	sbci	r29, 0xFF	; 255
    34f2:	e8 81       	ld	r30, Y
    34f4:	f9 81       	ldd	r31, Y+1	; 0x01
    34f6:	c3 59       	subi	r28, 0x93	; 147
    34f8:	d0 40       	sbci	r29, 0x00	; 0
    34fa:	80 81       	ld	r24, Z
    34fc:	88 32       	cpi	r24, 0x28	; 40
    34fe:	08 f0       	brcs	.+2      	; 0x3502 <main+0x224>
    3500:	1a c7       	rjmp	.+3636   	; 0x4336 <main+0x1058>
		{
			stop();
    3502:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <stop>
			HLCD_void_GOTO_POS(1, 1);
    3506:	81 e0       	ldi	r24, 0x01	; 1
    3508:	61 e0       	ldi	r22, 0x01	; 1
    350a:	0e 94 51 13 	call	0x26a2	; 0x26a2 <HLCD_void_GOTO_POS>
			HLCD_void_DISPLAY_STRING("Backward     ");
    350e:	8e e6       	ldi	r24, 0x6E	; 110
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
			Backward();
    3516:	0e 94 13 22 	call	0x4426	; 0x4426 <Backward>
    351a:	fe 01       	movw	r30, r28
    351c:	e3 59       	subi	r30, 0x93	; 147
    351e:	ff 4f       	sbci	r31, 0xFF	; 255
    3520:	80 e0       	ldi	r24, 0x00	; 0
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	aa ef       	ldi	r26, 0xFA	; 250
    3526:	b3 e4       	ldi	r27, 0x43	; 67
    3528:	80 83       	st	Z, r24
    352a:	91 83       	std	Z+1, r25	; 0x01
    352c:	a2 83       	std	Z+2, r26	; 0x02
    352e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3530:	8e 01       	movw	r16, r28
    3532:	07 59       	subi	r16, 0x97	; 151
    3534:	1f 4f       	sbci	r17, 0xFF	; 255
    3536:	fe 01       	movw	r30, r28
    3538:	e3 59       	subi	r30, 0x93	; 147
    353a:	ff 4f       	sbci	r31, 0xFF	; 255
    353c:	60 81       	ld	r22, Z
    353e:	71 81       	ldd	r23, Z+1	; 0x01
    3540:	82 81       	ldd	r24, Z+2	; 0x02
    3542:	93 81       	ldd	r25, Z+3	; 0x03
    3544:	20 e0       	ldi	r18, 0x00	; 0
    3546:	30 e0       	ldi	r19, 0x00	; 0
    3548:	4a ef       	ldi	r20, 0xFA	; 250
    354a:	54 e4       	ldi	r21, 0x44	; 68
    354c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3550:	dc 01       	movw	r26, r24
    3552:	cb 01       	movw	r24, r22
    3554:	f8 01       	movw	r30, r16
    3556:	80 83       	st	Z, r24
    3558:	91 83       	std	Z+1, r25	; 0x01
    355a:	a2 83       	std	Z+2, r26	; 0x02
    355c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    355e:	fe 01       	movw	r30, r28
    3560:	e7 59       	subi	r30, 0x97	; 151
    3562:	ff 4f       	sbci	r31, 0xFF	; 255
    3564:	60 81       	ld	r22, Z
    3566:	71 81       	ldd	r23, Z+1	; 0x01
    3568:	82 81       	ldd	r24, Z+2	; 0x02
    356a:	93 81       	ldd	r25, Z+3	; 0x03
    356c:	20 e0       	ldi	r18, 0x00	; 0
    356e:	30 e0       	ldi	r19, 0x00	; 0
    3570:	40 e8       	ldi	r20, 0x80	; 128
    3572:	5f e3       	ldi	r21, 0x3F	; 63
    3574:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    3578:	88 23       	and	r24, r24
    357a:	44 f4       	brge	.+16     	; 0x358c <main+0x2ae>
		__ticks = 1;
    357c:	fe 01       	movw	r30, r28
    357e:	e9 59       	subi	r30, 0x99	; 153
    3580:	ff 4f       	sbci	r31, 0xFF	; 255
    3582:	81 e0       	ldi	r24, 0x01	; 1
    3584:	90 e0       	ldi	r25, 0x00	; 0
    3586:	91 83       	std	Z+1, r25	; 0x01
    3588:	80 83       	st	Z, r24
    358a:	64 c0       	rjmp	.+200    	; 0x3654 <main+0x376>
	else if (__tmp > 65535)
    358c:	fe 01       	movw	r30, r28
    358e:	e7 59       	subi	r30, 0x97	; 151
    3590:	ff 4f       	sbci	r31, 0xFF	; 255
    3592:	60 81       	ld	r22, Z
    3594:	71 81       	ldd	r23, Z+1	; 0x01
    3596:	82 81       	ldd	r24, Z+2	; 0x02
    3598:	93 81       	ldd	r25, Z+3	; 0x03
    359a:	20 e0       	ldi	r18, 0x00	; 0
    359c:	3f ef       	ldi	r19, 0xFF	; 255
    359e:	4f e7       	ldi	r20, 0x7F	; 127
    35a0:	57 e4       	ldi	r21, 0x47	; 71
    35a2:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    35a6:	18 16       	cp	r1, r24
    35a8:	0c f0       	brlt	.+2      	; 0x35ac <main+0x2ce>
    35aa:	43 c0       	rjmp	.+134    	; 0x3632 <main+0x354>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35ac:	fe 01       	movw	r30, r28
    35ae:	e3 59       	subi	r30, 0x93	; 147
    35b0:	ff 4f       	sbci	r31, 0xFF	; 255
    35b2:	60 81       	ld	r22, Z
    35b4:	71 81       	ldd	r23, Z+1	; 0x01
    35b6:	82 81       	ldd	r24, Z+2	; 0x02
    35b8:	93 81       	ldd	r25, Z+3	; 0x03
    35ba:	20 e0       	ldi	r18, 0x00	; 0
    35bc:	30 e0       	ldi	r19, 0x00	; 0
    35be:	40 e2       	ldi	r20, 0x20	; 32
    35c0:	51 e4       	ldi	r21, 0x41	; 65
    35c2:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    35c6:	dc 01       	movw	r26, r24
    35c8:	cb 01       	movw	r24, r22
    35ca:	8e 01       	movw	r16, r28
    35cc:	09 59       	subi	r16, 0x99	; 153
    35ce:	1f 4f       	sbci	r17, 0xFF	; 255
    35d0:	bc 01       	movw	r22, r24
    35d2:	cd 01       	movw	r24, r26
    35d4:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    35d8:	dc 01       	movw	r26, r24
    35da:	cb 01       	movw	r24, r22
    35dc:	f8 01       	movw	r30, r16
    35de:	91 83       	std	Z+1, r25	; 0x01
    35e0:	80 83       	st	Z, r24
    35e2:	1f c0       	rjmp	.+62     	; 0x3622 <main+0x344>
    35e4:	fe 01       	movw	r30, r28
    35e6:	eb 59       	subi	r30, 0x9B	; 155
    35e8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ea:	88 ec       	ldi	r24, 0xC8	; 200
    35ec:	90 e0       	ldi	r25, 0x00	; 0
    35ee:	91 83       	std	Z+1, r25	; 0x01
    35f0:	80 83       	st	Z, r24
    35f2:	fe 01       	movw	r30, r28
    35f4:	eb 59       	subi	r30, 0x9B	; 155
    35f6:	ff 4f       	sbci	r31, 0xFF	; 255
    35f8:	80 81       	ld	r24, Z
    35fa:	91 81       	ldd	r25, Z+1	; 0x01
    35fc:	01 97       	sbiw	r24, 0x01	; 1
    35fe:	f1 f7       	brne	.-4      	; 0x35fc <main+0x31e>
    3600:	fe 01       	movw	r30, r28
    3602:	eb 59       	subi	r30, 0x9B	; 155
    3604:	ff 4f       	sbci	r31, 0xFF	; 255
    3606:	91 83       	std	Z+1, r25	; 0x01
    3608:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    360a:	de 01       	movw	r26, r28
    360c:	a9 59       	subi	r26, 0x99	; 153
    360e:	bf 4f       	sbci	r27, 0xFF	; 255
    3610:	fe 01       	movw	r30, r28
    3612:	e9 59       	subi	r30, 0x99	; 153
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	80 81       	ld	r24, Z
    3618:	91 81       	ldd	r25, Z+1	; 0x01
    361a:	01 97       	sbiw	r24, 0x01	; 1
    361c:	11 96       	adiw	r26, 0x01	; 1
    361e:	9c 93       	st	X, r25
    3620:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3622:	fe 01       	movw	r30, r28
    3624:	e9 59       	subi	r30, 0x99	; 153
    3626:	ff 4f       	sbci	r31, 0xFF	; 255
    3628:	80 81       	ld	r24, Z
    362a:	91 81       	ldd	r25, Z+1	; 0x01
    362c:	00 97       	sbiw	r24, 0x00	; 0
    362e:	d1 f6       	brne	.-76     	; 0x35e4 <main+0x306>
    3630:	27 c0       	rjmp	.+78     	; 0x3680 <main+0x3a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3632:	8e 01       	movw	r16, r28
    3634:	09 59       	subi	r16, 0x99	; 153
    3636:	1f 4f       	sbci	r17, 0xFF	; 255
    3638:	fe 01       	movw	r30, r28
    363a:	e7 59       	subi	r30, 0x97	; 151
    363c:	ff 4f       	sbci	r31, 0xFF	; 255
    363e:	60 81       	ld	r22, Z
    3640:	71 81       	ldd	r23, Z+1	; 0x01
    3642:	82 81       	ldd	r24, Z+2	; 0x02
    3644:	93 81       	ldd	r25, Z+3	; 0x03
    3646:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    364a:	dc 01       	movw	r26, r24
    364c:	cb 01       	movw	r24, r22
    364e:	f8 01       	movw	r30, r16
    3650:	91 83       	std	Z+1, r25	; 0x01
    3652:	80 83       	st	Z, r24
    3654:	de 01       	movw	r26, r28
    3656:	ad 59       	subi	r26, 0x9D	; 157
    3658:	bf 4f       	sbci	r27, 0xFF	; 255
    365a:	fe 01       	movw	r30, r28
    365c:	e9 59       	subi	r30, 0x99	; 153
    365e:	ff 4f       	sbci	r31, 0xFF	; 255
    3660:	80 81       	ld	r24, Z
    3662:	91 81       	ldd	r25, Z+1	; 0x01
    3664:	8d 93       	st	X+, r24
    3666:	9c 93       	st	X, r25
    3668:	fe 01       	movw	r30, r28
    366a:	ed 59       	subi	r30, 0x9D	; 157
    366c:	ff 4f       	sbci	r31, 0xFF	; 255
    366e:	80 81       	ld	r24, Z
    3670:	91 81       	ldd	r25, Z+1	; 0x01
    3672:	01 97       	sbiw	r24, 0x01	; 1
    3674:	f1 f7       	brne	.-4      	; 0x3672 <main+0x394>
    3676:	fe 01       	movw	r30, r28
    3678:	ed 59       	subi	r30, 0x9D	; 157
    367a:	ff 4f       	sbci	r31, 0xFF	; 255
    367c:	91 83       	std	Z+1, r25	; 0x01
    367e:	80 83       	st	Z, r24
			_delay_ms(500);
			stop();
    3680:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <stop>
    3684:	fe 01       	movw	r30, r28
    3686:	e1 5a       	subi	r30, 0xA1	; 161
    3688:	ff 4f       	sbci	r31, 0xFF	; 255
    368a:	80 e0       	ldi	r24, 0x00	; 0
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	aa e7       	ldi	r26, 0x7A	; 122
    3690:	b4 e4       	ldi	r27, 0x44	; 68
    3692:	80 83       	st	Z, r24
    3694:	91 83       	std	Z+1, r25	; 0x01
    3696:	a2 83       	std	Z+2, r26	; 0x02
    3698:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    369a:	8e 01       	movw	r16, r28
    369c:	05 5a       	subi	r16, 0xA5	; 165
    369e:	1f 4f       	sbci	r17, 0xFF	; 255
    36a0:	fe 01       	movw	r30, r28
    36a2:	e1 5a       	subi	r30, 0xA1	; 161
    36a4:	ff 4f       	sbci	r31, 0xFF	; 255
    36a6:	60 81       	ld	r22, Z
    36a8:	71 81       	ldd	r23, Z+1	; 0x01
    36aa:	82 81       	ldd	r24, Z+2	; 0x02
    36ac:	93 81       	ldd	r25, Z+3	; 0x03
    36ae:	20 e0       	ldi	r18, 0x00	; 0
    36b0:	30 e0       	ldi	r19, 0x00	; 0
    36b2:	4a ef       	ldi	r20, 0xFA	; 250
    36b4:	54 e4       	ldi	r21, 0x44	; 68
    36b6:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    36ba:	dc 01       	movw	r26, r24
    36bc:	cb 01       	movw	r24, r22
    36be:	f8 01       	movw	r30, r16
    36c0:	80 83       	st	Z, r24
    36c2:	91 83       	std	Z+1, r25	; 0x01
    36c4:	a2 83       	std	Z+2, r26	; 0x02
    36c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36c8:	fe 01       	movw	r30, r28
    36ca:	e5 5a       	subi	r30, 0xA5	; 165
    36cc:	ff 4f       	sbci	r31, 0xFF	; 255
    36ce:	60 81       	ld	r22, Z
    36d0:	71 81       	ldd	r23, Z+1	; 0x01
    36d2:	82 81       	ldd	r24, Z+2	; 0x02
    36d4:	93 81       	ldd	r25, Z+3	; 0x03
    36d6:	20 e0       	ldi	r18, 0x00	; 0
    36d8:	30 e0       	ldi	r19, 0x00	; 0
    36da:	40 e8       	ldi	r20, 0x80	; 128
    36dc:	5f e3       	ldi	r21, 0x3F	; 63
    36de:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    36e2:	88 23       	and	r24, r24
    36e4:	44 f4       	brge	.+16     	; 0x36f6 <main+0x418>
		__ticks = 1;
    36e6:	fe 01       	movw	r30, r28
    36e8:	e7 5a       	subi	r30, 0xA7	; 167
    36ea:	ff 4f       	sbci	r31, 0xFF	; 255
    36ec:	81 e0       	ldi	r24, 0x01	; 1
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	91 83       	std	Z+1, r25	; 0x01
    36f2:	80 83       	st	Z, r24
    36f4:	64 c0       	rjmp	.+200    	; 0x37be <main+0x4e0>
	else if (__tmp > 65535)
    36f6:	fe 01       	movw	r30, r28
    36f8:	e5 5a       	subi	r30, 0xA5	; 165
    36fa:	ff 4f       	sbci	r31, 0xFF	; 255
    36fc:	60 81       	ld	r22, Z
    36fe:	71 81       	ldd	r23, Z+1	; 0x01
    3700:	82 81       	ldd	r24, Z+2	; 0x02
    3702:	93 81       	ldd	r25, Z+3	; 0x03
    3704:	20 e0       	ldi	r18, 0x00	; 0
    3706:	3f ef       	ldi	r19, 0xFF	; 255
    3708:	4f e7       	ldi	r20, 0x7F	; 127
    370a:	57 e4       	ldi	r21, 0x47	; 71
    370c:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    3710:	18 16       	cp	r1, r24
    3712:	0c f0       	brlt	.+2      	; 0x3716 <main+0x438>
    3714:	43 c0       	rjmp	.+134    	; 0x379c <main+0x4be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3716:	fe 01       	movw	r30, r28
    3718:	e1 5a       	subi	r30, 0xA1	; 161
    371a:	ff 4f       	sbci	r31, 0xFF	; 255
    371c:	60 81       	ld	r22, Z
    371e:	71 81       	ldd	r23, Z+1	; 0x01
    3720:	82 81       	ldd	r24, Z+2	; 0x02
    3722:	93 81       	ldd	r25, Z+3	; 0x03
    3724:	20 e0       	ldi	r18, 0x00	; 0
    3726:	30 e0       	ldi	r19, 0x00	; 0
    3728:	40 e2       	ldi	r20, 0x20	; 32
    372a:	51 e4       	ldi	r21, 0x41	; 65
    372c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3730:	dc 01       	movw	r26, r24
    3732:	cb 01       	movw	r24, r22
    3734:	8e 01       	movw	r16, r28
    3736:	07 5a       	subi	r16, 0xA7	; 167
    3738:	1f 4f       	sbci	r17, 0xFF	; 255
    373a:	bc 01       	movw	r22, r24
    373c:	cd 01       	movw	r24, r26
    373e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3742:	dc 01       	movw	r26, r24
    3744:	cb 01       	movw	r24, r22
    3746:	f8 01       	movw	r30, r16
    3748:	91 83       	std	Z+1, r25	; 0x01
    374a:	80 83       	st	Z, r24
    374c:	1f c0       	rjmp	.+62     	; 0x378c <main+0x4ae>
    374e:	fe 01       	movw	r30, r28
    3750:	e9 5a       	subi	r30, 0xA9	; 169
    3752:	ff 4f       	sbci	r31, 0xFF	; 255
    3754:	88 ec       	ldi	r24, 0xC8	; 200
    3756:	90 e0       	ldi	r25, 0x00	; 0
    3758:	91 83       	std	Z+1, r25	; 0x01
    375a:	80 83       	st	Z, r24
    375c:	fe 01       	movw	r30, r28
    375e:	e9 5a       	subi	r30, 0xA9	; 169
    3760:	ff 4f       	sbci	r31, 0xFF	; 255
    3762:	80 81       	ld	r24, Z
    3764:	91 81       	ldd	r25, Z+1	; 0x01
    3766:	01 97       	sbiw	r24, 0x01	; 1
    3768:	f1 f7       	brne	.-4      	; 0x3766 <main+0x488>
    376a:	fe 01       	movw	r30, r28
    376c:	e9 5a       	subi	r30, 0xA9	; 169
    376e:	ff 4f       	sbci	r31, 0xFF	; 255
    3770:	91 83       	std	Z+1, r25	; 0x01
    3772:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3774:	de 01       	movw	r26, r28
    3776:	a7 5a       	subi	r26, 0xA7	; 167
    3778:	bf 4f       	sbci	r27, 0xFF	; 255
    377a:	fe 01       	movw	r30, r28
    377c:	e7 5a       	subi	r30, 0xA7	; 167
    377e:	ff 4f       	sbci	r31, 0xFF	; 255
    3780:	80 81       	ld	r24, Z
    3782:	91 81       	ldd	r25, Z+1	; 0x01
    3784:	01 97       	sbiw	r24, 0x01	; 1
    3786:	11 96       	adiw	r26, 0x01	; 1
    3788:	9c 93       	st	X, r25
    378a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    378c:	fe 01       	movw	r30, r28
    378e:	e7 5a       	subi	r30, 0xA7	; 167
    3790:	ff 4f       	sbci	r31, 0xFF	; 255
    3792:	80 81       	ld	r24, Z
    3794:	91 81       	ldd	r25, Z+1	; 0x01
    3796:	00 97       	sbiw	r24, 0x00	; 0
    3798:	d1 f6       	brne	.-76     	; 0x374e <main+0x470>
    379a:	27 c0       	rjmp	.+78     	; 0x37ea <main+0x50c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    379c:	8e 01       	movw	r16, r28
    379e:	07 5a       	subi	r16, 0xA7	; 167
    37a0:	1f 4f       	sbci	r17, 0xFF	; 255
    37a2:	fe 01       	movw	r30, r28
    37a4:	e5 5a       	subi	r30, 0xA5	; 165
    37a6:	ff 4f       	sbci	r31, 0xFF	; 255
    37a8:	60 81       	ld	r22, Z
    37aa:	71 81       	ldd	r23, Z+1	; 0x01
    37ac:	82 81       	ldd	r24, Z+2	; 0x02
    37ae:	93 81       	ldd	r25, Z+3	; 0x03
    37b0:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    37b4:	dc 01       	movw	r26, r24
    37b6:	cb 01       	movw	r24, r22
    37b8:	f8 01       	movw	r30, r16
    37ba:	91 83       	std	Z+1, r25	; 0x01
    37bc:	80 83       	st	Z, r24
    37be:	de 01       	movw	r26, r28
    37c0:	ab 5a       	subi	r26, 0xAB	; 171
    37c2:	bf 4f       	sbci	r27, 0xFF	; 255
    37c4:	fe 01       	movw	r30, r28
    37c6:	e7 5a       	subi	r30, 0xA7	; 167
    37c8:	ff 4f       	sbci	r31, 0xFF	; 255
    37ca:	80 81       	ld	r24, Z
    37cc:	91 81       	ldd	r25, Z+1	; 0x01
    37ce:	8d 93       	st	X+, r24
    37d0:	9c 93       	st	X, r25
    37d2:	fe 01       	movw	r30, r28
    37d4:	eb 5a       	subi	r30, 0xAB	; 171
    37d6:	ff 4f       	sbci	r31, 0xFF	; 255
    37d8:	80 81       	ld	r24, Z
    37da:	91 81       	ldd	r25, Z+1	; 0x01
    37dc:	01 97       	sbiw	r24, 0x01	; 1
    37de:	f1 f7       	brne	.-4      	; 0x37dc <main+0x4fe>
    37e0:	fe 01       	movw	r30, r28
    37e2:	eb 5a       	subi	r30, 0xAB	; 171
    37e4:	ff 4f       	sbci	r31, 0xFF	; 255
    37e6:	91 83       	std	Z+1, r25	; 0x01
    37e8:	80 83       	st	Z, r24
			_delay_ms(1000);
			HSERVO_angel(180);
    37ea:	84 eb       	ldi	r24, 0xB4	; 180
    37ec:	90 e0       	ldi	r25, 0x00	; 0
    37ee:	0e 94 2e 22 	call	0x445c	; 0x445c <HSERVO_angel>
    37f2:	fe 01       	movw	r30, r28
    37f4:	ef 5a       	subi	r30, 0xAF	; 175
    37f6:	ff 4f       	sbci	r31, 0xFF	; 255
    37f8:	80 e0       	ldi	r24, 0x00	; 0
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	aa ef       	ldi	r26, 0xFA	; 250
    37fe:	b3 e4       	ldi	r27, 0x43	; 67
    3800:	80 83       	st	Z, r24
    3802:	91 83       	std	Z+1, r25	; 0x01
    3804:	a2 83       	std	Z+2, r26	; 0x02
    3806:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3808:	8e 01       	movw	r16, r28
    380a:	03 5b       	subi	r16, 0xB3	; 179
    380c:	1f 4f       	sbci	r17, 0xFF	; 255
    380e:	fe 01       	movw	r30, r28
    3810:	ef 5a       	subi	r30, 0xAF	; 175
    3812:	ff 4f       	sbci	r31, 0xFF	; 255
    3814:	60 81       	ld	r22, Z
    3816:	71 81       	ldd	r23, Z+1	; 0x01
    3818:	82 81       	ldd	r24, Z+2	; 0x02
    381a:	93 81       	ldd	r25, Z+3	; 0x03
    381c:	20 e0       	ldi	r18, 0x00	; 0
    381e:	30 e0       	ldi	r19, 0x00	; 0
    3820:	4a ef       	ldi	r20, 0xFA	; 250
    3822:	54 e4       	ldi	r21, 0x44	; 68
    3824:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3828:	dc 01       	movw	r26, r24
    382a:	cb 01       	movw	r24, r22
    382c:	f8 01       	movw	r30, r16
    382e:	80 83       	st	Z, r24
    3830:	91 83       	std	Z+1, r25	; 0x01
    3832:	a2 83       	std	Z+2, r26	; 0x02
    3834:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3836:	fe 01       	movw	r30, r28
    3838:	e3 5b       	subi	r30, 0xB3	; 179
    383a:	ff 4f       	sbci	r31, 0xFF	; 255
    383c:	60 81       	ld	r22, Z
    383e:	71 81       	ldd	r23, Z+1	; 0x01
    3840:	82 81       	ldd	r24, Z+2	; 0x02
    3842:	93 81       	ldd	r25, Z+3	; 0x03
    3844:	20 e0       	ldi	r18, 0x00	; 0
    3846:	30 e0       	ldi	r19, 0x00	; 0
    3848:	40 e8       	ldi	r20, 0x80	; 128
    384a:	5f e3       	ldi	r21, 0x3F	; 63
    384c:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    3850:	88 23       	and	r24, r24
    3852:	44 f4       	brge	.+16     	; 0x3864 <main+0x586>
		__ticks = 1;
    3854:	fe 01       	movw	r30, r28
    3856:	e5 5b       	subi	r30, 0xB5	; 181
    3858:	ff 4f       	sbci	r31, 0xFF	; 255
    385a:	81 e0       	ldi	r24, 0x01	; 1
    385c:	90 e0       	ldi	r25, 0x00	; 0
    385e:	91 83       	std	Z+1, r25	; 0x01
    3860:	80 83       	st	Z, r24
    3862:	64 c0       	rjmp	.+200    	; 0x392c <main+0x64e>
	else if (__tmp > 65535)
    3864:	fe 01       	movw	r30, r28
    3866:	e3 5b       	subi	r30, 0xB3	; 179
    3868:	ff 4f       	sbci	r31, 0xFF	; 255
    386a:	60 81       	ld	r22, Z
    386c:	71 81       	ldd	r23, Z+1	; 0x01
    386e:	82 81       	ldd	r24, Z+2	; 0x02
    3870:	93 81       	ldd	r25, Z+3	; 0x03
    3872:	20 e0       	ldi	r18, 0x00	; 0
    3874:	3f ef       	ldi	r19, 0xFF	; 255
    3876:	4f e7       	ldi	r20, 0x7F	; 127
    3878:	57 e4       	ldi	r21, 0x47	; 71
    387a:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    387e:	18 16       	cp	r1, r24
    3880:	0c f0       	brlt	.+2      	; 0x3884 <main+0x5a6>
    3882:	43 c0       	rjmp	.+134    	; 0x390a <main+0x62c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3884:	fe 01       	movw	r30, r28
    3886:	ef 5a       	subi	r30, 0xAF	; 175
    3888:	ff 4f       	sbci	r31, 0xFF	; 255
    388a:	60 81       	ld	r22, Z
    388c:	71 81       	ldd	r23, Z+1	; 0x01
    388e:	82 81       	ldd	r24, Z+2	; 0x02
    3890:	93 81       	ldd	r25, Z+3	; 0x03
    3892:	20 e0       	ldi	r18, 0x00	; 0
    3894:	30 e0       	ldi	r19, 0x00	; 0
    3896:	40 e2       	ldi	r20, 0x20	; 32
    3898:	51 e4       	ldi	r21, 0x41	; 65
    389a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    389e:	dc 01       	movw	r26, r24
    38a0:	cb 01       	movw	r24, r22
    38a2:	8e 01       	movw	r16, r28
    38a4:	05 5b       	subi	r16, 0xB5	; 181
    38a6:	1f 4f       	sbci	r17, 0xFF	; 255
    38a8:	bc 01       	movw	r22, r24
    38aa:	cd 01       	movw	r24, r26
    38ac:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    38b0:	dc 01       	movw	r26, r24
    38b2:	cb 01       	movw	r24, r22
    38b4:	f8 01       	movw	r30, r16
    38b6:	91 83       	std	Z+1, r25	; 0x01
    38b8:	80 83       	st	Z, r24
    38ba:	1f c0       	rjmp	.+62     	; 0x38fa <main+0x61c>
    38bc:	fe 01       	movw	r30, r28
    38be:	e7 5b       	subi	r30, 0xB7	; 183
    38c0:	ff 4f       	sbci	r31, 0xFF	; 255
    38c2:	88 ec       	ldi	r24, 0xC8	; 200
    38c4:	90 e0       	ldi	r25, 0x00	; 0
    38c6:	91 83       	std	Z+1, r25	; 0x01
    38c8:	80 83       	st	Z, r24
    38ca:	fe 01       	movw	r30, r28
    38cc:	e7 5b       	subi	r30, 0xB7	; 183
    38ce:	ff 4f       	sbci	r31, 0xFF	; 255
    38d0:	80 81       	ld	r24, Z
    38d2:	91 81       	ldd	r25, Z+1	; 0x01
    38d4:	01 97       	sbiw	r24, 0x01	; 1
    38d6:	f1 f7       	brne	.-4      	; 0x38d4 <main+0x5f6>
    38d8:	fe 01       	movw	r30, r28
    38da:	e7 5b       	subi	r30, 0xB7	; 183
    38dc:	ff 4f       	sbci	r31, 0xFF	; 255
    38de:	91 83       	std	Z+1, r25	; 0x01
    38e0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38e2:	de 01       	movw	r26, r28
    38e4:	a5 5b       	subi	r26, 0xB5	; 181
    38e6:	bf 4f       	sbci	r27, 0xFF	; 255
    38e8:	fe 01       	movw	r30, r28
    38ea:	e5 5b       	subi	r30, 0xB5	; 181
    38ec:	ff 4f       	sbci	r31, 0xFF	; 255
    38ee:	80 81       	ld	r24, Z
    38f0:	91 81       	ldd	r25, Z+1	; 0x01
    38f2:	01 97       	sbiw	r24, 0x01	; 1
    38f4:	11 96       	adiw	r26, 0x01	; 1
    38f6:	9c 93       	st	X, r25
    38f8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38fa:	fe 01       	movw	r30, r28
    38fc:	e5 5b       	subi	r30, 0xB5	; 181
    38fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3900:	80 81       	ld	r24, Z
    3902:	91 81       	ldd	r25, Z+1	; 0x01
    3904:	00 97       	sbiw	r24, 0x00	; 0
    3906:	d1 f6       	brne	.-76     	; 0x38bc <main+0x5de>
    3908:	27 c0       	rjmp	.+78     	; 0x3958 <main+0x67a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    390a:	8e 01       	movw	r16, r28
    390c:	05 5b       	subi	r16, 0xB5	; 181
    390e:	1f 4f       	sbci	r17, 0xFF	; 255
    3910:	fe 01       	movw	r30, r28
    3912:	e3 5b       	subi	r30, 0xB3	; 179
    3914:	ff 4f       	sbci	r31, 0xFF	; 255
    3916:	60 81       	ld	r22, Z
    3918:	71 81       	ldd	r23, Z+1	; 0x01
    391a:	82 81       	ldd	r24, Z+2	; 0x02
    391c:	93 81       	ldd	r25, Z+3	; 0x03
    391e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3922:	dc 01       	movw	r26, r24
    3924:	cb 01       	movw	r24, r22
    3926:	f8 01       	movw	r30, r16
    3928:	91 83       	std	Z+1, r25	; 0x01
    392a:	80 83       	st	Z, r24
    392c:	de 01       	movw	r26, r28
    392e:	a9 5b       	subi	r26, 0xB9	; 185
    3930:	bf 4f       	sbci	r27, 0xFF	; 255
    3932:	fe 01       	movw	r30, r28
    3934:	e5 5b       	subi	r30, 0xB5	; 181
    3936:	ff 4f       	sbci	r31, 0xFF	; 255
    3938:	80 81       	ld	r24, Z
    393a:	91 81       	ldd	r25, Z+1	; 0x01
    393c:	8d 93       	st	X+, r24
    393e:	9c 93       	st	X, r25
    3940:	fe 01       	movw	r30, r28
    3942:	e9 5b       	subi	r30, 0xB9	; 185
    3944:	ff 4f       	sbci	r31, 0xFF	; 255
    3946:	80 81       	ld	r24, Z
    3948:	91 81       	ldd	r25, Z+1	; 0x01
    394a:	01 97       	sbiw	r24, 0x01	; 1
    394c:	f1 f7       	brne	.-4      	; 0x394a <main+0x66c>
    394e:	fe 01       	movw	r30, r28
    3950:	e9 5b       	subi	r30, 0xB9	; 185
    3952:	ff 4f       	sbci	r31, 0xFF	; 255
    3954:	91 83       	std	Z+1, r25	; 0x01
    3956:	80 83       	st	Z, r24
			_delay_ms(500);
			Left_Distance = HULTRASONIC_GET_Distance();
    3958:	0e 94 78 22 	call	0x44f0	; 0x44f0 <HULTRASONIC_GET_Distance>
    395c:	a2 2e       	mov	r10, r18
    395e:	b3 2e       	mov	r11, r19
    3960:	c4 2e       	mov	r12, r20
    3962:	d5 2e       	mov	r13, r21
    3964:	e6 2e       	mov	r14, r22
    3966:	f7 2e       	mov	r15, r23
    3968:	08 2f       	mov	r16, r24
    396a:	19 2f       	mov	r17, r25
    396c:	fe 01       	movw	r30, r28
    396e:	e7 58       	subi	r30, 0x87	; 135
    3970:	ff 4f       	sbci	r31, 0xFF	; 255
    3972:	a0 82       	st	Z, r10
    3974:	b1 82       	std	Z+1, r11	; 0x01
    3976:	c2 82       	std	Z+2, r12	; 0x02
    3978:	d3 82       	std	Z+3, r13	; 0x03
    397a:	e4 82       	std	Z+4, r14	; 0x04
    397c:	f5 82       	std	Z+5, r15	; 0x05
    397e:	06 83       	std	Z+6, r16	; 0x06
    3980:	17 83       	std	Z+7, r17	; 0x07
    3982:	fe 01       	movw	r30, r28
    3984:	ed 5b       	subi	r30, 0xBD	; 189
    3986:	ff 4f       	sbci	r31, 0xFF	; 255
    3988:	80 e0       	ldi	r24, 0x00	; 0
    398a:	90 e0       	ldi	r25, 0x00	; 0
    398c:	aa ef       	ldi	r26, 0xFA	; 250
    398e:	b3 e4       	ldi	r27, 0x43	; 67
    3990:	80 83       	st	Z, r24
    3992:	91 83       	std	Z+1, r25	; 0x01
    3994:	a2 83       	std	Z+2, r26	; 0x02
    3996:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3998:	8e 01       	movw	r16, r28
    399a:	01 5c       	subi	r16, 0xC1	; 193
    399c:	1f 4f       	sbci	r17, 0xFF	; 255
    399e:	fe 01       	movw	r30, r28
    39a0:	ed 5b       	subi	r30, 0xBD	; 189
    39a2:	ff 4f       	sbci	r31, 0xFF	; 255
    39a4:	60 81       	ld	r22, Z
    39a6:	71 81       	ldd	r23, Z+1	; 0x01
    39a8:	82 81       	ldd	r24, Z+2	; 0x02
    39aa:	93 81       	ldd	r25, Z+3	; 0x03
    39ac:	20 e0       	ldi	r18, 0x00	; 0
    39ae:	30 e0       	ldi	r19, 0x00	; 0
    39b0:	4a ef       	ldi	r20, 0xFA	; 250
    39b2:	54 e4       	ldi	r21, 0x44	; 68
    39b4:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    39b8:	dc 01       	movw	r26, r24
    39ba:	cb 01       	movw	r24, r22
    39bc:	f8 01       	movw	r30, r16
    39be:	80 83       	st	Z, r24
    39c0:	91 83       	std	Z+1, r25	; 0x01
    39c2:	a2 83       	std	Z+2, r26	; 0x02
    39c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39c6:	fe 01       	movw	r30, r28
    39c8:	ff 96       	adiw	r30, 0x3f	; 63
    39ca:	60 81       	ld	r22, Z
    39cc:	71 81       	ldd	r23, Z+1	; 0x01
    39ce:	82 81       	ldd	r24, Z+2	; 0x02
    39d0:	93 81       	ldd	r25, Z+3	; 0x03
    39d2:	20 e0       	ldi	r18, 0x00	; 0
    39d4:	30 e0       	ldi	r19, 0x00	; 0
    39d6:	40 e8       	ldi	r20, 0x80	; 128
    39d8:	5f e3       	ldi	r21, 0x3F	; 63
    39da:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    39de:	88 23       	and	r24, r24
    39e0:	2c f4       	brge	.+10     	; 0x39ec <main+0x70e>
		__ticks = 1;
    39e2:	81 e0       	ldi	r24, 0x01	; 1
    39e4:	90 e0       	ldi	r25, 0x00	; 0
    39e6:	9e af       	std	Y+62, r25	; 0x3e
    39e8:	8d af       	std	Y+61, r24	; 0x3d
    39ea:	46 c0       	rjmp	.+140    	; 0x3a78 <main+0x79a>
	else if (__tmp > 65535)
    39ec:	fe 01       	movw	r30, r28
    39ee:	ff 96       	adiw	r30, 0x3f	; 63
    39f0:	60 81       	ld	r22, Z
    39f2:	71 81       	ldd	r23, Z+1	; 0x01
    39f4:	82 81       	ldd	r24, Z+2	; 0x02
    39f6:	93 81       	ldd	r25, Z+3	; 0x03
    39f8:	20 e0       	ldi	r18, 0x00	; 0
    39fa:	3f ef       	ldi	r19, 0xFF	; 255
    39fc:	4f e7       	ldi	r20, 0x7F	; 127
    39fe:	57 e4       	ldi	r21, 0x47	; 71
    3a00:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    3a04:	18 16       	cp	r1, r24
    3a06:	64 f5       	brge	.+88     	; 0x3a60 <main+0x782>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a08:	fe 01       	movw	r30, r28
    3a0a:	ed 5b       	subi	r30, 0xBD	; 189
    3a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0e:	60 81       	ld	r22, Z
    3a10:	71 81       	ldd	r23, Z+1	; 0x01
    3a12:	82 81       	ldd	r24, Z+2	; 0x02
    3a14:	93 81       	ldd	r25, Z+3	; 0x03
    3a16:	20 e0       	ldi	r18, 0x00	; 0
    3a18:	30 e0       	ldi	r19, 0x00	; 0
    3a1a:	40 e2       	ldi	r20, 0x20	; 32
    3a1c:	51 e4       	ldi	r21, 0x41	; 65
    3a1e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3a22:	dc 01       	movw	r26, r24
    3a24:	cb 01       	movw	r24, r22
    3a26:	bc 01       	movw	r22, r24
    3a28:	cd 01       	movw	r24, r26
    3a2a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3a2e:	dc 01       	movw	r26, r24
    3a30:	cb 01       	movw	r24, r22
    3a32:	9e af       	std	Y+62, r25	; 0x3e
    3a34:	8d af       	std	Y+61, r24	; 0x3d
    3a36:	0f c0       	rjmp	.+30     	; 0x3a56 <main+0x778>
    3a38:	88 ec       	ldi	r24, 0xC8	; 200
    3a3a:	90 e0       	ldi	r25, 0x00	; 0
    3a3c:	9c af       	std	Y+60, r25	; 0x3c
    3a3e:	8b af       	std	Y+59, r24	; 0x3b
    3a40:	8b ad       	ldd	r24, Y+59	; 0x3b
    3a42:	9c ad       	ldd	r25, Y+60	; 0x3c
    3a44:	01 97       	sbiw	r24, 0x01	; 1
    3a46:	f1 f7       	brne	.-4      	; 0x3a44 <main+0x766>
    3a48:	9c af       	std	Y+60, r25	; 0x3c
    3a4a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    3a4e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3a50:	01 97       	sbiw	r24, 0x01	; 1
    3a52:	9e af       	std	Y+62, r25	; 0x3e
    3a54:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a56:	8d ad       	ldd	r24, Y+61	; 0x3d
    3a58:	9e ad       	ldd	r25, Y+62	; 0x3e
    3a5a:	00 97       	sbiw	r24, 0x00	; 0
    3a5c:	69 f7       	brne	.-38     	; 0x3a38 <main+0x75a>
    3a5e:	16 c0       	rjmp	.+44     	; 0x3a8c <main+0x7ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a60:	fe 01       	movw	r30, r28
    3a62:	ff 96       	adiw	r30, 0x3f	; 63
    3a64:	60 81       	ld	r22, Z
    3a66:	71 81       	ldd	r23, Z+1	; 0x01
    3a68:	82 81       	ldd	r24, Z+2	; 0x02
    3a6a:	93 81       	ldd	r25, Z+3	; 0x03
    3a6c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3a70:	dc 01       	movw	r26, r24
    3a72:	cb 01       	movw	r24, r22
    3a74:	9e af       	std	Y+62, r25	; 0x3e
    3a76:	8d af       	std	Y+61, r24	; 0x3d
    3a78:	8d ad       	ldd	r24, Y+61	; 0x3d
    3a7a:	9e ad       	ldd	r25, Y+62	; 0x3e
    3a7c:	9a af       	std	Y+58, r25	; 0x3a
    3a7e:	89 af       	std	Y+57, r24	; 0x39
    3a80:	89 ad       	ldd	r24, Y+57	; 0x39
    3a82:	9a ad       	ldd	r25, Y+58	; 0x3a
    3a84:	01 97       	sbiw	r24, 0x01	; 1
    3a86:	f1 f7       	brne	.-4      	; 0x3a84 <main+0x7a6>
    3a88:	9a af       	std	Y+58, r25	; 0x3a
    3a8a:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(500);

			HSERVO_angel(0);
    3a8c:	80 e0       	ldi	r24, 0x00	; 0
    3a8e:	90 e0       	ldi	r25, 0x00	; 0
    3a90:	0e 94 2e 22 	call	0x445c	; 0x445c <HSERVO_angel>
    3a94:	80 e0       	ldi	r24, 0x00	; 0
    3a96:	90 e0       	ldi	r25, 0x00	; 0
    3a98:	aa ef       	ldi	r26, 0xFA	; 250
    3a9a:	b3 e4       	ldi	r27, 0x43	; 67
    3a9c:	8d ab       	std	Y+53, r24	; 0x35
    3a9e:	9e ab       	std	Y+54, r25	; 0x36
    3aa0:	af ab       	std	Y+55, r26	; 0x37
    3aa2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3aa4:	6d a9       	ldd	r22, Y+53	; 0x35
    3aa6:	7e a9       	ldd	r23, Y+54	; 0x36
    3aa8:	8f a9       	ldd	r24, Y+55	; 0x37
    3aaa:	98 ad       	ldd	r25, Y+56	; 0x38
    3aac:	20 e0       	ldi	r18, 0x00	; 0
    3aae:	30 e0       	ldi	r19, 0x00	; 0
    3ab0:	4a ef       	ldi	r20, 0xFA	; 250
    3ab2:	54 e4       	ldi	r21, 0x44	; 68
    3ab4:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3ab8:	dc 01       	movw	r26, r24
    3aba:	cb 01       	movw	r24, r22
    3abc:	89 ab       	std	Y+49, r24	; 0x31
    3abe:	9a ab       	std	Y+50, r25	; 0x32
    3ac0:	ab ab       	std	Y+51, r26	; 0x33
    3ac2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3ac4:	69 a9       	ldd	r22, Y+49	; 0x31
    3ac6:	7a a9       	ldd	r23, Y+50	; 0x32
    3ac8:	8b a9       	ldd	r24, Y+51	; 0x33
    3aca:	9c a9       	ldd	r25, Y+52	; 0x34
    3acc:	20 e0       	ldi	r18, 0x00	; 0
    3ace:	30 e0       	ldi	r19, 0x00	; 0
    3ad0:	40 e8       	ldi	r20, 0x80	; 128
    3ad2:	5f e3       	ldi	r21, 0x3F	; 63
    3ad4:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    3ad8:	88 23       	and	r24, r24
    3ada:	2c f4       	brge	.+10     	; 0x3ae6 <main+0x808>
		__ticks = 1;
    3adc:	81 e0       	ldi	r24, 0x01	; 1
    3ade:	90 e0       	ldi	r25, 0x00	; 0
    3ae0:	98 ab       	std	Y+48, r25	; 0x30
    3ae2:	8f a7       	std	Y+47, r24	; 0x2f
    3ae4:	3f c0       	rjmp	.+126    	; 0x3b64 <main+0x886>
	else if (__tmp > 65535)
    3ae6:	69 a9       	ldd	r22, Y+49	; 0x31
    3ae8:	7a a9       	ldd	r23, Y+50	; 0x32
    3aea:	8b a9       	ldd	r24, Y+51	; 0x33
    3aec:	9c a9       	ldd	r25, Y+52	; 0x34
    3aee:	20 e0       	ldi	r18, 0x00	; 0
    3af0:	3f ef       	ldi	r19, 0xFF	; 255
    3af2:	4f e7       	ldi	r20, 0x7F	; 127
    3af4:	57 e4       	ldi	r21, 0x47	; 71
    3af6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    3afa:	18 16       	cp	r1, r24
    3afc:	4c f5       	brge	.+82     	; 0x3b50 <main+0x872>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3afe:	6d a9       	ldd	r22, Y+53	; 0x35
    3b00:	7e a9       	ldd	r23, Y+54	; 0x36
    3b02:	8f a9       	ldd	r24, Y+55	; 0x37
    3b04:	98 ad       	ldd	r25, Y+56	; 0x38
    3b06:	20 e0       	ldi	r18, 0x00	; 0
    3b08:	30 e0       	ldi	r19, 0x00	; 0
    3b0a:	40 e2       	ldi	r20, 0x20	; 32
    3b0c:	51 e4       	ldi	r21, 0x41	; 65
    3b0e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3b12:	dc 01       	movw	r26, r24
    3b14:	cb 01       	movw	r24, r22
    3b16:	bc 01       	movw	r22, r24
    3b18:	cd 01       	movw	r24, r26
    3b1a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3b1e:	dc 01       	movw	r26, r24
    3b20:	cb 01       	movw	r24, r22
    3b22:	98 ab       	std	Y+48, r25	; 0x30
    3b24:	8f a7       	std	Y+47, r24	; 0x2f
    3b26:	0f c0       	rjmp	.+30     	; 0x3b46 <main+0x868>
    3b28:	88 ec       	ldi	r24, 0xC8	; 200
    3b2a:	90 e0       	ldi	r25, 0x00	; 0
    3b2c:	9e a7       	std	Y+46, r25	; 0x2e
    3b2e:	8d a7       	std	Y+45, r24	; 0x2d
    3b30:	8d a5       	ldd	r24, Y+45	; 0x2d
    3b32:	9e a5       	ldd	r25, Y+46	; 0x2e
    3b34:	01 97       	sbiw	r24, 0x01	; 1
    3b36:	f1 f7       	brne	.-4      	; 0x3b34 <main+0x856>
    3b38:	9e a7       	std	Y+46, r25	; 0x2e
    3b3a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b3c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b3e:	98 a9       	ldd	r25, Y+48	; 0x30
    3b40:	01 97       	sbiw	r24, 0x01	; 1
    3b42:	98 ab       	std	Y+48, r25	; 0x30
    3b44:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b46:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b48:	98 a9       	ldd	r25, Y+48	; 0x30
    3b4a:	00 97       	sbiw	r24, 0x00	; 0
    3b4c:	69 f7       	brne	.-38     	; 0x3b28 <main+0x84a>
    3b4e:	14 c0       	rjmp	.+40     	; 0x3b78 <main+0x89a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b50:	69 a9       	ldd	r22, Y+49	; 0x31
    3b52:	7a a9       	ldd	r23, Y+50	; 0x32
    3b54:	8b a9       	ldd	r24, Y+51	; 0x33
    3b56:	9c a9       	ldd	r25, Y+52	; 0x34
    3b58:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3b5c:	dc 01       	movw	r26, r24
    3b5e:	cb 01       	movw	r24, r22
    3b60:	98 ab       	std	Y+48, r25	; 0x30
    3b62:	8f a7       	std	Y+47, r24	; 0x2f
    3b64:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b66:	98 a9       	ldd	r25, Y+48	; 0x30
    3b68:	9c a7       	std	Y+44, r25	; 0x2c
    3b6a:	8b a7       	std	Y+43, r24	; 0x2b
    3b6c:	8b a5       	ldd	r24, Y+43	; 0x2b
    3b6e:	9c a5       	ldd	r25, Y+44	; 0x2c
    3b70:	01 97       	sbiw	r24, 0x01	; 1
    3b72:	f1 f7       	brne	.-4      	; 0x3b70 <main+0x892>
    3b74:	9c a7       	std	Y+44, r25	; 0x2c
    3b76:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(500);
			Right_Distance = HULTRASONIC_GET_Distance();
    3b78:	0e 94 78 22 	call	0x44f0	; 0x44f0 <HULTRASONIC_GET_Distance>
    3b7c:	a2 2e       	mov	r10, r18
    3b7e:	b3 2e       	mov	r11, r19
    3b80:	c4 2e       	mov	r12, r20
    3b82:	d5 2e       	mov	r13, r21
    3b84:	e6 2e       	mov	r14, r22
    3b86:	f7 2e       	mov	r15, r23
    3b88:	08 2f       	mov	r16, r24
    3b8a:	19 2f       	mov	r17, r25
    3b8c:	fe 01       	movw	r30, r28
    3b8e:	ef 58       	subi	r30, 0x8F	; 143
    3b90:	ff 4f       	sbci	r31, 0xFF	; 255
    3b92:	a0 82       	st	Z, r10
    3b94:	b1 82       	std	Z+1, r11	; 0x01
    3b96:	c2 82       	std	Z+2, r12	; 0x02
    3b98:	d3 82       	std	Z+3, r13	; 0x03
    3b9a:	e4 82       	std	Z+4, r14	; 0x04
    3b9c:	f5 82       	std	Z+5, r15	; 0x05
    3b9e:	06 83       	std	Z+6, r16	; 0x06
    3ba0:	17 83       	std	Z+7, r17	; 0x07
    3ba2:	80 e0       	ldi	r24, 0x00	; 0
    3ba4:	90 e0       	ldi	r25, 0x00	; 0
    3ba6:	aa ef       	ldi	r26, 0xFA	; 250
    3ba8:	b3 e4       	ldi	r27, 0x43	; 67
    3baa:	8f a3       	std	Y+39, r24	; 0x27
    3bac:	98 a7       	std	Y+40, r25	; 0x28
    3bae:	a9 a7       	std	Y+41, r26	; 0x29
    3bb0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bb2:	6f a1       	ldd	r22, Y+39	; 0x27
    3bb4:	78 a5       	ldd	r23, Y+40	; 0x28
    3bb6:	89 a5       	ldd	r24, Y+41	; 0x29
    3bb8:	9a a5       	ldd	r25, Y+42	; 0x2a
    3bba:	20 e0       	ldi	r18, 0x00	; 0
    3bbc:	30 e0       	ldi	r19, 0x00	; 0
    3bbe:	4a ef       	ldi	r20, 0xFA	; 250
    3bc0:	54 e4       	ldi	r21, 0x44	; 68
    3bc2:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3bc6:	dc 01       	movw	r26, r24
    3bc8:	cb 01       	movw	r24, r22
    3bca:	8b a3       	std	Y+35, r24	; 0x23
    3bcc:	9c a3       	std	Y+36, r25	; 0x24
    3bce:	ad a3       	std	Y+37, r26	; 0x25
    3bd0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3bd2:	6b a1       	ldd	r22, Y+35	; 0x23
    3bd4:	7c a1       	ldd	r23, Y+36	; 0x24
    3bd6:	8d a1       	ldd	r24, Y+37	; 0x25
    3bd8:	9e a1       	ldd	r25, Y+38	; 0x26
    3bda:	20 e0       	ldi	r18, 0x00	; 0
    3bdc:	30 e0       	ldi	r19, 0x00	; 0
    3bde:	40 e8       	ldi	r20, 0x80	; 128
    3be0:	5f e3       	ldi	r21, 0x3F	; 63
    3be2:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    3be6:	88 23       	and	r24, r24
    3be8:	2c f4       	brge	.+10     	; 0x3bf4 <main+0x916>
		__ticks = 1;
    3bea:	81 e0       	ldi	r24, 0x01	; 1
    3bec:	90 e0       	ldi	r25, 0x00	; 0
    3bee:	9a a3       	std	Y+34, r25	; 0x22
    3bf0:	89 a3       	std	Y+33, r24	; 0x21
    3bf2:	3f c0       	rjmp	.+126    	; 0x3c72 <main+0x994>
	else if (__tmp > 65535)
    3bf4:	6b a1       	ldd	r22, Y+35	; 0x23
    3bf6:	7c a1       	ldd	r23, Y+36	; 0x24
    3bf8:	8d a1       	ldd	r24, Y+37	; 0x25
    3bfa:	9e a1       	ldd	r25, Y+38	; 0x26
    3bfc:	20 e0       	ldi	r18, 0x00	; 0
    3bfe:	3f ef       	ldi	r19, 0xFF	; 255
    3c00:	4f e7       	ldi	r20, 0x7F	; 127
    3c02:	57 e4       	ldi	r21, 0x47	; 71
    3c04:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    3c08:	18 16       	cp	r1, r24
    3c0a:	4c f5       	brge	.+82     	; 0x3c5e <main+0x980>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c0c:	6f a1       	ldd	r22, Y+39	; 0x27
    3c0e:	78 a5       	ldd	r23, Y+40	; 0x28
    3c10:	89 a5       	ldd	r24, Y+41	; 0x29
    3c12:	9a a5       	ldd	r25, Y+42	; 0x2a
    3c14:	20 e0       	ldi	r18, 0x00	; 0
    3c16:	30 e0       	ldi	r19, 0x00	; 0
    3c18:	40 e2       	ldi	r20, 0x20	; 32
    3c1a:	51 e4       	ldi	r21, 0x41	; 65
    3c1c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3c20:	dc 01       	movw	r26, r24
    3c22:	cb 01       	movw	r24, r22
    3c24:	bc 01       	movw	r22, r24
    3c26:	cd 01       	movw	r24, r26
    3c28:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3c2c:	dc 01       	movw	r26, r24
    3c2e:	cb 01       	movw	r24, r22
    3c30:	9a a3       	std	Y+34, r25	; 0x22
    3c32:	89 a3       	std	Y+33, r24	; 0x21
    3c34:	0f c0       	rjmp	.+30     	; 0x3c54 <main+0x976>
    3c36:	88 ec       	ldi	r24, 0xC8	; 200
    3c38:	90 e0       	ldi	r25, 0x00	; 0
    3c3a:	98 a3       	std	Y+32, r25	; 0x20
    3c3c:	8f 8f       	std	Y+31, r24	; 0x1f
    3c3e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3c40:	98 a1       	ldd	r25, Y+32	; 0x20
    3c42:	01 97       	sbiw	r24, 0x01	; 1
    3c44:	f1 f7       	brne	.-4      	; 0x3c42 <main+0x964>
    3c46:	98 a3       	std	Y+32, r25	; 0x20
    3c48:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c4a:	89 a1       	ldd	r24, Y+33	; 0x21
    3c4c:	9a a1       	ldd	r25, Y+34	; 0x22
    3c4e:	01 97       	sbiw	r24, 0x01	; 1
    3c50:	9a a3       	std	Y+34, r25	; 0x22
    3c52:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c54:	89 a1       	ldd	r24, Y+33	; 0x21
    3c56:	9a a1       	ldd	r25, Y+34	; 0x22
    3c58:	00 97       	sbiw	r24, 0x00	; 0
    3c5a:	69 f7       	brne	.-38     	; 0x3c36 <main+0x958>
    3c5c:	14 c0       	rjmp	.+40     	; 0x3c86 <main+0x9a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c5e:	6b a1       	ldd	r22, Y+35	; 0x23
    3c60:	7c a1       	ldd	r23, Y+36	; 0x24
    3c62:	8d a1       	ldd	r24, Y+37	; 0x25
    3c64:	9e a1       	ldd	r25, Y+38	; 0x26
    3c66:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3c6a:	dc 01       	movw	r26, r24
    3c6c:	cb 01       	movw	r24, r22
    3c6e:	9a a3       	std	Y+34, r25	; 0x22
    3c70:	89 a3       	std	Y+33, r24	; 0x21
    3c72:	89 a1       	ldd	r24, Y+33	; 0x21
    3c74:	9a a1       	ldd	r25, Y+34	; 0x22
    3c76:	9e 8f       	std	Y+30, r25	; 0x1e
    3c78:	8d 8f       	std	Y+29, r24	; 0x1d
    3c7a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3c7c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3c7e:	01 97       	sbiw	r24, 0x01	; 1
    3c80:	f1 f7       	brne	.-4      	; 0x3c7e <main+0x9a0>
    3c82:	9e 8f       	std	Y+30, r25	; 0x1e
    3c84:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(500);

			HSERVO_angel(90);
    3c86:	8a e5       	ldi	r24, 0x5A	; 90
    3c88:	90 e0       	ldi	r25, 0x00	; 0
    3c8a:	0e 94 2e 22 	call	0x445c	; 0x445c <HSERVO_angel>
			if(Left_Distance>Right_Distance)
    3c8e:	ce 01       	movw	r24, r28
    3c90:	87 58       	subi	r24, 0x87	; 135
    3c92:	9f 4f       	sbci	r25, 0xFF	; 255
    3c94:	cb 56       	subi	r28, 0x6B	; 107
    3c96:	df 4f       	sbci	r29, 0xFF	; 255
    3c98:	99 83       	std	Y+1, r25	; 0x01
    3c9a:	88 83       	st	Y, r24
    3c9c:	c5 59       	subi	r28, 0x95	; 149
    3c9e:	d0 40       	sbci	r29, 0x00	; 0
    3ca0:	de 01       	movw	r26, r28
    3ca2:	af 58       	subi	r26, 0x8F	; 143
    3ca4:	bf 4f       	sbci	r27, 0xFF	; 255
    3ca6:	c9 56       	subi	r28, 0x69	; 105
    3ca8:	df 4f       	sbci	r29, 0xFF	; 255
    3caa:	b9 83       	std	Y+1, r27	; 0x01
    3cac:	a8 83       	st	Y, r26
    3cae:	c7 59       	subi	r28, 0x97	; 151
    3cb0:	d0 40       	sbci	r29, 0x00	; 0
    3cb2:	cb 56       	subi	r28, 0x6B	; 107
    3cb4:	df 4f       	sbci	r29, 0xFF	; 255
    3cb6:	e8 81       	ld	r30, Y
    3cb8:	f9 81       	ldd	r31, Y+1	; 0x01
    3cba:	c5 59       	subi	r28, 0x95	; 149
    3cbc:	d0 40       	sbci	r29, 0x00	; 0
    3cbe:	97 81       	ldd	r25, Z+7	; 0x07
    3cc0:	c9 56       	subi	r28, 0x69	; 105
    3cc2:	df 4f       	sbci	r29, 0xFF	; 255
    3cc4:	a8 81       	ld	r26, Y
    3cc6:	b9 81       	ldd	r27, Y+1	; 0x01
    3cc8:	c7 59       	subi	r28, 0x97	; 151
    3cca:	d0 40       	sbci	r29, 0x00	; 0
    3ccc:	17 96       	adiw	r26, 0x07	; 7
    3cce:	8c 91       	ld	r24, X
    3cd0:	17 97       	sbiw	r26, 0x07	; 7
    3cd2:	89 17       	cp	r24, r25
    3cd4:	08 f4       	brcc	.+2      	; 0x3cd8 <main+0x9fa>
    3cd6:	07 c1       	rjmp	.+526    	; 0x3ee6 <main+0xc08>
    3cd8:	cb 56       	subi	r28, 0x6B	; 107
    3cda:	df 4f       	sbci	r29, 0xFF	; 255
    3cdc:	e8 81       	ld	r30, Y
    3cde:	f9 81       	ldd	r31, Y+1	; 0x01
    3ce0:	c5 59       	subi	r28, 0x95	; 149
    3ce2:	d0 40       	sbci	r29, 0x00	; 0
    3ce4:	97 81       	ldd	r25, Z+7	; 0x07
    3ce6:	c9 56       	subi	r28, 0x69	; 105
    3ce8:	df 4f       	sbci	r29, 0xFF	; 255
    3cea:	a8 81       	ld	r26, Y
    3cec:	b9 81       	ldd	r27, Y+1	; 0x01
    3cee:	c7 59       	subi	r28, 0x97	; 151
    3cf0:	d0 40       	sbci	r29, 0x00	; 0
    3cf2:	17 96       	adiw	r26, 0x07	; 7
    3cf4:	8c 91       	ld	r24, X
    3cf6:	17 97       	sbiw	r26, 0x07	; 7
    3cf8:	98 17       	cp	r25, r24
    3cfa:	09 f0       	breq	.+2      	; 0x3cfe <main+0xa20>
    3cfc:	71 c1       	rjmp	.+738    	; 0x3fe0 <main+0xd02>
    3cfe:	cb 56       	subi	r28, 0x6B	; 107
    3d00:	df 4f       	sbci	r29, 0xFF	; 255
    3d02:	e8 81       	ld	r30, Y
    3d04:	f9 81       	ldd	r31, Y+1	; 0x01
    3d06:	c5 59       	subi	r28, 0x95	; 149
    3d08:	d0 40       	sbci	r29, 0x00	; 0
    3d0a:	96 81       	ldd	r25, Z+6	; 0x06
    3d0c:	c9 56       	subi	r28, 0x69	; 105
    3d0e:	df 4f       	sbci	r29, 0xFF	; 255
    3d10:	a8 81       	ld	r26, Y
    3d12:	b9 81       	ldd	r27, Y+1	; 0x01
    3d14:	c7 59       	subi	r28, 0x97	; 151
    3d16:	d0 40       	sbci	r29, 0x00	; 0
    3d18:	16 96       	adiw	r26, 0x06	; 6
    3d1a:	8c 91       	ld	r24, X
    3d1c:	16 97       	sbiw	r26, 0x06	; 6
    3d1e:	89 17       	cp	r24, r25
    3d20:	08 f4       	brcc	.+2      	; 0x3d24 <main+0xa46>
    3d22:	e1 c0       	rjmp	.+450    	; 0x3ee6 <main+0xc08>
    3d24:	cb 56       	subi	r28, 0x6B	; 107
    3d26:	df 4f       	sbci	r29, 0xFF	; 255
    3d28:	e8 81       	ld	r30, Y
    3d2a:	f9 81       	ldd	r31, Y+1	; 0x01
    3d2c:	c5 59       	subi	r28, 0x95	; 149
    3d2e:	d0 40       	sbci	r29, 0x00	; 0
    3d30:	96 81       	ldd	r25, Z+6	; 0x06
    3d32:	c9 56       	subi	r28, 0x69	; 105
    3d34:	df 4f       	sbci	r29, 0xFF	; 255
    3d36:	a8 81       	ld	r26, Y
    3d38:	b9 81       	ldd	r27, Y+1	; 0x01
    3d3a:	c7 59       	subi	r28, 0x97	; 151
    3d3c:	d0 40       	sbci	r29, 0x00	; 0
    3d3e:	16 96       	adiw	r26, 0x06	; 6
    3d40:	8c 91       	ld	r24, X
    3d42:	16 97       	sbiw	r26, 0x06	; 6
    3d44:	98 17       	cp	r25, r24
    3d46:	09 f0       	breq	.+2      	; 0x3d4a <main+0xa6c>
    3d48:	4b c1       	rjmp	.+662    	; 0x3fe0 <main+0xd02>
    3d4a:	cb 56       	subi	r28, 0x6B	; 107
    3d4c:	df 4f       	sbci	r29, 0xFF	; 255
    3d4e:	e8 81       	ld	r30, Y
    3d50:	f9 81       	ldd	r31, Y+1	; 0x01
    3d52:	c5 59       	subi	r28, 0x95	; 149
    3d54:	d0 40       	sbci	r29, 0x00	; 0
    3d56:	95 81       	ldd	r25, Z+5	; 0x05
    3d58:	c9 56       	subi	r28, 0x69	; 105
    3d5a:	df 4f       	sbci	r29, 0xFF	; 255
    3d5c:	a8 81       	ld	r26, Y
    3d5e:	b9 81       	ldd	r27, Y+1	; 0x01
    3d60:	c7 59       	subi	r28, 0x97	; 151
    3d62:	d0 40       	sbci	r29, 0x00	; 0
    3d64:	15 96       	adiw	r26, 0x05	; 5
    3d66:	8c 91       	ld	r24, X
    3d68:	15 97       	sbiw	r26, 0x05	; 5
    3d6a:	89 17       	cp	r24, r25
    3d6c:	08 f4       	brcc	.+2      	; 0x3d70 <main+0xa92>
    3d6e:	bb c0       	rjmp	.+374    	; 0x3ee6 <main+0xc08>
    3d70:	cb 56       	subi	r28, 0x6B	; 107
    3d72:	df 4f       	sbci	r29, 0xFF	; 255
    3d74:	e8 81       	ld	r30, Y
    3d76:	f9 81       	ldd	r31, Y+1	; 0x01
    3d78:	c5 59       	subi	r28, 0x95	; 149
    3d7a:	d0 40       	sbci	r29, 0x00	; 0
    3d7c:	95 81       	ldd	r25, Z+5	; 0x05
    3d7e:	c9 56       	subi	r28, 0x69	; 105
    3d80:	df 4f       	sbci	r29, 0xFF	; 255
    3d82:	a8 81       	ld	r26, Y
    3d84:	b9 81       	ldd	r27, Y+1	; 0x01
    3d86:	c7 59       	subi	r28, 0x97	; 151
    3d88:	d0 40       	sbci	r29, 0x00	; 0
    3d8a:	15 96       	adiw	r26, 0x05	; 5
    3d8c:	8c 91       	ld	r24, X
    3d8e:	15 97       	sbiw	r26, 0x05	; 5
    3d90:	98 17       	cp	r25, r24
    3d92:	09 f0       	breq	.+2      	; 0x3d96 <main+0xab8>
    3d94:	25 c1       	rjmp	.+586    	; 0x3fe0 <main+0xd02>
    3d96:	cb 56       	subi	r28, 0x6B	; 107
    3d98:	df 4f       	sbci	r29, 0xFF	; 255
    3d9a:	e8 81       	ld	r30, Y
    3d9c:	f9 81       	ldd	r31, Y+1	; 0x01
    3d9e:	c5 59       	subi	r28, 0x95	; 149
    3da0:	d0 40       	sbci	r29, 0x00	; 0
    3da2:	94 81       	ldd	r25, Z+4	; 0x04
    3da4:	c9 56       	subi	r28, 0x69	; 105
    3da6:	df 4f       	sbci	r29, 0xFF	; 255
    3da8:	a8 81       	ld	r26, Y
    3daa:	b9 81       	ldd	r27, Y+1	; 0x01
    3dac:	c7 59       	subi	r28, 0x97	; 151
    3dae:	d0 40       	sbci	r29, 0x00	; 0
    3db0:	14 96       	adiw	r26, 0x04	; 4
    3db2:	8c 91       	ld	r24, X
    3db4:	14 97       	sbiw	r26, 0x04	; 4
    3db6:	89 17       	cp	r24, r25
    3db8:	08 f4       	brcc	.+2      	; 0x3dbc <main+0xade>
    3dba:	95 c0       	rjmp	.+298    	; 0x3ee6 <main+0xc08>
    3dbc:	cb 56       	subi	r28, 0x6B	; 107
    3dbe:	df 4f       	sbci	r29, 0xFF	; 255
    3dc0:	e8 81       	ld	r30, Y
    3dc2:	f9 81       	ldd	r31, Y+1	; 0x01
    3dc4:	c5 59       	subi	r28, 0x95	; 149
    3dc6:	d0 40       	sbci	r29, 0x00	; 0
    3dc8:	94 81       	ldd	r25, Z+4	; 0x04
    3dca:	c9 56       	subi	r28, 0x69	; 105
    3dcc:	df 4f       	sbci	r29, 0xFF	; 255
    3dce:	a8 81       	ld	r26, Y
    3dd0:	b9 81       	ldd	r27, Y+1	; 0x01
    3dd2:	c7 59       	subi	r28, 0x97	; 151
    3dd4:	d0 40       	sbci	r29, 0x00	; 0
    3dd6:	14 96       	adiw	r26, 0x04	; 4
    3dd8:	8c 91       	ld	r24, X
    3dda:	14 97       	sbiw	r26, 0x04	; 4
    3ddc:	98 17       	cp	r25, r24
    3dde:	09 f0       	breq	.+2      	; 0x3de2 <main+0xb04>
    3de0:	ff c0       	rjmp	.+510    	; 0x3fe0 <main+0xd02>
    3de2:	cb 56       	subi	r28, 0x6B	; 107
    3de4:	df 4f       	sbci	r29, 0xFF	; 255
    3de6:	e8 81       	ld	r30, Y
    3de8:	f9 81       	ldd	r31, Y+1	; 0x01
    3dea:	c5 59       	subi	r28, 0x95	; 149
    3dec:	d0 40       	sbci	r29, 0x00	; 0
    3dee:	93 81       	ldd	r25, Z+3	; 0x03
    3df0:	c9 56       	subi	r28, 0x69	; 105
    3df2:	df 4f       	sbci	r29, 0xFF	; 255
    3df4:	a8 81       	ld	r26, Y
    3df6:	b9 81       	ldd	r27, Y+1	; 0x01
    3df8:	c7 59       	subi	r28, 0x97	; 151
    3dfa:	d0 40       	sbci	r29, 0x00	; 0
    3dfc:	13 96       	adiw	r26, 0x03	; 3
    3dfe:	8c 91       	ld	r24, X
    3e00:	13 97       	sbiw	r26, 0x03	; 3
    3e02:	89 17       	cp	r24, r25
    3e04:	08 f4       	brcc	.+2      	; 0x3e08 <main+0xb2a>
    3e06:	6f c0       	rjmp	.+222    	; 0x3ee6 <main+0xc08>
    3e08:	cb 56       	subi	r28, 0x6B	; 107
    3e0a:	df 4f       	sbci	r29, 0xFF	; 255
    3e0c:	e8 81       	ld	r30, Y
    3e0e:	f9 81       	ldd	r31, Y+1	; 0x01
    3e10:	c5 59       	subi	r28, 0x95	; 149
    3e12:	d0 40       	sbci	r29, 0x00	; 0
    3e14:	93 81       	ldd	r25, Z+3	; 0x03
    3e16:	c9 56       	subi	r28, 0x69	; 105
    3e18:	df 4f       	sbci	r29, 0xFF	; 255
    3e1a:	a8 81       	ld	r26, Y
    3e1c:	b9 81       	ldd	r27, Y+1	; 0x01
    3e1e:	c7 59       	subi	r28, 0x97	; 151
    3e20:	d0 40       	sbci	r29, 0x00	; 0
    3e22:	13 96       	adiw	r26, 0x03	; 3
    3e24:	8c 91       	ld	r24, X
    3e26:	13 97       	sbiw	r26, 0x03	; 3
    3e28:	98 17       	cp	r25, r24
    3e2a:	09 f0       	breq	.+2      	; 0x3e2e <main+0xb50>
    3e2c:	d9 c0       	rjmp	.+434    	; 0x3fe0 <main+0xd02>
    3e2e:	cb 56       	subi	r28, 0x6B	; 107
    3e30:	df 4f       	sbci	r29, 0xFF	; 255
    3e32:	e8 81       	ld	r30, Y
    3e34:	f9 81       	ldd	r31, Y+1	; 0x01
    3e36:	c5 59       	subi	r28, 0x95	; 149
    3e38:	d0 40       	sbci	r29, 0x00	; 0
    3e3a:	92 81       	ldd	r25, Z+2	; 0x02
    3e3c:	c9 56       	subi	r28, 0x69	; 105
    3e3e:	df 4f       	sbci	r29, 0xFF	; 255
    3e40:	a8 81       	ld	r26, Y
    3e42:	b9 81       	ldd	r27, Y+1	; 0x01
    3e44:	c7 59       	subi	r28, 0x97	; 151
    3e46:	d0 40       	sbci	r29, 0x00	; 0
    3e48:	12 96       	adiw	r26, 0x02	; 2
    3e4a:	8c 91       	ld	r24, X
    3e4c:	12 97       	sbiw	r26, 0x02	; 2
    3e4e:	89 17       	cp	r24, r25
    3e50:	08 f4       	brcc	.+2      	; 0x3e54 <main+0xb76>
    3e52:	49 c0       	rjmp	.+146    	; 0x3ee6 <main+0xc08>
    3e54:	cb 56       	subi	r28, 0x6B	; 107
    3e56:	df 4f       	sbci	r29, 0xFF	; 255
    3e58:	e8 81       	ld	r30, Y
    3e5a:	f9 81       	ldd	r31, Y+1	; 0x01
    3e5c:	c5 59       	subi	r28, 0x95	; 149
    3e5e:	d0 40       	sbci	r29, 0x00	; 0
    3e60:	92 81       	ldd	r25, Z+2	; 0x02
    3e62:	c9 56       	subi	r28, 0x69	; 105
    3e64:	df 4f       	sbci	r29, 0xFF	; 255
    3e66:	a8 81       	ld	r26, Y
    3e68:	b9 81       	ldd	r27, Y+1	; 0x01
    3e6a:	c7 59       	subi	r28, 0x97	; 151
    3e6c:	d0 40       	sbci	r29, 0x00	; 0
    3e6e:	12 96       	adiw	r26, 0x02	; 2
    3e70:	8c 91       	ld	r24, X
    3e72:	12 97       	sbiw	r26, 0x02	; 2
    3e74:	98 17       	cp	r25, r24
    3e76:	09 f0       	breq	.+2      	; 0x3e7a <main+0xb9c>
    3e78:	b3 c0       	rjmp	.+358    	; 0x3fe0 <main+0xd02>
    3e7a:	cb 56       	subi	r28, 0x6B	; 107
    3e7c:	df 4f       	sbci	r29, 0xFF	; 255
    3e7e:	e8 81       	ld	r30, Y
    3e80:	f9 81       	ldd	r31, Y+1	; 0x01
    3e82:	c5 59       	subi	r28, 0x95	; 149
    3e84:	d0 40       	sbci	r29, 0x00	; 0
    3e86:	91 81       	ldd	r25, Z+1	; 0x01
    3e88:	c9 56       	subi	r28, 0x69	; 105
    3e8a:	df 4f       	sbci	r29, 0xFF	; 255
    3e8c:	a8 81       	ld	r26, Y
    3e8e:	b9 81       	ldd	r27, Y+1	; 0x01
    3e90:	c7 59       	subi	r28, 0x97	; 151
    3e92:	d0 40       	sbci	r29, 0x00	; 0
    3e94:	11 96       	adiw	r26, 0x01	; 1
    3e96:	8c 91       	ld	r24, X
    3e98:	11 97       	sbiw	r26, 0x01	; 1
    3e9a:	89 17       	cp	r24, r25
    3e9c:	20 f1       	brcs	.+72     	; 0x3ee6 <main+0xc08>
    3e9e:	cb 56       	subi	r28, 0x6B	; 107
    3ea0:	df 4f       	sbci	r29, 0xFF	; 255
    3ea2:	e8 81       	ld	r30, Y
    3ea4:	f9 81       	ldd	r31, Y+1	; 0x01
    3ea6:	c5 59       	subi	r28, 0x95	; 149
    3ea8:	d0 40       	sbci	r29, 0x00	; 0
    3eaa:	91 81       	ldd	r25, Z+1	; 0x01
    3eac:	c9 56       	subi	r28, 0x69	; 105
    3eae:	df 4f       	sbci	r29, 0xFF	; 255
    3eb0:	a8 81       	ld	r26, Y
    3eb2:	b9 81       	ldd	r27, Y+1	; 0x01
    3eb4:	c7 59       	subi	r28, 0x97	; 151
    3eb6:	d0 40       	sbci	r29, 0x00	; 0
    3eb8:	11 96       	adiw	r26, 0x01	; 1
    3eba:	8c 91       	ld	r24, X
    3ebc:	11 97       	sbiw	r26, 0x01	; 1
    3ebe:	98 17       	cp	r25, r24
    3ec0:	09 f0       	breq	.+2      	; 0x3ec4 <main+0xbe6>
    3ec2:	8e c0       	rjmp	.+284    	; 0x3fe0 <main+0xd02>
    3ec4:	cb 56       	subi	r28, 0x6B	; 107
    3ec6:	df 4f       	sbci	r29, 0xFF	; 255
    3ec8:	e8 81       	ld	r30, Y
    3eca:	f9 81       	ldd	r31, Y+1	; 0x01
    3ecc:	c5 59       	subi	r28, 0x95	; 149
    3ece:	d0 40       	sbci	r29, 0x00	; 0
    3ed0:	90 81       	ld	r25, Z
    3ed2:	c9 56       	subi	r28, 0x69	; 105
    3ed4:	df 4f       	sbci	r29, 0xFF	; 255
    3ed6:	a8 81       	ld	r26, Y
    3ed8:	b9 81       	ldd	r27, Y+1	; 0x01
    3eda:	c7 59       	subi	r28, 0x97	; 151
    3edc:	d0 40       	sbci	r29, 0x00	; 0
    3ede:	8c 91       	ld	r24, X
    3ee0:	89 17       	cp	r24, r25
    3ee2:	08 f0       	brcs	.+2      	; 0x3ee6 <main+0xc08>
    3ee4:	7d c0       	rjmp	.+250    	; 0x3fe0 <main+0xd02>
			{
				HLCD_void_GOTO_POS(1, 1);
    3ee6:	81 e0       	ldi	r24, 0x01	; 1
    3ee8:	61 e0       	ldi	r22, 0x01	; 1
    3eea:	0e 94 51 13 	call	0x26a2	; 0x26a2 <HLCD_void_GOTO_POS>
				HLCD_void_DISPLAY_STRING("Left     ");
    3eee:	8c e7       	ldi	r24, 0x7C	; 124
    3ef0:	90 e0       	ldi	r25, 0x00	; 0
    3ef2:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
				Left();
    3ef6:	0e 94 c2 21 	call	0x4384	; 0x4384 <Left>
    3efa:	80 e0       	ldi	r24, 0x00	; 0
    3efc:	90 e8       	ldi	r25, 0x80	; 128
    3efe:	ab e3       	ldi	r26, 0x3B	; 59
    3f00:	b4 e4       	ldi	r27, 0x44	; 68
    3f02:	89 8f       	std	Y+25, r24	; 0x19
    3f04:	9a 8f       	std	Y+26, r25	; 0x1a
    3f06:	ab 8f       	std	Y+27, r26	; 0x1b
    3f08:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f0a:	69 8d       	ldd	r22, Y+25	; 0x19
    3f0c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f0e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f10:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f12:	20 e0       	ldi	r18, 0x00	; 0
    3f14:	30 e0       	ldi	r19, 0x00	; 0
    3f16:	4a ef       	ldi	r20, 0xFA	; 250
    3f18:	54 e4       	ldi	r21, 0x44	; 68
    3f1a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3f1e:	dc 01       	movw	r26, r24
    3f20:	cb 01       	movw	r24, r22
    3f22:	8d 8b       	std	Y+21, r24	; 0x15
    3f24:	9e 8b       	std	Y+22, r25	; 0x16
    3f26:	af 8b       	std	Y+23, r26	; 0x17
    3f28:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3f2a:	6d 89       	ldd	r22, Y+21	; 0x15
    3f2c:	7e 89       	ldd	r23, Y+22	; 0x16
    3f2e:	8f 89       	ldd	r24, Y+23	; 0x17
    3f30:	98 8d       	ldd	r25, Y+24	; 0x18
    3f32:	20 e0       	ldi	r18, 0x00	; 0
    3f34:	30 e0       	ldi	r19, 0x00	; 0
    3f36:	40 e8       	ldi	r20, 0x80	; 128
    3f38:	5f e3       	ldi	r21, 0x3F	; 63
    3f3a:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    3f3e:	88 23       	and	r24, r24
    3f40:	2c f4       	brge	.+10     	; 0x3f4c <main+0xc6e>
		__ticks = 1;
    3f42:	81 e0       	ldi	r24, 0x01	; 1
    3f44:	90 e0       	ldi	r25, 0x00	; 0
    3f46:	9c 8b       	std	Y+20, r25	; 0x14
    3f48:	8b 8b       	std	Y+19, r24	; 0x13
    3f4a:	3f c0       	rjmp	.+126    	; 0x3fca <main+0xcec>
	else if (__tmp > 65535)
    3f4c:	6d 89       	ldd	r22, Y+21	; 0x15
    3f4e:	7e 89       	ldd	r23, Y+22	; 0x16
    3f50:	8f 89       	ldd	r24, Y+23	; 0x17
    3f52:	98 8d       	ldd	r25, Y+24	; 0x18
    3f54:	20 e0       	ldi	r18, 0x00	; 0
    3f56:	3f ef       	ldi	r19, 0xFF	; 255
    3f58:	4f e7       	ldi	r20, 0x7F	; 127
    3f5a:	57 e4       	ldi	r21, 0x47	; 71
    3f5c:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    3f60:	18 16       	cp	r1, r24
    3f62:	4c f5       	brge	.+82     	; 0x3fb6 <main+0xcd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f64:	69 8d       	ldd	r22, Y+25	; 0x19
    3f66:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f6c:	20 e0       	ldi	r18, 0x00	; 0
    3f6e:	30 e0       	ldi	r19, 0x00	; 0
    3f70:	40 e2       	ldi	r20, 0x20	; 32
    3f72:	51 e4       	ldi	r21, 0x41	; 65
    3f74:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    3f78:	dc 01       	movw	r26, r24
    3f7a:	cb 01       	movw	r24, r22
    3f7c:	bc 01       	movw	r22, r24
    3f7e:	cd 01       	movw	r24, r26
    3f80:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3f84:	dc 01       	movw	r26, r24
    3f86:	cb 01       	movw	r24, r22
    3f88:	9c 8b       	std	Y+20, r25	; 0x14
    3f8a:	8b 8b       	std	Y+19, r24	; 0x13
    3f8c:	0f c0       	rjmp	.+30     	; 0x3fac <main+0xcce>
    3f8e:	88 ec       	ldi	r24, 0xC8	; 200
    3f90:	90 e0       	ldi	r25, 0x00	; 0
    3f92:	9a 8b       	std	Y+18, r25	; 0x12
    3f94:	89 8b       	std	Y+17, r24	; 0x11
    3f96:	89 89       	ldd	r24, Y+17	; 0x11
    3f98:	9a 89       	ldd	r25, Y+18	; 0x12
    3f9a:	01 97       	sbiw	r24, 0x01	; 1
    3f9c:	f1 f7       	brne	.-4      	; 0x3f9a <main+0xcbc>
    3f9e:	9a 8b       	std	Y+18, r25	; 0x12
    3fa0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fa2:	8b 89       	ldd	r24, Y+19	; 0x13
    3fa4:	9c 89       	ldd	r25, Y+20	; 0x14
    3fa6:	01 97       	sbiw	r24, 0x01	; 1
    3fa8:	9c 8b       	std	Y+20, r25	; 0x14
    3faa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fac:	8b 89       	ldd	r24, Y+19	; 0x13
    3fae:	9c 89       	ldd	r25, Y+20	; 0x14
    3fb0:	00 97       	sbiw	r24, 0x00	; 0
    3fb2:	69 f7       	brne	.-38     	; 0x3f8e <main+0xcb0>
    3fb4:	b9 c9       	rjmp	.-3214   	; 0x3328 <main+0x4a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fb6:	6d 89       	ldd	r22, Y+21	; 0x15
    3fb8:	7e 89       	ldd	r23, Y+22	; 0x16
    3fba:	8f 89       	ldd	r24, Y+23	; 0x17
    3fbc:	98 8d       	ldd	r25, Y+24	; 0x18
    3fbe:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    3fc2:	dc 01       	movw	r26, r24
    3fc4:	cb 01       	movw	r24, r22
    3fc6:	9c 8b       	std	Y+20, r25	; 0x14
    3fc8:	8b 8b       	std	Y+19, r24	; 0x13
    3fca:	8b 89       	ldd	r24, Y+19	; 0x13
    3fcc:	9c 89       	ldd	r25, Y+20	; 0x14
    3fce:	98 8b       	std	Y+16, r25	; 0x10
    3fd0:	8f 87       	std	Y+15, r24	; 0x0f
    3fd2:	8f 85       	ldd	r24, Y+15	; 0x0f
    3fd4:	98 89       	ldd	r25, Y+16	; 0x10
    3fd6:	01 97       	sbiw	r24, 0x01	; 1
    3fd8:	f1 f7       	brne	.-4      	; 0x3fd6 <main+0xcf8>
    3fda:	98 8b       	std	Y+16, r25	; 0x10
    3fdc:	8f 87       	std	Y+15, r24	; 0x0f
    3fde:	a4 c9       	rjmp	.-3256   	; 0x3328 <main+0x4a>
				_delay_ms(750);
			}
			else if(Left_Distance<Right_Distance)
    3fe0:	fe 01       	movw	r30, r28
    3fe2:	ef 58       	subi	r30, 0x8F	; 143
    3fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe6:	c7 56       	subi	r28, 0x67	; 103
    3fe8:	df 4f       	sbci	r29, 0xFF	; 255
    3fea:	f9 83       	std	Y+1, r31	; 0x01
    3fec:	e8 83       	st	Y, r30
    3fee:	c9 59       	subi	r28, 0x99	; 153
    3ff0:	d0 40       	sbci	r29, 0x00	; 0
    3ff2:	ce 01       	movw	r24, r28
    3ff4:	87 58       	subi	r24, 0x87	; 135
    3ff6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff8:	c5 56       	subi	r28, 0x65	; 101
    3ffa:	df 4f       	sbci	r29, 0xFF	; 255
    3ffc:	99 83       	std	Y+1, r25	; 0x01
    3ffe:	88 83       	st	Y, r24
    4000:	cb 59       	subi	r28, 0x9B	; 155
    4002:	d0 40       	sbci	r29, 0x00	; 0
    4004:	c7 56       	subi	r28, 0x67	; 103
    4006:	df 4f       	sbci	r29, 0xFF	; 255
    4008:	a8 81       	ld	r26, Y
    400a:	b9 81       	ldd	r27, Y+1	; 0x01
    400c:	c9 59       	subi	r28, 0x99	; 153
    400e:	d0 40       	sbci	r29, 0x00	; 0
    4010:	17 96       	adiw	r26, 0x07	; 7
    4012:	9c 91       	ld	r25, X
    4014:	17 97       	sbiw	r26, 0x07	; 7
    4016:	c5 56       	subi	r28, 0x65	; 101
    4018:	df 4f       	sbci	r29, 0xFF	; 255
    401a:	e8 81       	ld	r30, Y
    401c:	f9 81       	ldd	r31, Y+1	; 0x01
    401e:	cb 59       	subi	r28, 0x9B	; 155
    4020:	d0 40       	sbci	r29, 0x00	; 0
    4022:	87 81       	ldd	r24, Z+7	; 0x07
    4024:	89 17       	cp	r24, r25
    4026:	08 f4       	brcc	.+2      	; 0x402a <main+0xd4c>
    4028:	07 c1       	rjmp	.+526    	; 0x4238 <main+0xf5a>
    402a:	c7 56       	subi	r28, 0x67	; 103
    402c:	df 4f       	sbci	r29, 0xFF	; 255
    402e:	a8 81       	ld	r26, Y
    4030:	b9 81       	ldd	r27, Y+1	; 0x01
    4032:	c9 59       	subi	r28, 0x99	; 153
    4034:	d0 40       	sbci	r29, 0x00	; 0
    4036:	17 96       	adiw	r26, 0x07	; 7
    4038:	9c 91       	ld	r25, X
    403a:	17 97       	sbiw	r26, 0x07	; 7
    403c:	c5 56       	subi	r28, 0x65	; 101
    403e:	df 4f       	sbci	r29, 0xFF	; 255
    4040:	e8 81       	ld	r30, Y
    4042:	f9 81       	ldd	r31, Y+1	; 0x01
    4044:	cb 59       	subi	r28, 0x9B	; 155
    4046:	d0 40       	sbci	r29, 0x00	; 0
    4048:	87 81       	ldd	r24, Z+7	; 0x07
    404a:	98 17       	cp	r25, r24
    404c:	09 f0       	breq	.+2      	; 0x4050 <main+0xd72>
    404e:	6c c9       	rjmp	.-3368   	; 0x3328 <main+0x4a>
    4050:	c7 56       	subi	r28, 0x67	; 103
    4052:	df 4f       	sbci	r29, 0xFF	; 255
    4054:	a8 81       	ld	r26, Y
    4056:	b9 81       	ldd	r27, Y+1	; 0x01
    4058:	c9 59       	subi	r28, 0x99	; 153
    405a:	d0 40       	sbci	r29, 0x00	; 0
    405c:	16 96       	adiw	r26, 0x06	; 6
    405e:	9c 91       	ld	r25, X
    4060:	16 97       	sbiw	r26, 0x06	; 6
    4062:	c5 56       	subi	r28, 0x65	; 101
    4064:	df 4f       	sbci	r29, 0xFF	; 255
    4066:	e8 81       	ld	r30, Y
    4068:	f9 81       	ldd	r31, Y+1	; 0x01
    406a:	cb 59       	subi	r28, 0x9B	; 155
    406c:	d0 40       	sbci	r29, 0x00	; 0
    406e:	86 81       	ldd	r24, Z+6	; 0x06
    4070:	89 17       	cp	r24, r25
    4072:	08 f4       	brcc	.+2      	; 0x4076 <main+0xd98>
    4074:	e1 c0       	rjmp	.+450    	; 0x4238 <main+0xf5a>
    4076:	c7 56       	subi	r28, 0x67	; 103
    4078:	df 4f       	sbci	r29, 0xFF	; 255
    407a:	a8 81       	ld	r26, Y
    407c:	b9 81       	ldd	r27, Y+1	; 0x01
    407e:	c9 59       	subi	r28, 0x99	; 153
    4080:	d0 40       	sbci	r29, 0x00	; 0
    4082:	16 96       	adiw	r26, 0x06	; 6
    4084:	9c 91       	ld	r25, X
    4086:	16 97       	sbiw	r26, 0x06	; 6
    4088:	c5 56       	subi	r28, 0x65	; 101
    408a:	df 4f       	sbci	r29, 0xFF	; 255
    408c:	e8 81       	ld	r30, Y
    408e:	f9 81       	ldd	r31, Y+1	; 0x01
    4090:	cb 59       	subi	r28, 0x9B	; 155
    4092:	d0 40       	sbci	r29, 0x00	; 0
    4094:	86 81       	ldd	r24, Z+6	; 0x06
    4096:	98 17       	cp	r25, r24
    4098:	09 f0       	breq	.+2      	; 0x409c <main+0xdbe>
    409a:	46 c9       	rjmp	.-3444   	; 0x3328 <main+0x4a>
    409c:	c7 56       	subi	r28, 0x67	; 103
    409e:	df 4f       	sbci	r29, 0xFF	; 255
    40a0:	a8 81       	ld	r26, Y
    40a2:	b9 81       	ldd	r27, Y+1	; 0x01
    40a4:	c9 59       	subi	r28, 0x99	; 153
    40a6:	d0 40       	sbci	r29, 0x00	; 0
    40a8:	15 96       	adiw	r26, 0x05	; 5
    40aa:	9c 91       	ld	r25, X
    40ac:	15 97       	sbiw	r26, 0x05	; 5
    40ae:	c5 56       	subi	r28, 0x65	; 101
    40b0:	df 4f       	sbci	r29, 0xFF	; 255
    40b2:	e8 81       	ld	r30, Y
    40b4:	f9 81       	ldd	r31, Y+1	; 0x01
    40b6:	cb 59       	subi	r28, 0x9B	; 155
    40b8:	d0 40       	sbci	r29, 0x00	; 0
    40ba:	85 81       	ldd	r24, Z+5	; 0x05
    40bc:	89 17       	cp	r24, r25
    40be:	08 f4       	brcc	.+2      	; 0x40c2 <main+0xde4>
    40c0:	bb c0       	rjmp	.+374    	; 0x4238 <main+0xf5a>
    40c2:	c7 56       	subi	r28, 0x67	; 103
    40c4:	df 4f       	sbci	r29, 0xFF	; 255
    40c6:	a8 81       	ld	r26, Y
    40c8:	b9 81       	ldd	r27, Y+1	; 0x01
    40ca:	c9 59       	subi	r28, 0x99	; 153
    40cc:	d0 40       	sbci	r29, 0x00	; 0
    40ce:	15 96       	adiw	r26, 0x05	; 5
    40d0:	9c 91       	ld	r25, X
    40d2:	15 97       	sbiw	r26, 0x05	; 5
    40d4:	c5 56       	subi	r28, 0x65	; 101
    40d6:	df 4f       	sbci	r29, 0xFF	; 255
    40d8:	e8 81       	ld	r30, Y
    40da:	f9 81       	ldd	r31, Y+1	; 0x01
    40dc:	cb 59       	subi	r28, 0x9B	; 155
    40de:	d0 40       	sbci	r29, 0x00	; 0
    40e0:	85 81       	ldd	r24, Z+5	; 0x05
    40e2:	98 17       	cp	r25, r24
    40e4:	09 f0       	breq	.+2      	; 0x40e8 <main+0xe0a>
    40e6:	20 c9       	rjmp	.-3520   	; 0x3328 <main+0x4a>
    40e8:	c7 56       	subi	r28, 0x67	; 103
    40ea:	df 4f       	sbci	r29, 0xFF	; 255
    40ec:	a8 81       	ld	r26, Y
    40ee:	b9 81       	ldd	r27, Y+1	; 0x01
    40f0:	c9 59       	subi	r28, 0x99	; 153
    40f2:	d0 40       	sbci	r29, 0x00	; 0
    40f4:	14 96       	adiw	r26, 0x04	; 4
    40f6:	9c 91       	ld	r25, X
    40f8:	14 97       	sbiw	r26, 0x04	; 4
    40fa:	c5 56       	subi	r28, 0x65	; 101
    40fc:	df 4f       	sbci	r29, 0xFF	; 255
    40fe:	e8 81       	ld	r30, Y
    4100:	f9 81       	ldd	r31, Y+1	; 0x01
    4102:	cb 59       	subi	r28, 0x9B	; 155
    4104:	d0 40       	sbci	r29, 0x00	; 0
    4106:	84 81       	ldd	r24, Z+4	; 0x04
    4108:	89 17       	cp	r24, r25
    410a:	08 f4       	brcc	.+2      	; 0x410e <main+0xe30>
    410c:	95 c0       	rjmp	.+298    	; 0x4238 <main+0xf5a>
    410e:	c7 56       	subi	r28, 0x67	; 103
    4110:	df 4f       	sbci	r29, 0xFF	; 255
    4112:	a8 81       	ld	r26, Y
    4114:	b9 81       	ldd	r27, Y+1	; 0x01
    4116:	c9 59       	subi	r28, 0x99	; 153
    4118:	d0 40       	sbci	r29, 0x00	; 0
    411a:	14 96       	adiw	r26, 0x04	; 4
    411c:	9c 91       	ld	r25, X
    411e:	14 97       	sbiw	r26, 0x04	; 4
    4120:	c5 56       	subi	r28, 0x65	; 101
    4122:	df 4f       	sbci	r29, 0xFF	; 255
    4124:	e8 81       	ld	r30, Y
    4126:	f9 81       	ldd	r31, Y+1	; 0x01
    4128:	cb 59       	subi	r28, 0x9B	; 155
    412a:	d0 40       	sbci	r29, 0x00	; 0
    412c:	84 81       	ldd	r24, Z+4	; 0x04
    412e:	98 17       	cp	r25, r24
    4130:	09 f0       	breq	.+2      	; 0x4134 <main+0xe56>
    4132:	fa c8       	rjmp	.-3596   	; 0x3328 <main+0x4a>
    4134:	c7 56       	subi	r28, 0x67	; 103
    4136:	df 4f       	sbci	r29, 0xFF	; 255
    4138:	a8 81       	ld	r26, Y
    413a:	b9 81       	ldd	r27, Y+1	; 0x01
    413c:	c9 59       	subi	r28, 0x99	; 153
    413e:	d0 40       	sbci	r29, 0x00	; 0
    4140:	13 96       	adiw	r26, 0x03	; 3
    4142:	9c 91       	ld	r25, X
    4144:	13 97       	sbiw	r26, 0x03	; 3
    4146:	c5 56       	subi	r28, 0x65	; 101
    4148:	df 4f       	sbci	r29, 0xFF	; 255
    414a:	e8 81       	ld	r30, Y
    414c:	f9 81       	ldd	r31, Y+1	; 0x01
    414e:	cb 59       	subi	r28, 0x9B	; 155
    4150:	d0 40       	sbci	r29, 0x00	; 0
    4152:	83 81       	ldd	r24, Z+3	; 0x03
    4154:	89 17       	cp	r24, r25
    4156:	08 f4       	brcc	.+2      	; 0x415a <main+0xe7c>
    4158:	6f c0       	rjmp	.+222    	; 0x4238 <main+0xf5a>
    415a:	c7 56       	subi	r28, 0x67	; 103
    415c:	df 4f       	sbci	r29, 0xFF	; 255
    415e:	a8 81       	ld	r26, Y
    4160:	b9 81       	ldd	r27, Y+1	; 0x01
    4162:	c9 59       	subi	r28, 0x99	; 153
    4164:	d0 40       	sbci	r29, 0x00	; 0
    4166:	13 96       	adiw	r26, 0x03	; 3
    4168:	9c 91       	ld	r25, X
    416a:	13 97       	sbiw	r26, 0x03	; 3
    416c:	c5 56       	subi	r28, 0x65	; 101
    416e:	df 4f       	sbci	r29, 0xFF	; 255
    4170:	e8 81       	ld	r30, Y
    4172:	f9 81       	ldd	r31, Y+1	; 0x01
    4174:	cb 59       	subi	r28, 0x9B	; 155
    4176:	d0 40       	sbci	r29, 0x00	; 0
    4178:	83 81       	ldd	r24, Z+3	; 0x03
    417a:	98 17       	cp	r25, r24
    417c:	09 f0       	breq	.+2      	; 0x4180 <main+0xea2>
    417e:	d4 c8       	rjmp	.-3672   	; 0x3328 <main+0x4a>
    4180:	c7 56       	subi	r28, 0x67	; 103
    4182:	df 4f       	sbci	r29, 0xFF	; 255
    4184:	a8 81       	ld	r26, Y
    4186:	b9 81       	ldd	r27, Y+1	; 0x01
    4188:	c9 59       	subi	r28, 0x99	; 153
    418a:	d0 40       	sbci	r29, 0x00	; 0
    418c:	12 96       	adiw	r26, 0x02	; 2
    418e:	9c 91       	ld	r25, X
    4190:	12 97       	sbiw	r26, 0x02	; 2
    4192:	c5 56       	subi	r28, 0x65	; 101
    4194:	df 4f       	sbci	r29, 0xFF	; 255
    4196:	e8 81       	ld	r30, Y
    4198:	f9 81       	ldd	r31, Y+1	; 0x01
    419a:	cb 59       	subi	r28, 0x9B	; 155
    419c:	d0 40       	sbci	r29, 0x00	; 0
    419e:	82 81       	ldd	r24, Z+2	; 0x02
    41a0:	89 17       	cp	r24, r25
    41a2:	08 f4       	brcc	.+2      	; 0x41a6 <main+0xec8>
    41a4:	49 c0       	rjmp	.+146    	; 0x4238 <main+0xf5a>
    41a6:	c7 56       	subi	r28, 0x67	; 103
    41a8:	df 4f       	sbci	r29, 0xFF	; 255
    41aa:	a8 81       	ld	r26, Y
    41ac:	b9 81       	ldd	r27, Y+1	; 0x01
    41ae:	c9 59       	subi	r28, 0x99	; 153
    41b0:	d0 40       	sbci	r29, 0x00	; 0
    41b2:	12 96       	adiw	r26, 0x02	; 2
    41b4:	9c 91       	ld	r25, X
    41b6:	12 97       	sbiw	r26, 0x02	; 2
    41b8:	c5 56       	subi	r28, 0x65	; 101
    41ba:	df 4f       	sbci	r29, 0xFF	; 255
    41bc:	e8 81       	ld	r30, Y
    41be:	f9 81       	ldd	r31, Y+1	; 0x01
    41c0:	cb 59       	subi	r28, 0x9B	; 155
    41c2:	d0 40       	sbci	r29, 0x00	; 0
    41c4:	82 81       	ldd	r24, Z+2	; 0x02
    41c6:	98 17       	cp	r25, r24
    41c8:	09 f0       	breq	.+2      	; 0x41cc <main+0xeee>
    41ca:	ae c8       	rjmp	.-3748   	; 0x3328 <main+0x4a>
    41cc:	c7 56       	subi	r28, 0x67	; 103
    41ce:	df 4f       	sbci	r29, 0xFF	; 255
    41d0:	a8 81       	ld	r26, Y
    41d2:	b9 81       	ldd	r27, Y+1	; 0x01
    41d4:	c9 59       	subi	r28, 0x99	; 153
    41d6:	d0 40       	sbci	r29, 0x00	; 0
    41d8:	11 96       	adiw	r26, 0x01	; 1
    41da:	9c 91       	ld	r25, X
    41dc:	11 97       	sbiw	r26, 0x01	; 1
    41de:	c5 56       	subi	r28, 0x65	; 101
    41e0:	df 4f       	sbci	r29, 0xFF	; 255
    41e2:	e8 81       	ld	r30, Y
    41e4:	f9 81       	ldd	r31, Y+1	; 0x01
    41e6:	cb 59       	subi	r28, 0x9B	; 155
    41e8:	d0 40       	sbci	r29, 0x00	; 0
    41ea:	81 81       	ldd	r24, Z+1	; 0x01
    41ec:	89 17       	cp	r24, r25
    41ee:	20 f1       	brcs	.+72     	; 0x4238 <main+0xf5a>
    41f0:	c7 56       	subi	r28, 0x67	; 103
    41f2:	df 4f       	sbci	r29, 0xFF	; 255
    41f4:	a8 81       	ld	r26, Y
    41f6:	b9 81       	ldd	r27, Y+1	; 0x01
    41f8:	c9 59       	subi	r28, 0x99	; 153
    41fa:	d0 40       	sbci	r29, 0x00	; 0
    41fc:	11 96       	adiw	r26, 0x01	; 1
    41fe:	9c 91       	ld	r25, X
    4200:	11 97       	sbiw	r26, 0x01	; 1
    4202:	c5 56       	subi	r28, 0x65	; 101
    4204:	df 4f       	sbci	r29, 0xFF	; 255
    4206:	e8 81       	ld	r30, Y
    4208:	f9 81       	ldd	r31, Y+1	; 0x01
    420a:	cb 59       	subi	r28, 0x9B	; 155
    420c:	d0 40       	sbci	r29, 0x00	; 0
    420e:	81 81       	ldd	r24, Z+1	; 0x01
    4210:	98 17       	cp	r25, r24
    4212:	09 f0       	breq	.+2      	; 0x4216 <main+0xf38>
    4214:	89 c8       	rjmp	.-3822   	; 0x3328 <main+0x4a>
    4216:	c7 56       	subi	r28, 0x67	; 103
    4218:	df 4f       	sbci	r29, 0xFF	; 255
    421a:	a8 81       	ld	r26, Y
    421c:	b9 81       	ldd	r27, Y+1	; 0x01
    421e:	c9 59       	subi	r28, 0x99	; 153
    4220:	d0 40       	sbci	r29, 0x00	; 0
    4222:	9c 91       	ld	r25, X
    4224:	c5 56       	subi	r28, 0x65	; 101
    4226:	df 4f       	sbci	r29, 0xFF	; 255
    4228:	e8 81       	ld	r30, Y
    422a:	f9 81       	ldd	r31, Y+1	; 0x01
    422c:	cb 59       	subi	r28, 0x9B	; 155
    422e:	d0 40       	sbci	r29, 0x00	; 0
    4230:	80 81       	ld	r24, Z
    4232:	89 17       	cp	r24, r25
    4234:	08 f0       	brcs	.+2      	; 0x4238 <main+0xf5a>
    4236:	78 c8       	rjmp	.-3856   	; 0x3328 <main+0x4a>
			{
				HLCD_void_GOTO_POS(1, 1);
    4238:	81 e0       	ldi	r24, 0x01	; 1
    423a:	61 e0       	ldi	r22, 0x01	; 1
    423c:	0e 94 51 13 	call	0x26a2	; 0x26a2 <HLCD_void_GOTO_POS>
				HLCD_void_DISPLAY_STRING("Right     ");
    4240:	86 e8       	ldi	r24, 0x86	; 134
    4242:	90 e0       	ldi	r25, 0x00	; 0
    4244:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
				Right();
    4248:	0e 94 dd 21 	call	0x43ba	; 0x43ba <Right>
    424c:	80 e0       	ldi	r24, 0x00	; 0
    424e:	90 e8       	ldi	r25, 0x80	; 128
    4250:	ab e3       	ldi	r26, 0x3B	; 59
    4252:	b4 e4       	ldi	r27, 0x44	; 68
    4254:	8b 87       	std	Y+11, r24	; 0x0b
    4256:	9c 87       	std	Y+12, r25	; 0x0c
    4258:	ad 87       	std	Y+13, r26	; 0x0d
    425a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    425c:	6b 85       	ldd	r22, Y+11	; 0x0b
    425e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4260:	8d 85       	ldd	r24, Y+13	; 0x0d
    4262:	9e 85       	ldd	r25, Y+14	; 0x0e
    4264:	20 e0       	ldi	r18, 0x00	; 0
    4266:	30 e0       	ldi	r19, 0x00	; 0
    4268:	4a ef       	ldi	r20, 0xFA	; 250
    426a:	54 e4       	ldi	r21, 0x44	; 68
    426c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    4270:	dc 01       	movw	r26, r24
    4272:	cb 01       	movw	r24, r22
    4274:	8f 83       	std	Y+7, r24	; 0x07
    4276:	98 87       	std	Y+8, r25	; 0x08
    4278:	a9 87       	std	Y+9, r26	; 0x09
    427a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    427c:	6f 81       	ldd	r22, Y+7	; 0x07
    427e:	78 85       	ldd	r23, Y+8	; 0x08
    4280:	89 85       	ldd	r24, Y+9	; 0x09
    4282:	9a 85       	ldd	r25, Y+10	; 0x0a
    4284:	20 e0       	ldi	r18, 0x00	; 0
    4286:	30 e0       	ldi	r19, 0x00	; 0
    4288:	40 e8       	ldi	r20, 0x80	; 128
    428a:	5f e3       	ldi	r21, 0x3F	; 63
    428c:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    4290:	88 23       	and	r24, r24
    4292:	2c f4       	brge	.+10     	; 0x429e <main+0xfc0>
		__ticks = 1;
    4294:	81 e0       	ldi	r24, 0x01	; 1
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	9e 83       	std	Y+6, r25	; 0x06
    429a:	8d 83       	std	Y+5, r24	; 0x05
    429c:	40 c0       	rjmp	.+128    	; 0x431e <main+0x1040>
	else if (__tmp > 65535)
    429e:	6f 81       	ldd	r22, Y+7	; 0x07
    42a0:	78 85       	ldd	r23, Y+8	; 0x08
    42a2:	89 85       	ldd	r24, Y+9	; 0x09
    42a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    42a6:	20 e0       	ldi	r18, 0x00	; 0
    42a8:	3f ef       	ldi	r19, 0xFF	; 255
    42aa:	4f e7       	ldi	r20, 0x7F	; 127
    42ac:	57 e4       	ldi	r21, 0x47	; 71
    42ae:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    42b2:	18 16       	cp	r1, r24
    42b4:	54 f5       	brge	.+84     	; 0x430a <main+0x102c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42b6:	6b 85       	ldd	r22, Y+11	; 0x0b
    42b8:	7c 85       	ldd	r23, Y+12	; 0x0c
    42ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    42bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    42be:	20 e0       	ldi	r18, 0x00	; 0
    42c0:	30 e0       	ldi	r19, 0x00	; 0
    42c2:	40 e2       	ldi	r20, 0x20	; 32
    42c4:	51 e4       	ldi	r21, 0x41	; 65
    42c6:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    42ca:	dc 01       	movw	r26, r24
    42cc:	cb 01       	movw	r24, r22
    42ce:	bc 01       	movw	r22, r24
    42d0:	cd 01       	movw	r24, r26
    42d2:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    42d6:	dc 01       	movw	r26, r24
    42d8:	cb 01       	movw	r24, r22
    42da:	9e 83       	std	Y+6, r25	; 0x06
    42dc:	8d 83       	std	Y+5, r24	; 0x05
    42de:	0f c0       	rjmp	.+30     	; 0x42fe <main+0x1020>
    42e0:	88 ec       	ldi	r24, 0xC8	; 200
    42e2:	90 e0       	ldi	r25, 0x00	; 0
    42e4:	9c 83       	std	Y+4, r25	; 0x04
    42e6:	8b 83       	std	Y+3, r24	; 0x03
    42e8:	8b 81       	ldd	r24, Y+3	; 0x03
    42ea:	9c 81       	ldd	r25, Y+4	; 0x04
    42ec:	01 97       	sbiw	r24, 0x01	; 1
    42ee:	f1 f7       	brne	.-4      	; 0x42ec <main+0x100e>
    42f0:	9c 83       	std	Y+4, r25	; 0x04
    42f2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42f4:	8d 81       	ldd	r24, Y+5	; 0x05
    42f6:	9e 81       	ldd	r25, Y+6	; 0x06
    42f8:	01 97       	sbiw	r24, 0x01	; 1
    42fa:	9e 83       	std	Y+6, r25	; 0x06
    42fc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4300:	9e 81       	ldd	r25, Y+6	; 0x06
    4302:	00 97       	sbiw	r24, 0x00	; 0
    4304:	69 f7       	brne	.-38     	; 0x42e0 <main+0x1002>
    4306:	0c 94 94 19 	jmp	0x3328	; 0x3328 <main+0x4a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    430a:	6f 81       	ldd	r22, Y+7	; 0x07
    430c:	78 85       	ldd	r23, Y+8	; 0x08
    430e:	89 85       	ldd	r24, Y+9	; 0x09
    4310:	9a 85       	ldd	r25, Y+10	; 0x0a
    4312:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    4316:	dc 01       	movw	r26, r24
    4318:	cb 01       	movw	r24, r22
    431a:	9e 83       	std	Y+6, r25	; 0x06
    431c:	8d 83       	std	Y+5, r24	; 0x05
    431e:	8d 81       	ldd	r24, Y+5	; 0x05
    4320:	9e 81       	ldd	r25, Y+6	; 0x06
    4322:	9a 83       	std	Y+2, r25	; 0x02
    4324:	89 83       	std	Y+1, r24	; 0x01
    4326:	89 81       	ldd	r24, Y+1	; 0x01
    4328:	9a 81       	ldd	r25, Y+2	; 0x02
    432a:	01 97       	sbiw	r24, 0x01	; 1
    432c:	f1 f7       	brne	.-4      	; 0x432a <main+0x104c>
    432e:	9a 83       	std	Y+2, r25	; 0x02
    4330:	89 83       	std	Y+1, r24	; 0x01
    4332:	0c 94 94 19 	jmp	0x3328	; 0x3328 <main+0x4a>
				_delay_ms(750);
			}
		}
		else
		{
			HLCD_void_GOTO_POS(1, 1);
    4336:	81 e0       	ldi	r24, 0x01	; 1
    4338:	61 e0       	ldi	r22, 0x01	; 1
    433a:	0e 94 51 13 	call	0x26a2	; 0x26a2 <HLCD_void_GOTO_POS>
			HLCD_void_DISPLAY_STRING("Forward    ");
    433e:	81 e9       	ldi	r24, 0x91	; 145
    4340:	90 e0       	ldi	r25, 0x00	; 0
    4342:	0e 94 08 13 	call	0x2610	; 0x2610 <HLCD_void_DISPLAY_STRING>
			Forward();
    4346:	0e 94 a7 21 	call	0x434e	; 0x434e <Forward>
    434a:	0c 94 94 19 	jmp	0x3328	; 0x3328 <main+0x4a>

0000434e <Forward>:
/*** Date: Mar 23, 2024          ************/
/********************************************/

#include "../include/HAL/motor/Hmotor_interface.h"
#include "../include/MCAL/DIO/DIO_Interface.h"
void Forward(void) {
    434e:	df 93       	push	r29
    4350:	cf 93       	push	r28
    4352:	cd b7       	in	r28, 0x3d	; 61
    4354:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinValue(DIO_PORTB, PIN0, DIO_SET);
    4356:	81 e0       	ldi	r24, 0x01	; 1
    4358:	60 e0       	ldi	r22, 0x00	; 0
    435a:	41 e0       	ldi	r20, 0x01	; 1
    435c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN1, DIO_RESET);
    4360:	81 e0       	ldi	r24, 0x01	; 1
    4362:	61 e0       	ldi	r22, 0x01	; 1
    4364:	40 e0       	ldi	r20, 0x00	; 0
    4366:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN2, DIO_SET);
    436a:	81 e0       	ldi	r24, 0x01	; 1
    436c:	62 e0       	ldi	r22, 0x02	; 2
    436e:	41 e0       	ldi	r20, 0x01	; 1
    4370:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN3, DIO_RESET);
    4374:	81 e0       	ldi	r24, 0x01	; 1
    4376:	63 e0       	ldi	r22, 0x03	; 3
    4378:	40 e0       	ldi	r20, 0x00	; 0
    437a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    437e:	cf 91       	pop	r28
    4380:	df 91       	pop	r29
    4382:	08 95       	ret

00004384 <Left>:
void Left(void) {
    4384:	df 93       	push	r29
    4386:	cf 93       	push	r28
    4388:	cd b7       	in	r28, 0x3d	; 61
    438a:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinValue(DIO_PORTB, PIN0, DIO_SET);
    438c:	81 e0       	ldi	r24, 0x01	; 1
    438e:	60 e0       	ldi	r22, 0x00	; 0
    4390:	41 e0       	ldi	r20, 0x01	; 1
    4392:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN1, DIO_RESET);
    4396:	81 e0       	ldi	r24, 0x01	; 1
    4398:	61 e0       	ldi	r22, 0x01	; 1
    439a:	40 e0       	ldi	r20, 0x00	; 0
    439c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN2, DIO_RESET);
    43a0:	81 e0       	ldi	r24, 0x01	; 1
    43a2:	62 e0       	ldi	r22, 0x02	; 2
    43a4:	40 e0       	ldi	r20, 0x00	; 0
    43a6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN3, DIO_RESET);
    43aa:	81 e0       	ldi	r24, 0x01	; 1
    43ac:	63 e0       	ldi	r22, 0x03	; 3
    43ae:	40 e0       	ldi	r20, 0x00	; 0
    43b0:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    43b4:	cf 91       	pop	r28
    43b6:	df 91       	pop	r29
    43b8:	08 95       	ret

000043ba <Right>:
void Right(void) {
    43ba:	df 93       	push	r29
    43bc:	cf 93       	push	r28
    43be:	cd b7       	in	r28, 0x3d	; 61
    43c0:	de b7       	in	r29, 0x3e	; 62

	MDIO_voidSetPinValue(DIO_PORTB, PIN0, DIO_RESET);
    43c2:	81 e0       	ldi	r24, 0x01	; 1
    43c4:	60 e0       	ldi	r22, 0x00	; 0
    43c6:	40 e0       	ldi	r20, 0x00	; 0
    43c8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN1, DIO_RESET);
    43cc:	81 e0       	ldi	r24, 0x01	; 1
    43ce:	61 e0       	ldi	r22, 0x01	; 1
    43d0:	40 e0       	ldi	r20, 0x00	; 0
    43d2:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN2, DIO_SET);
    43d6:	81 e0       	ldi	r24, 0x01	; 1
    43d8:	62 e0       	ldi	r22, 0x02	; 2
    43da:	41 e0       	ldi	r20, 0x01	; 1
    43dc:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN3, DIO_RESET);
    43e0:	81 e0       	ldi	r24, 0x01	; 1
    43e2:	63 e0       	ldi	r22, 0x03	; 3
    43e4:	40 e0       	ldi	r20, 0x00	; 0
    43e6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    43ea:	cf 91       	pop	r28
    43ec:	df 91       	pop	r29
    43ee:	08 95       	ret

000043f0 <stop>:
void stop(void) {
    43f0:	df 93       	push	r29
    43f2:	cf 93       	push	r28
    43f4:	cd b7       	in	r28, 0x3d	; 61
    43f6:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinValue(DIO_PORTB, PIN0, DIO_RESET);
    43f8:	81 e0       	ldi	r24, 0x01	; 1
    43fa:	60 e0       	ldi	r22, 0x00	; 0
    43fc:	40 e0       	ldi	r20, 0x00	; 0
    43fe:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN1, DIO_RESET);
    4402:	81 e0       	ldi	r24, 0x01	; 1
    4404:	61 e0       	ldi	r22, 0x01	; 1
    4406:	40 e0       	ldi	r20, 0x00	; 0
    4408:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN2, DIO_RESET);
    440c:	81 e0       	ldi	r24, 0x01	; 1
    440e:	62 e0       	ldi	r22, 0x02	; 2
    4410:	40 e0       	ldi	r20, 0x00	; 0
    4412:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN3, DIO_RESET);
    4416:	81 e0       	ldi	r24, 0x01	; 1
    4418:	63 e0       	ldi	r22, 0x03	; 3
    441a:	40 e0       	ldi	r20, 0x00	; 0
    441c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    4420:	cf 91       	pop	r28
    4422:	df 91       	pop	r29
    4424:	08 95       	ret

00004426 <Backward>:
void Backward(void) {
    4426:	df 93       	push	r29
    4428:	cf 93       	push	r28
    442a:	cd b7       	in	r28, 0x3d	; 61
    442c:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPinValue(DIO_PORTB, PIN0, DIO_RESET);
    442e:	81 e0       	ldi	r24, 0x01	; 1
    4430:	60 e0       	ldi	r22, 0x00	; 0
    4432:	40 e0       	ldi	r20, 0x00	; 0
    4434:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN1, DIO_SET);
    4438:	81 e0       	ldi	r24, 0x01	; 1
    443a:	61 e0       	ldi	r22, 0x01	; 1
    443c:	41 e0       	ldi	r20, 0x01	; 1
    443e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN2, DIO_RESET);
    4442:	81 e0       	ldi	r24, 0x01	; 1
    4444:	62 e0       	ldi	r22, 0x02	; 2
    4446:	40 e0       	ldi	r20, 0x00	; 0
    4448:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(DIO_PORTB, PIN3, DIO_SET);
    444c:	81 e0       	ldi	r24, 0x01	; 1
    444e:	63 e0       	ldi	r22, 0x03	; 3
    4450:	41 e0       	ldi	r20, 0x01	; 1
    4452:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
}
    4456:	cf 91       	pop	r28
    4458:	df 91       	pop	r29
    445a:	08 95       	ret

0000445c <HSERVO_angel>:
#include "../Include/MCAL/DIO/DIO_Interface.h"
#include "../include/MCAL/Timer/TIMER_interface.h"


void HSERVO_angel(u16 A_angel)
{
    445c:	df 93       	push	r29
    445e:	cf 93       	push	r28
    4460:	00 d0       	rcall	.+0      	; 0x4462 <HSERVO_angel+0x6>
    4462:	cd b7       	in	r28, 0x3d	; 61
    4464:	de b7       	in	r29, 0x3e	; 62
    4466:	9a 83       	std	Y+2, r25	; 0x02
    4468:	89 83       	std	Y+1, r24	; 0x01

	if(A_angel==0)
    446a:	89 81       	ldd	r24, Y+1	; 0x01
    446c:	9a 81       	ldd	r25, Y+2	; 0x02
    446e:	00 97       	sbiw	r24, 0x00	; 0
    4470:	29 f4       	brne	.+10     	; 0x447c <HSERVO_angel+0x20>
	{
		MTIMER1_SetOCR1B(500);
    4472:	84 ef       	ldi	r24, 0xF4	; 244
    4474:	91 e0       	ldi	r25, 0x01	; 1
    4476:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <MTIMER1_SetOCR1B>
    447a:	18 c0       	rjmp	.+48     	; 0x44ac <HSERVO_angel+0x50>
	}
	else if(A_angel==90)
    447c:	89 81       	ldd	r24, Y+1	; 0x01
    447e:	9a 81       	ldd	r25, Y+2	; 0x02
    4480:	8a 35       	cpi	r24, 0x5A	; 90
    4482:	91 05       	cpc	r25, r1
    4484:	29 f4       	brne	.+10     	; 0x4490 <HSERVO_angel+0x34>
	{
		MTIMER1_SetOCR1B(1450);
    4486:	8a ea       	ldi	r24, 0xAA	; 170
    4488:	95 e0       	ldi	r25, 0x05	; 5
    448a:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <MTIMER1_SetOCR1B>
    448e:	0e c0       	rjmp	.+28     	; 0x44ac <HSERVO_angel+0x50>
	}
	else if(A_angel==180)
    4490:	89 81       	ldd	r24, Y+1	; 0x01
    4492:	9a 81       	ldd	r25, Y+2	; 0x02
    4494:	84 3b       	cpi	r24, 0xB4	; 180
    4496:	91 05       	cpc	r25, r1
    4498:	29 f4       	brne	.+10     	; 0x44a4 <HSERVO_angel+0x48>
	{
		MTIMER1_SetOCR1B(2450);
    449a:	82 e9       	ldi	r24, 0x92	; 146
    449c:	99 e0       	ldi	r25, 0x09	; 9
    449e:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <MTIMER1_SetOCR1B>
    44a2:	04 c0       	rjmp	.+8      	; 0x44ac <HSERVO_angel+0x50>
	}
	else
	{
		MTIMER1_SetOCR1B(0);
    44a4:	80 e0       	ldi	r24, 0x00	; 0
    44a6:	90 e0       	ldi	r25, 0x00	; 0
    44a8:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <MTIMER1_SetOCR1B>
	}
}
    44ac:	0f 90       	pop	r0
    44ae:	0f 90       	pop	r0
    44b0:	cf 91       	pop	r28
    44b2:	df 91       	pop	r29
    44b4:	08 95       	ret

000044b6 <HULTRASONIC_init>:

static u8 Global_Flag,Global_OVF_Counts;
static u16 	Global_T1	,	Global_T2  ,Global_Ticks;
static u64 Global_Distance;
void HULTRASONIC_init()
{
    44b6:	df 93       	push	r29
    44b8:	cf 93       	push	r28
    44ba:	cd b7       	in	r28, 0x3d	; 61
    44bc:	de b7       	in	r29, 0x3e	; 62
	MTimer1_Init(TIMER1_PWM_FAST_MODE_OCR1A,OCRA1_DISCONNECTED,OCRB1_NON_INVERTING);
    44be:	8f e0       	ldi	r24, 0x0F	; 15
    44c0:	60 e0       	ldi	r22, 0x00	; 0
    44c2:	40 e2       	ldi	r20, 0x20	; 32
    44c4:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <MTimer1_Init>
	MTIMER1_SetOCR1A(19999);
    44c8:	8f e1       	ldi	r24, 0x1F	; 31
    44ca:	9e e4       	ldi	r25, 0x4E	; 78
    44cc:	0e 94 66 17 	call	0x2ecc	; 0x2ecc <MTIMER1_SetOCR1A>
	MTimer1_SetCallBack_ICU(ISR_ICU);
    44d0:	81 ef       	ldi	r24, 0xF1	; 241
    44d2:	94 e2       	ldi	r25, 0x24	; 36
    44d4:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <MTimer1_SetCallBack_ICU>
	MTimer1_SetCallBack_OVF(ISR_OVF);
    44d8:	8d e1       	ldi	r24, 0x1D	; 29
    44da:	95 e2       	ldi	r25, 0x25	; 37
    44dc:	0e 94 9b 16 	call	0x2d36	; 0x2d36 <MTimer1_SetCallBack_OVF>
	MTIMER1_OVF_Interrupt_Enable();
    44e0:	0e 94 cd 17 	call	0x2f9a	; 0x2f9a <MTIMER1_OVF_Interrupt_Enable>
	MTimer1_Start(PRESCALER_8);
    44e4:	82 e0       	ldi	r24, 0x02	; 2
    44e6:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <MTimer1_Start>

}
    44ea:	cf 91       	pop	r28
    44ec:	df 91       	pop	r29
    44ee:	08 95       	ret

000044f0 <HULTRASONIC_GET_Distance>:
u64 HULTRASONIC_GET_Distance()
{
    44f0:	af 92       	push	r10
    44f2:	bf 92       	push	r11
    44f4:	cf 92       	push	r12
    44f6:	df 92       	push	r13
    44f8:	ef 92       	push	r14
    44fa:	ff 92       	push	r15
    44fc:	0f 93       	push	r16
    44fe:	1f 93       	push	r17
    4500:	df 93       	push	r29
    4502:	cf 93       	push	r28
    4504:	cd b7       	in	r28, 0x3d	; 61
    4506:	de b7       	in	r29, 0x3e	; 62
    4508:	c5 54       	subi	r28, 0x45	; 69
    450a:	d0 40       	sbci	r29, 0x00	; 0
    450c:	0f b6       	in	r0, 0x3f	; 63
    450e:	f8 94       	cli
    4510:	de bf       	out	0x3e, r29	; 62
    4512:	0f be       	out	0x3f, r0	; 63
    4514:	cd bf       	out	0x3d, r28	; 61
		Global_Distance=0;
    4516:	10 92 ca 01 	sts	0x01CA, r1
    451a:	10 92 cb 01 	sts	0x01CB, r1
    451e:	10 92 cc 01 	sts	0x01CC, r1
    4522:	10 92 cd 01 	sts	0x01CD, r1
    4526:	10 92 ce 01 	sts	0x01CE, r1
    452a:	10 92 cf 01 	sts	0x01CF, r1
    452e:	10 92 d0 01 	sts	0x01D0, r1
    4532:	10 92 d1 01 	sts	0x01D1, r1
		Global_Ticks=0;
    4536:	10 92 c9 01 	sts	0x01C9, r1
    453a:	10 92 c8 01 	sts	0x01C8, r1
		Global_Flag=0;
    453e:	10 92 c2 01 	sts	0x01C2, r1
		TCNT1=0;
    4542:	ec e4       	ldi	r30, 0x4C	; 76
    4544:	f0 e0       	ldi	r31, 0x00	; 0
    4546:	11 82       	std	Z+1, r1	; 0x01
    4548:	10 82       	st	Z, r1

		MTimer1_InputCpetureEdge(RISING_EDGE_ICU);
    454a:	81 e0       	ldi	r24, 0x01	; 1
    454c:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MTimer1_InputCpetureEdge>
		MTIMER1_ICU_Interrupt_Enable();
    4550:	0e 94 f7 17 	call	0x2fee	; 0x2fee <MTIMER1_ICU_Interrupt_Enable>

		MDIO_voidSetPinValue(ultrasoinc_port,trig_pin,DIO_SET);
    4554:	83 e0       	ldi	r24, 0x03	; 3
    4556:	67 e0       	ldi	r22, 0x07	; 7
    4558:	41 e0       	ldi	r20, 0x01	; 1
    455a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>
    455e:	80 e0       	ldi	r24, 0x00	; 0
    4560:	90 e0       	ldi	r25, 0x00	; 0
    4562:	a0 e7       	ldi	r26, 0x70	; 112
    4564:	b1 e4       	ldi	r27, 0x41	; 65
    4566:	8d 8b       	std	Y+21, r24	; 0x15
    4568:	9e 8b       	std	Y+22, r25	; 0x16
    456a:	af 8b       	std	Y+23, r26	; 0x17
    456c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    456e:	6d 89       	ldd	r22, Y+21	; 0x15
    4570:	7e 89       	ldd	r23, Y+22	; 0x16
    4572:	8f 89       	ldd	r24, Y+23	; 0x17
    4574:	98 8d       	ldd	r25, Y+24	; 0x18
    4576:	2b ea       	ldi	r18, 0xAB	; 171
    4578:	3a ea       	ldi	r19, 0xAA	; 170
    457a:	4a e2       	ldi	r20, 0x2A	; 42
    457c:	50 e4       	ldi	r21, 0x40	; 64
    457e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    4582:	dc 01       	movw	r26, r24
    4584:	cb 01       	movw	r24, r22
    4586:	89 8b       	std	Y+17, r24	; 0x11
    4588:	9a 8b       	std	Y+18, r25	; 0x12
    458a:	ab 8b       	std	Y+19, r26	; 0x13
    458c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    458e:	69 89       	ldd	r22, Y+17	; 0x11
    4590:	7a 89       	ldd	r23, Y+18	; 0x12
    4592:	8b 89       	ldd	r24, Y+19	; 0x13
    4594:	9c 89       	ldd	r25, Y+20	; 0x14
    4596:	20 e0       	ldi	r18, 0x00	; 0
    4598:	30 e0       	ldi	r19, 0x00	; 0
    459a:	40 e8       	ldi	r20, 0x80	; 128
    459c:	5f e3       	ldi	r21, 0x3F	; 63
    459e:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    45a2:	88 23       	and	r24, r24
    45a4:	1c f4       	brge	.+6      	; 0x45ac <HULTRASONIC_GET_Distance+0xbc>
		__ticks = 1;
    45a6:	81 e0       	ldi	r24, 0x01	; 1
    45a8:	88 8b       	std	Y+16, r24	; 0x10
    45aa:	91 c0       	rjmp	.+290    	; 0x46ce <HULTRASONIC_GET_Distance+0x1de>
	else if (__tmp > 255)
    45ac:	69 89       	ldd	r22, Y+17	; 0x11
    45ae:	7a 89       	ldd	r23, Y+18	; 0x12
    45b0:	8b 89       	ldd	r24, Y+19	; 0x13
    45b2:	9c 89       	ldd	r25, Y+20	; 0x14
    45b4:	20 e0       	ldi	r18, 0x00	; 0
    45b6:	30 e0       	ldi	r19, 0x00	; 0
    45b8:	4f e7       	ldi	r20, 0x7F	; 127
    45ba:	53 e4       	ldi	r21, 0x43	; 67
    45bc:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    45c0:	18 16       	cp	r1, r24
    45c2:	0c f0       	brlt	.+2      	; 0x45c6 <HULTRASONIC_GET_Distance+0xd6>
    45c4:	7b c0       	rjmp	.+246    	; 0x46bc <HULTRASONIC_GET_Distance+0x1cc>
	{
		_delay_ms(__us / 1000.0);
    45c6:	6d 89       	ldd	r22, Y+21	; 0x15
    45c8:	7e 89       	ldd	r23, Y+22	; 0x16
    45ca:	8f 89       	ldd	r24, Y+23	; 0x17
    45cc:	98 8d       	ldd	r25, Y+24	; 0x18
    45ce:	20 e0       	ldi	r18, 0x00	; 0
    45d0:	30 e0       	ldi	r19, 0x00	; 0
    45d2:	4a e7       	ldi	r20, 0x7A	; 122
    45d4:	54 e4       	ldi	r21, 0x44	; 68
    45d6:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__divsf3>
    45da:	dc 01       	movw	r26, r24
    45dc:	cb 01       	movw	r24, r22
    45de:	8c 87       	std	Y+12, r24	; 0x0c
    45e0:	9d 87       	std	Y+13, r25	; 0x0d
    45e2:	ae 87       	std	Y+14, r26	; 0x0e
    45e4:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45e6:	6c 85       	ldd	r22, Y+12	; 0x0c
    45e8:	7d 85       	ldd	r23, Y+13	; 0x0d
    45ea:	8e 85       	ldd	r24, Y+14	; 0x0e
    45ec:	9f 85       	ldd	r25, Y+15	; 0x0f
    45ee:	20 e0       	ldi	r18, 0x00	; 0
    45f0:	30 e0       	ldi	r19, 0x00	; 0
    45f2:	4a ef       	ldi	r20, 0xFA	; 250
    45f4:	54 e4       	ldi	r21, 0x44	; 68
    45f6:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    45fa:	dc 01       	movw	r26, r24
    45fc:	cb 01       	movw	r24, r22
    45fe:	88 87       	std	Y+8, r24	; 0x08
    4600:	99 87       	std	Y+9, r25	; 0x09
    4602:	aa 87       	std	Y+10, r26	; 0x0a
    4604:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    4606:	68 85       	ldd	r22, Y+8	; 0x08
    4608:	79 85       	ldd	r23, Y+9	; 0x09
    460a:	8a 85       	ldd	r24, Y+10	; 0x0a
    460c:	9b 85       	ldd	r25, Y+11	; 0x0b
    460e:	20 e0       	ldi	r18, 0x00	; 0
    4610:	30 e0       	ldi	r19, 0x00	; 0
    4612:	40 e8       	ldi	r20, 0x80	; 128
    4614:	5f e3       	ldi	r21, 0x3F	; 63
    4616:	0e 94 7e 05 	call	0xafc	; 0xafc <__ltsf2>
    461a:	88 23       	and	r24, r24
    461c:	2c f4       	brge	.+10     	; 0x4628 <HULTRASONIC_GET_Distance+0x138>
		__ticks = 1;
    461e:	81 e0       	ldi	r24, 0x01	; 1
    4620:	90 e0       	ldi	r25, 0x00	; 0
    4622:	9f 83       	std	Y+7, r25	; 0x07
    4624:	8e 83       	std	Y+6, r24	; 0x06
    4626:	3f c0       	rjmp	.+126    	; 0x46a6 <HULTRASONIC_GET_Distance+0x1b6>
	else if (__tmp > 65535)
    4628:	68 85       	ldd	r22, Y+8	; 0x08
    462a:	79 85       	ldd	r23, Y+9	; 0x09
    462c:	8a 85       	ldd	r24, Y+10	; 0x0a
    462e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4630:	20 e0       	ldi	r18, 0x00	; 0
    4632:	3f ef       	ldi	r19, 0xFF	; 255
    4634:	4f e7       	ldi	r20, 0x7F	; 127
    4636:	57 e4       	ldi	r21, 0x47	; 71
    4638:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__gtsf2>
    463c:	18 16       	cp	r1, r24
    463e:	4c f5       	brge	.+82     	; 0x4692 <HULTRASONIC_GET_Distance+0x1a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4640:	6c 85       	ldd	r22, Y+12	; 0x0c
    4642:	7d 85       	ldd	r23, Y+13	; 0x0d
    4644:	8e 85       	ldd	r24, Y+14	; 0x0e
    4646:	9f 85       	ldd	r25, Y+15	; 0x0f
    4648:	20 e0       	ldi	r18, 0x00	; 0
    464a:	30 e0       	ldi	r19, 0x00	; 0
    464c:	40 e2       	ldi	r20, 0x20	; 32
    464e:	51 e4       	ldi	r21, 0x41	; 65
    4650:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
    4654:	dc 01       	movw	r26, r24
    4656:	cb 01       	movw	r24, r22
    4658:	bc 01       	movw	r22, r24
    465a:	cd 01       	movw	r24, r26
    465c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    4660:	dc 01       	movw	r26, r24
    4662:	cb 01       	movw	r24, r22
    4664:	9f 83       	std	Y+7, r25	; 0x07
    4666:	8e 83       	std	Y+6, r24	; 0x06
    4668:	0f c0       	rjmp	.+30     	; 0x4688 <HULTRASONIC_GET_Distance+0x198>
    466a:	88 ec       	ldi	r24, 0xC8	; 200
    466c:	90 e0       	ldi	r25, 0x00	; 0
    466e:	9d 83       	std	Y+5, r25	; 0x05
    4670:	8c 83       	std	Y+4, r24	; 0x04
    4672:	8c 81       	ldd	r24, Y+4	; 0x04
    4674:	9d 81       	ldd	r25, Y+5	; 0x05
    4676:	01 97       	sbiw	r24, 0x01	; 1
    4678:	f1 f7       	brne	.-4      	; 0x4676 <HULTRASONIC_GET_Distance+0x186>
    467a:	9d 83       	std	Y+5, r25	; 0x05
    467c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    467e:	8e 81       	ldd	r24, Y+6	; 0x06
    4680:	9f 81       	ldd	r25, Y+7	; 0x07
    4682:	01 97       	sbiw	r24, 0x01	; 1
    4684:	9f 83       	std	Y+7, r25	; 0x07
    4686:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4688:	8e 81       	ldd	r24, Y+6	; 0x06
    468a:	9f 81       	ldd	r25, Y+7	; 0x07
    468c:	00 97       	sbiw	r24, 0x00	; 0
    468e:	69 f7       	brne	.-38     	; 0x466a <HULTRASONIC_GET_Distance+0x17a>
    4690:	24 c0       	rjmp	.+72     	; 0x46da <HULTRASONIC_GET_Distance+0x1ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4692:	68 85       	ldd	r22, Y+8	; 0x08
    4694:	79 85       	ldd	r23, Y+9	; 0x09
    4696:	8a 85       	ldd	r24, Y+10	; 0x0a
    4698:	9b 85       	ldd	r25, Y+11	; 0x0b
    469a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    469e:	dc 01       	movw	r26, r24
    46a0:	cb 01       	movw	r24, r22
    46a2:	9f 83       	std	Y+7, r25	; 0x07
    46a4:	8e 83       	std	Y+6, r24	; 0x06
    46a6:	8e 81       	ldd	r24, Y+6	; 0x06
    46a8:	9f 81       	ldd	r25, Y+7	; 0x07
    46aa:	9b 83       	std	Y+3, r25	; 0x03
    46ac:	8a 83       	std	Y+2, r24	; 0x02
    46ae:	8a 81       	ldd	r24, Y+2	; 0x02
    46b0:	9b 81       	ldd	r25, Y+3	; 0x03
    46b2:	01 97       	sbiw	r24, 0x01	; 1
    46b4:	f1 f7       	brne	.-4      	; 0x46b2 <HULTRASONIC_GET_Distance+0x1c2>
    46b6:	9b 83       	std	Y+3, r25	; 0x03
    46b8:	8a 83       	std	Y+2, r24	; 0x02
    46ba:	0f c0       	rjmp	.+30     	; 0x46da <HULTRASONIC_GET_Distance+0x1ea>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    46bc:	69 89       	ldd	r22, Y+17	; 0x11
    46be:	7a 89       	ldd	r23, Y+18	; 0x12
    46c0:	8b 89       	ldd	r24, Y+19	; 0x13
    46c2:	9c 89       	ldd	r25, Y+20	; 0x14
    46c4:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    46c8:	dc 01       	movw	r26, r24
    46ca:	cb 01       	movw	r24, r22
    46cc:	88 8b       	std	Y+16, r24	; 0x10
    46ce:	88 89       	ldd	r24, Y+16	; 0x10
    46d0:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    46d2:	89 81       	ldd	r24, Y+1	; 0x01
    46d4:	8a 95       	dec	r24
    46d6:	f1 f7       	brne	.-4      	; 0x46d4 <HULTRASONIC_GET_Distance+0x1e4>
    46d8:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(15);
		MDIO_voidSetPinValue(ultrasoinc_port,trig_pin,DIO_RESET);
    46da:	83 e0       	ldi	r24, 0x03	; 3
    46dc:	67 e0       	ldi	r22, 0x07	; 7
    46de:	40 e0       	ldi	r20, 0x00	; 0
    46e0:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <MDIO_voidSetPinValue>

		while(Global_Flag<2);
    46e4:	80 91 c2 01 	lds	r24, 0x01C2
    46e8:	82 30       	cpi	r24, 0x02	; 2
    46ea:	e0 f3       	brcs	.-8      	; 0x46e4 <HULTRASONIC_GET_Distance+0x1f4>
		Global_Ticks=abs(Global_T2-Global_T1) + 0* ((u32) 19999*Global_OVF_Counts);
    46ec:	20 91 c6 01 	lds	r18, 0x01C6
    46f0:	30 91 c7 01 	lds	r19, 0x01C7
    46f4:	80 91 c4 01 	lds	r24, 0x01C4
    46f8:	90 91 c5 01 	lds	r25, 0x01C5
    46fc:	a9 01       	movw	r20, r18
    46fe:	48 1b       	sub	r20, r24
    4700:	59 0b       	sbc	r21, r25
    4702:	ca 01       	movw	r24, r20
    4704:	9a a3       	std	Y+34, r25	; 0x22
    4706:	89 a3       	std	Y+33, r24	; 0x21
    4708:	89 a1       	ldd	r24, Y+33	; 0x21
    470a:	9a a1       	ldd	r25, Y+34	; 0x22
    470c:	99 23       	and	r25, r25
    470e:	3c f4       	brge	.+14     	; 0x471e <HULTRASONIC_GET_Distance+0x22e>
    4710:	49 a1       	ldd	r20, Y+33	; 0x21
    4712:	5a a1       	ldd	r21, Y+34	; 0x22
    4714:	50 95       	com	r21
    4716:	41 95       	neg	r20
    4718:	5f 4f       	sbci	r21, 0xFF	; 255
    471a:	5a a3       	std	Y+34, r21	; 0x22
    471c:	49 a3       	std	Y+33, r20	; 0x21
    471e:	89 a1       	ldd	r24, Y+33	; 0x21
    4720:	9a a1       	ldd	r25, Y+34	; 0x22
    4722:	90 93 c9 01 	sts	0x01C9, r25
    4726:	80 93 c8 01 	sts	0x01C8, r24

		Global_Distance=Global_Ticks/58;
    472a:	80 91 c8 01 	lds	r24, 0x01C8
    472e:	90 91 c9 01 	lds	r25, 0x01C9
    4732:	2a e3       	ldi	r18, 0x3A	; 58
    4734:	30 e0       	ldi	r19, 0x00	; 0
    4736:	b9 01       	movw	r22, r18
    4738:	0e 94 29 25 	call	0x4a52	; 0x4a52 <__udivmodhi4>
    473c:	cb 01       	movw	r24, r22
    473e:	9c 01       	movw	r18, r24
    4740:	40 e0       	ldi	r20, 0x00	; 0
    4742:	50 e0       	ldi	r21, 0x00	; 0
    4744:	60 e0       	ldi	r22, 0x00	; 0
    4746:	70 e0       	ldi	r23, 0x00	; 0
    4748:	80 e0       	ldi	r24, 0x00	; 0
    474a:	90 e0       	ldi	r25, 0x00	; 0
    474c:	20 93 ca 01 	sts	0x01CA, r18
    4750:	30 93 cb 01 	sts	0x01CB, r19
    4754:	40 93 cc 01 	sts	0x01CC, r20
    4758:	50 93 cd 01 	sts	0x01CD, r21
    475c:	60 93 ce 01 	sts	0x01CE, r22
    4760:	70 93 cf 01 	sts	0x01CF, r23
    4764:	80 93 d0 01 	sts	0x01D0, r24
    4768:	90 93 d1 01 	sts	0x01D1, r25
		MTIMER1_ICU_Interrupt_Disable();
    476c:	0e 94 2f 18 	call	0x305e	; 0x305e <MTIMER1_ICU_Interrupt_Disable>
		return Global_Distance-1;
    4770:	50 91 ca 01 	lds	r21, 0x01CA
    4774:	59 8f       	std	Y+25, r21	; 0x19
    4776:	80 91 cb 01 	lds	r24, 0x01CB
    477a:	8a 8f       	std	Y+26, r24	; 0x1a
    477c:	90 91 cc 01 	lds	r25, 0x01CC
    4780:	9b 8f       	std	Y+27, r25	; 0x1b
    4782:	40 91 cd 01 	lds	r20, 0x01CD
    4786:	4c 8f       	std	Y+28, r20	; 0x1c
    4788:	50 91 ce 01 	lds	r21, 0x01CE
    478c:	5d 8f       	std	Y+29, r21	; 0x1d
    478e:	80 91 cf 01 	lds	r24, 0x01CF
    4792:	8e 8f       	std	Y+30, r24	; 0x1e
    4794:	90 91 d0 01 	lds	r25, 0x01D0
    4798:	9f 8f       	std	Y+31, r25	; 0x1f
    479a:	40 91 d1 01 	lds	r20, 0x01D1
    479e:	48 a3       	std	Y+32, r20	; 0x20
    47a0:	5f ef       	ldi	r21, 0xFF	; 255
    47a2:	5b a3       	std	Y+35, r21	; 0x23
    47a4:	8f ef       	ldi	r24, 0xFF	; 255
    47a6:	8c a3       	std	Y+36, r24	; 0x24
    47a8:	9f ef       	ldi	r25, 0xFF	; 255
    47aa:	9d a3       	std	Y+37, r25	; 0x25
    47ac:	4f ef       	ldi	r20, 0xFF	; 255
    47ae:	4e a3       	std	Y+38, r20	; 0x26
    47b0:	5f ef       	ldi	r21, 0xFF	; 255
    47b2:	5f a3       	std	Y+39, r21	; 0x27
    47b4:	8f ef       	ldi	r24, 0xFF	; 255
    47b6:	88 a7       	std	Y+40, r24	; 0x28
    47b8:	9f ef       	ldi	r25, 0xFF	; 255
    47ba:	99 a7       	std	Y+41, r25	; 0x29
    47bc:	4f ef       	ldi	r20, 0xFF	; 255
    47be:	4a a7       	std	Y+42, r20	; 0x2a
    47c0:	59 8d       	ldd	r21, Y+25	; 0x19
    47c2:	8b a1       	ldd	r24, Y+35	; 0x23
    47c4:	58 0f       	add	r21, r24
    47c6:	5b a7       	std	Y+43, r21	; 0x2b
    47c8:	91 e0       	ldi	r25, 0x01	; 1
    47ca:	9b ab       	std	Y+51, r25	; 0x33
    47cc:	4b a5       	ldd	r20, Y+43	; 0x2b
    47ce:	59 8d       	ldd	r21, Y+25	; 0x19
    47d0:	45 17       	cp	r20, r21
    47d2:	08 f0       	brcs	.+2      	; 0x47d6 <HULTRASONIC_GET_Distance+0x2e6>
    47d4:	1b aa       	std	Y+51, r1	; 0x33
    47d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    47d8:	9c a1       	ldd	r25, Y+36	; 0x24
    47da:	89 0f       	add	r24, r25
    47dc:	8c a7       	std	Y+44, r24	; 0x2c
    47de:	41 e0       	ldi	r20, 0x01	; 1
    47e0:	4c ab       	std	Y+52, r20	; 0x34
    47e2:	5c a5       	ldd	r21, Y+44	; 0x2c
    47e4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    47e6:	58 17       	cp	r21, r24
    47e8:	08 f0       	brcs	.+2      	; 0x47ec <HULTRASONIC_GET_Distance+0x2fc>
    47ea:	1c aa       	std	Y+52, r1	; 0x34
    47ec:	9b a9       	ldd	r25, Y+51	; 0x33
    47ee:	4c a5       	ldd	r20, Y+44	; 0x2c
    47f0:	94 0f       	add	r25, r20
    47f2:	9d ab       	std	Y+53, r25	; 0x35
    47f4:	51 e0       	ldi	r21, 0x01	; 1
    47f6:	5e ab       	std	Y+54, r21	; 0x36
    47f8:	8d a9       	ldd	r24, Y+53	; 0x35
    47fa:	9c a5       	ldd	r25, Y+44	; 0x2c
    47fc:	89 17       	cp	r24, r25
    47fe:	08 f0       	brcs	.+2      	; 0x4802 <HULTRASONIC_GET_Distance+0x312>
    4800:	1e aa       	std	Y+54, r1	; 0x36
    4802:	4c a9       	ldd	r20, Y+52	; 0x34
    4804:	5e a9       	ldd	r21, Y+54	; 0x36
    4806:	45 2b       	or	r20, r21
    4808:	4c ab       	std	Y+52, r20	; 0x34
    480a:	8d a9       	ldd	r24, Y+53	; 0x35
    480c:	8c a7       	std	Y+44, r24	; 0x2c
    480e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4810:	4d a1       	ldd	r20, Y+37	; 0x25
    4812:	94 0f       	add	r25, r20
    4814:	9d a7       	std	Y+45, r25	; 0x2d
    4816:	51 e0       	ldi	r21, 0x01	; 1
    4818:	5f ab       	std	Y+55, r21	; 0x37
    481a:	8d a5       	ldd	r24, Y+45	; 0x2d
    481c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    481e:	89 17       	cp	r24, r25
    4820:	08 f0       	brcs	.+2      	; 0x4824 <HULTRASONIC_GET_Distance+0x334>
    4822:	1f aa       	std	Y+55, r1	; 0x37
    4824:	4c a9       	ldd	r20, Y+52	; 0x34
    4826:	5d a5       	ldd	r21, Y+45	; 0x2d
    4828:	45 0f       	add	r20, r21
    482a:	48 af       	std	Y+56, r20	; 0x38
    482c:	81 e0       	ldi	r24, 0x01	; 1
    482e:	89 af       	std	Y+57, r24	; 0x39
    4830:	98 ad       	ldd	r25, Y+56	; 0x38
    4832:	4d a5       	ldd	r20, Y+45	; 0x2d
    4834:	94 17       	cp	r25, r20
    4836:	08 f0       	brcs	.+2      	; 0x483a <HULTRASONIC_GET_Distance+0x34a>
    4838:	19 ae       	std	Y+57, r1	; 0x39
    483a:	5f a9       	ldd	r21, Y+55	; 0x37
    483c:	89 ad       	ldd	r24, Y+57	; 0x39
    483e:	58 2b       	or	r21, r24
    4840:	5f ab       	std	Y+55, r21	; 0x37
    4842:	98 ad       	ldd	r25, Y+56	; 0x38
    4844:	9d a7       	std	Y+45, r25	; 0x2d
    4846:	4c 8d       	ldd	r20, Y+28	; 0x1c
    4848:	5e a1       	ldd	r21, Y+38	; 0x26
    484a:	45 0f       	add	r20, r21
    484c:	4e a7       	std	Y+46, r20	; 0x2e
    484e:	81 e0       	ldi	r24, 0x01	; 1
    4850:	8a af       	std	Y+58, r24	; 0x3a
    4852:	9e a5       	ldd	r25, Y+46	; 0x2e
    4854:	4c 8d       	ldd	r20, Y+28	; 0x1c
    4856:	94 17       	cp	r25, r20
    4858:	08 f0       	brcs	.+2      	; 0x485c <HULTRASONIC_GET_Distance+0x36c>
    485a:	1a ae       	std	Y+58, r1	; 0x3a
    485c:	5f a9       	ldd	r21, Y+55	; 0x37
    485e:	8e a5       	ldd	r24, Y+46	; 0x2e
    4860:	58 0f       	add	r21, r24
    4862:	5b af       	std	Y+59, r21	; 0x3b
    4864:	91 e0       	ldi	r25, 0x01	; 1
    4866:	9c af       	std	Y+60, r25	; 0x3c
    4868:	4b ad       	ldd	r20, Y+59	; 0x3b
    486a:	5e a5       	ldd	r21, Y+46	; 0x2e
    486c:	45 17       	cp	r20, r21
    486e:	08 f0       	brcs	.+2      	; 0x4872 <HULTRASONIC_GET_Distance+0x382>
    4870:	1c ae       	std	Y+60, r1	; 0x3c
    4872:	8a ad       	ldd	r24, Y+58	; 0x3a
    4874:	9c ad       	ldd	r25, Y+60	; 0x3c
    4876:	89 2b       	or	r24, r25
    4878:	8a af       	std	Y+58, r24	; 0x3a
    487a:	4b ad       	ldd	r20, Y+59	; 0x3b
    487c:	4e a7       	std	Y+46, r20	; 0x2e
    487e:	5d 8d       	ldd	r21, Y+29	; 0x1d
    4880:	8f a1       	ldd	r24, Y+39	; 0x27
    4882:	58 0f       	add	r21, r24
    4884:	5f a7       	std	Y+47, r21	; 0x2f
    4886:	91 e0       	ldi	r25, 0x01	; 1
    4888:	9d af       	std	Y+61, r25	; 0x3d
    488a:	4f a5       	ldd	r20, Y+47	; 0x2f
    488c:	5d 8d       	ldd	r21, Y+29	; 0x1d
    488e:	45 17       	cp	r20, r21
    4890:	08 f0       	brcs	.+2      	; 0x4894 <HULTRASONIC_GET_Distance+0x3a4>
    4892:	1d ae       	std	Y+61, r1	; 0x3d
    4894:	8a ad       	ldd	r24, Y+58	; 0x3a
    4896:	9f a5       	ldd	r25, Y+47	; 0x2f
    4898:	89 0f       	add	r24, r25
    489a:	8e af       	std	Y+62, r24	; 0x3e
    489c:	41 e0       	ldi	r20, 0x01	; 1
    489e:	4f af       	std	Y+63, r20	; 0x3f
    48a0:	5e ad       	ldd	r21, Y+62	; 0x3e
    48a2:	8f a5       	ldd	r24, Y+47	; 0x2f
    48a4:	58 17       	cp	r21, r24
    48a6:	08 f0       	brcs	.+2      	; 0x48aa <HULTRASONIC_GET_Distance+0x3ba>
    48a8:	1f ae       	std	Y+63, r1	; 0x3f
    48aa:	9d ad       	ldd	r25, Y+61	; 0x3d
    48ac:	4f ad       	ldd	r20, Y+63	; 0x3f
    48ae:	94 2b       	or	r25, r20
    48b0:	9d af       	std	Y+61, r25	; 0x3d
    48b2:	5e ad       	ldd	r21, Y+62	; 0x3e
    48b4:	5f a7       	std	Y+47, r21	; 0x2f
    48b6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    48b8:	98 a5       	ldd	r25, Y+40	; 0x28
    48ba:	89 0f       	add	r24, r25
    48bc:	88 ab       	std	Y+48, r24	; 0x30
    48be:	41 e0       	ldi	r20, 0x01	; 1
    48c0:	21 96       	adiw	r28, 0x01	; 1
    48c2:	4f af       	std	Y+63, r20	; 0x3f
    48c4:	21 97       	sbiw	r28, 0x01	; 1
    48c6:	58 a9       	ldd	r21, Y+48	; 0x30
    48c8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    48ca:	58 17       	cp	r21, r24
    48cc:	18 f0       	brcs	.+6      	; 0x48d4 <HULTRASONIC_GET_Distance+0x3e4>
    48ce:	21 96       	adiw	r28, 0x01	; 1
    48d0:	1f ae       	std	Y+63, r1	; 0x3f
    48d2:	21 97       	sbiw	r28, 0x01	; 1
    48d4:	9d ad       	ldd	r25, Y+61	; 0x3d
    48d6:	48 a9       	ldd	r20, Y+48	; 0x30
    48d8:	94 0f       	add	r25, r20
    48da:	22 96       	adiw	r28, 0x02	; 2
    48dc:	9f af       	std	Y+63, r25	; 0x3f
    48de:	22 97       	sbiw	r28, 0x02	; 2
    48e0:	51 e0       	ldi	r21, 0x01	; 1
    48e2:	23 96       	adiw	r28, 0x03	; 3
    48e4:	5f af       	std	Y+63, r21	; 0x3f
    48e6:	23 97       	sbiw	r28, 0x03	; 3
    48e8:	22 96       	adiw	r28, 0x02	; 2
    48ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    48ec:	22 97       	sbiw	r28, 0x02	; 2
    48ee:	98 a9       	ldd	r25, Y+48	; 0x30
    48f0:	89 17       	cp	r24, r25
    48f2:	18 f0       	brcs	.+6      	; 0x48fa <HULTRASONIC_GET_Distance+0x40a>
    48f4:	23 96       	adiw	r28, 0x03	; 3
    48f6:	1f ae       	std	Y+63, r1	; 0x3f
    48f8:	23 97       	sbiw	r28, 0x03	; 3
    48fa:	21 96       	adiw	r28, 0x01	; 1
    48fc:	4f ad       	ldd	r20, Y+63	; 0x3f
    48fe:	21 97       	sbiw	r28, 0x01	; 1
    4900:	23 96       	adiw	r28, 0x03	; 3
    4902:	5f ad       	ldd	r21, Y+63	; 0x3f
    4904:	23 97       	sbiw	r28, 0x03	; 3
    4906:	45 2b       	or	r20, r21
    4908:	21 96       	adiw	r28, 0x01	; 1
    490a:	4f af       	std	Y+63, r20	; 0x3f
    490c:	21 97       	sbiw	r28, 0x01	; 1
    490e:	22 96       	adiw	r28, 0x02	; 2
    4910:	8f ad       	ldd	r24, Y+63	; 0x3f
    4912:	22 97       	sbiw	r28, 0x02	; 2
    4914:	88 ab       	std	Y+48, r24	; 0x30
    4916:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4918:	49 a5       	ldd	r20, Y+41	; 0x29
    491a:	94 0f       	add	r25, r20
    491c:	99 ab       	std	Y+49, r25	; 0x31
    491e:	51 e0       	ldi	r21, 0x01	; 1
    4920:	24 96       	adiw	r28, 0x04	; 4
    4922:	5f af       	std	Y+63, r21	; 0x3f
    4924:	24 97       	sbiw	r28, 0x04	; 4
    4926:	89 a9       	ldd	r24, Y+49	; 0x31
    4928:	9f 8d       	ldd	r25, Y+31	; 0x1f
    492a:	89 17       	cp	r24, r25
    492c:	18 f0       	brcs	.+6      	; 0x4934 <HULTRASONIC_GET_Distance+0x444>
    492e:	24 96       	adiw	r28, 0x04	; 4
    4930:	1f ae       	std	Y+63, r1	; 0x3f
    4932:	24 97       	sbiw	r28, 0x04	; 4
    4934:	21 96       	adiw	r28, 0x01	; 1
    4936:	4f ad       	ldd	r20, Y+63	; 0x3f
    4938:	21 97       	sbiw	r28, 0x01	; 1
    493a:	59 a9       	ldd	r21, Y+49	; 0x31
    493c:	45 0f       	add	r20, r21
    493e:	25 96       	adiw	r28, 0x05	; 5
    4940:	4f af       	std	Y+63, r20	; 0x3f
    4942:	25 97       	sbiw	r28, 0x05	; 5
    4944:	81 e0       	ldi	r24, 0x01	; 1
    4946:	26 96       	adiw	r28, 0x06	; 6
    4948:	8f af       	std	Y+63, r24	; 0x3f
    494a:	26 97       	sbiw	r28, 0x06	; 6
    494c:	25 96       	adiw	r28, 0x05	; 5
    494e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4950:	25 97       	sbiw	r28, 0x05	; 5
    4952:	49 a9       	ldd	r20, Y+49	; 0x31
    4954:	94 17       	cp	r25, r20
    4956:	18 f0       	brcs	.+6      	; 0x495e <HULTRASONIC_GET_Distance+0x46e>
    4958:	26 96       	adiw	r28, 0x06	; 6
    495a:	1f ae       	std	Y+63, r1	; 0x3f
    495c:	26 97       	sbiw	r28, 0x06	; 6
    495e:	24 96       	adiw	r28, 0x04	; 4
    4960:	5f ad       	ldd	r21, Y+63	; 0x3f
    4962:	24 97       	sbiw	r28, 0x04	; 4
    4964:	26 96       	adiw	r28, 0x06	; 6
    4966:	8f ad       	ldd	r24, Y+63	; 0x3f
    4968:	26 97       	sbiw	r28, 0x06	; 6
    496a:	58 2b       	or	r21, r24
    496c:	24 96       	adiw	r28, 0x04	; 4
    496e:	5f af       	std	Y+63, r21	; 0x3f
    4970:	24 97       	sbiw	r28, 0x04	; 4
    4972:	25 96       	adiw	r28, 0x05	; 5
    4974:	9f ad       	ldd	r25, Y+63	; 0x3f
    4976:	25 97       	sbiw	r28, 0x05	; 5
    4978:	99 ab       	std	Y+49, r25	; 0x31
    497a:	48 a1       	ldd	r20, Y+32	; 0x20
    497c:	5a a5       	ldd	r21, Y+42	; 0x2a
    497e:	45 0f       	add	r20, r21
    4980:	4a ab       	std	Y+50, r20	; 0x32
    4982:	24 96       	adiw	r28, 0x04	; 4
    4984:	8f ad       	ldd	r24, Y+63	; 0x3f
    4986:	24 97       	sbiw	r28, 0x04	; 4
    4988:	9a a9       	ldd	r25, Y+50	; 0x32
    498a:	89 0f       	add	r24, r25
    498c:	8a ab       	std	Y+50, r24	; 0x32
    498e:	2b a5       	ldd	r18, Y+43	; 0x2b
    4990:	3c a5       	ldd	r19, Y+44	; 0x2c
    4992:	4d a5       	ldd	r20, Y+45	; 0x2d
    4994:	5e a5       	ldd	r21, Y+46	; 0x2e
    4996:	6f a5       	ldd	r22, Y+47	; 0x2f
    4998:	78 a9       	ldd	r23, Y+48	; 0x30
    499a:	89 a9       	ldd	r24, Y+49	; 0x31
    499c:	9a a9       	ldd	r25, Y+50	; 0x32
    499e:	a2 2e       	mov	r10, r18
    49a0:	b3 2e       	mov	r11, r19
    49a2:	c4 2e       	mov	r12, r20
    49a4:	d5 2e       	mov	r13, r21
    49a6:	e6 2e       	mov	r14, r22
    49a8:	f7 2e       	mov	r15, r23
    49aa:	08 2f       	mov	r16, r24
    49ac:	19 2f       	mov	r17, r25
	 * V=34300 CM/SEC
	 * T=(number_of_ticks *(1/FREQ))
	 * (1/FREQ)= 1 MICRO SEC;
	 * V= number_of_ticks* 0.01715 = number_of_ticks/58
	 */
}
    49ae:	2a 2d       	mov	r18, r10
    49b0:	3b 2d       	mov	r19, r11
    49b2:	4c 2d       	mov	r20, r12
    49b4:	5d 2d       	mov	r21, r13
    49b6:	6e 2d       	mov	r22, r14
    49b8:	7f 2d       	mov	r23, r15
    49ba:	80 2f       	mov	r24, r16
    49bc:	91 2f       	mov	r25, r17
    49be:	cb 5b       	subi	r28, 0xBB	; 187
    49c0:	df 4f       	sbci	r29, 0xFF	; 255
    49c2:	0f b6       	in	r0, 0x3f	; 63
    49c4:	f8 94       	cli
    49c6:	de bf       	out	0x3e, r29	; 62
    49c8:	0f be       	out	0x3f, r0	; 63
    49ca:	cd bf       	out	0x3d, r28	; 61
    49cc:	cf 91       	pop	r28
    49ce:	df 91       	pop	r29
    49d0:	1f 91       	pop	r17
    49d2:	0f 91       	pop	r16
    49d4:	ff 90       	pop	r15
    49d6:	ef 90       	pop	r14
    49d8:	df 90       	pop	r13
    49da:	cf 90       	pop	r12
    49dc:	bf 90       	pop	r11
    49de:	af 90       	pop	r10
    49e0:	08 95       	ret

000049e2 <ISR_ICU>:
void ISR_ICU(void)
{
    49e2:	df 93       	push	r29
    49e4:	cf 93       	push	r28
    49e6:	cd b7       	in	r28, 0x3d	; 61
    49e8:	de b7       	in	r29, 0x3e	; 62
	if(Global_Flag==0)
    49ea:	80 91 c2 01 	lds	r24, 0x01C2
    49ee:	88 23       	and	r24, r24
    49f0:	89 f4       	brne	.+34     	; 0x4a14 <ISR_ICU+0x32>
	{

		Global_T1=ICR1;
    49f2:	e6 e4       	ldi	r30, 0x46	; 70
    49f4:	f0 e0       	ldi	r31, 0x00	; 0
    49f6:	80 81       	ld	r24, Z
    49f8:	91 81       	ldd	r25, Z+1	; 0x01
    49fa:	90 93 c5 01 	sts	0x01C5, r25
    49fe:	80 93 c4 01 	sts	0x01C4, r24
		Global_Flag=1;
    4a02:	81 e0       	ldi	r24, 0x01	; 1
    4a04:	80 93 c2 01 	sts	0x01C2, r24
		Global_OVF_Counts=0;
    4a08:	10 92 c3 01 	sts	0x01C3, r1
		MTimer1_InputCpetureEdge(FALLING_EDGE_ICU);
    4a0c:	80 e0       	ldi	r24, 0x00	; 0
    4a0e:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MTimer1_InputCpetureEdge>
    4a12:	10 c0       	rjmp	.+32     	; 0x4a34 <ISR_ICU+0x52>
	}
	else
	{


		Global_T2=ICR1;
    4a14:	e6 e4       	ldi	r30, 0x46	; 70
    4a16:	f0 e0       	ldi	r31, 0x00	; 0
    4a18:	80 81       	ld	r24, Z
    4a1a:	91 81       	ldd	r25, Z+1	; 0x01
    4a1c:	90 93 c7 01 	sts	0x01C7, r25
    4a20:	80 93 c6 01 	sts	0x01C6, r24
		Global_Flag=2;
    4a24:	82 e0       	ldi	r24, 0x02	; 2
    4a26:	80 93 c2 01 	sts	0x01C2, r24
		MTimer1_InputCpetureEdge(RISING_EDGE_ICU);
    4a2a:	81 e0       	ldi	r24, 0x01	; 1
    4a2c:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MTimer1_InputCpetureEdge>
		MTIMER1_ICU_Interrupt_Disable();
    4a30:	0e 94 2f 18 	call	0x305e	; 0x305e <MTIMER1_ICU_Interrupt_Disable>


	}

}
    4a34:	cf 91       	pop	r28
    4a36:	df 91       	pop	r29
    4a38:	08 95       	ret

00004a3a <ISR_OVF>:
void ISR_OVF(void)
{
    4a3a:	df 93       	push	r29
    4a3c:	cf 93       	push	r28
    4a3e:	cd b7       	in	r28, 0x3d	; 61
    4a40:	de b7       	in	r29, 0x3e	; 62

	Global_OVF_Counts++;
    4a42:	80 91 c3 01 	lds	r24, 0x01C3
    4a46:	8f 5f       	subi	r24, 0xFF	; 255
    4a48:	80 93 c3 01 	sts	0x01C3, r24
}
    4a4c:	cf 91       	pop	r28
    4a4e:	df 91       	pop	r29
    4a50:	08 95       	ret

00004a52 <__udivmodhi4>:
    4a52:	aa 1b       	sub	r26, r26
    4a54:	bb 1b       	sub	r27, r27
    4a56:	51 e1       	ldi	r21, 0x11	; 17
    4a58:	07 c0       	rjmp	.+14     	; 0x4a68 <__udivmodhi4_ep>

00004a5a <__udivmodhi4_loop>:
    4a5a:	aa 1f       	adc	r26, r26
    4a5c:	bb 1f       	adc	r27, r27
    4a5e:	a6 17       	cp	r26, r22
    4a60:	b7 07       	cpc	r27, r23
    4a62:	10 f0       	brcs	.+4      	; 0x4a68 <__udivmodhi4_ep>
    4a64:	a6 1b       	sub	r26, r22
    4a66:	b7 0b       	sbc	r27, r23

00004a68 <__udivmodhi4_ep>:
    4a68:	88 1f       	adc	r24, r24
    4a6a:	99 1f       	adc	r25, r25
    4a6c:	5a 95       	dec	r21
    4a6e:	a9 f7       	brne	.-22     	; 0x4a5a <__udivmodhi4_loop>
    4a70:	80 95       	com	r24
    4a72:	90 95       	com	r25
    4a74:	bc 01       	movw	r22, r24
    4a76:	cd 01       	movw	r24, r26
    4a78:	08 95       	ret

00004a7a <__prologue_saves__>:
    4a7a:	2f 92       	push	r2
    4a7c:	3f 92       	push	r3
    4a7e:	4f 92       	push	r4
    4a80:	5f 92       	push	r5
    4a82:	6f 92       	push	r6
    4a84:	7f 92       	push	r7
    4a86:	8f 92       	push	r8
    4a88:	9f 92       	push	r9
    4a8a:	af 92       	push	r10
    4a8c:	bf 92       	push	r11
    4a8e:	cf 92       	push	r12
    4a90:	df 92       	push	r13
    4a92:	ef 92       	push	r14
    4a94:	ff 92       	push	r15
    4a96:	0f 93       	push	r16
    4a98:	1f 93       	push	r17
    4a9a:	cf 93       	push	r28
    4a9c:	df 93       	push	r29
    4a9e:	cd b7       	in	r28, 0x3d	; 61
    4aa0:	de b7       	in	r29, 0x3e	; 62
    4aa2:	ca 1b       	sub	r28, r26
    4aa4:	db 0b       	sbc	r29, r27
    4aa6:	0f b6       	in	r0, 0x3f	; 63
    4aa8:	f8 94       	cli
    4aaa:	de bf       	out	0x3e, r29	; 62
    4aac:	0f be       	out	0x3f, r0	; 63
    4aae:	cd bf       	out	0x3d, r28	; 61
    4ab0:	09 94       	ijmp

00004ab2 <__epilogue_restores__>:
    4ab2:	2a 88       	ldd	r2, Y+18	; 0x12
    4ab4:	39 88       	ldd	r3, Y+17	; 0x11
    4ab6:	48 88       	ldd	r4, Y+16	; 0x10
    4ab8:	5f 84       	ldd	r5, Y+15	; 0x0f
    4aba:	6e 84       	ldd	r6, Y+14	; 0x0e
    4abc:	7d 84       	ldd	r7, Y+13	; 0x0d
    4abe:	8c 84       	ldd	r8, Y+12	; 0x0c
    4ac0:	9b 84       	ldd	r9, Y+11	; 0x0b
    4ac2:	aa 84       	ldd	r10, Y+10	; 0x0a
    4ac4:	b9 84       	ldd	r11, Y+9	; 0x09
    4ac6:	c8 84       	ldd	r12, Y+8	; 0x08
    4ac8:	df 80       	ldd	r13, Y+7	; 0x07
    4aca:	ee 80       	ldd	r14, Y+6	; 0x06
    4acc:	fd 80       	ldd	r15, Y+5	; 0x05
    4ace:	0c 81       	ldd	r16, Y+4	; 0x04
    4ad0:	1b 81       	ldd	r17, Y+3	; 0x03
    4ad2:	aa 81       	ldd	r26, Y+2	; 0x02
    4ad4:	b9 81       	ldd	r27, Y+1	; 0x01
    4ad6:	ce 0f       	add	r28, r30
    4ad8:	d1 1d       	adc	r29, r1
    4ada:	0f b6       	in	r0, 0x3f	; 63
    4adc:	f8 94       	cli
    4ade:	de bf       	out	0x3e, r29	; 62
    4ae0:	0f be       	out	0x3f, r0	; 63
    4ae2:	cd bf       	out	0x3d, r28	; 61
    4ae4:	ed 01       	movw	r28, r26
    4ae6:	08 95       	ret

00004ae8 <dtostrf>:
    4ae8:	ef 92       	push	r14
    4aea:	ff 92       	push	r15
    4aec:	0f 93       	push	r16
    4aee:	1f 93       	push	r17
    4af0:	f2 2f       	mov	r31, r18
    4af2:	f0 2e       	mov	r15, r16
    4af4:	47 fd       	sbrc	r20, 7
    4af6:	02 c0       	rjmp	.+4      	; 0x4afc <dtostrf+0x14>
    4af8:	e4 e0       	ldi	r30, 0x04	; 4
    4afa:	01 c0       	rjmp	.+2      	; 0x4afe <dtostrf+0x16>
    4afc:	e4 e1       	ldi	r30, 0x14	; 20
    4afe:	24 2f       	mov	r18, r20
    4b00:	33 27       	eor	r19, r19
    4b02:	27 fd       	sbrc	r18, 7
    4b04:	30 95       	com	r19
    4b06:	37 ff       	sbrs	r19, 7
    4b08:	03 c0       	rjmp	.+6      	; 0x4b10 <dtostrf+0x28>
    4b0a:	30 95       	com	r19
    4b0c:	21 95       	neg	r18
    4b0e:	3f 4f       	sbci	r19, 0xFF	; 255
    4b10:	4f 2d       	mov	r20, r15
    4b12:	51 2f       	mov	r21, r17
    4b14:	0f 2f       	mov	r16, r31
    4b16:	ee 2e       	mov	r14, r30
    4b18:	0e 94 b6 25 	call	0x4b6c	; 0x4b6c <dtoa_prf>
    4b1c:	8f 2d       	mov	r24, r15
    4b1e:	91 2f       	mov	r25, r17
    4b20:	1f 91       	pop	r17
    4b22:	0f 91       	pop	r16
    4b24:	ff 90       	pop	r15
    4b26:	ef 90       	pop	r14
    4b28:	08 95       	ret

00004b2a <itoa>:
    4b2a:	fb 01       	movw	r30, r22
    4b2c:	9f 01       	movw	r18, r30
    4b2e:	e8 94       	clt
    4b30:	42 30       	cpi	r20, 0x02	; 2
    4b32:	c4 f0       	brlt	.+48     	; 0x4b64 <itoa+0x3a>
    4b34:	45 32       	cpi	r20, 0x25	; 37
    4b36:	b4 f4       	brge	.+44     	; 0x4b64 <itoa+0x3a>
    4b38:	4a 30       	cpi	r20, 0x0A	; 10
    4b3a:	29 f4       	brne	.+10     	; 0x4b46 <itoa+0x1c>
    4b3c:	97 fb       	bst	r25, 7
    4b3e:	1e f4       	brtc	.+6      	; 0x4b46 <itoa+0x1c>
    4b40:	90 95       	com	r25
    4b42:	81 95       	neg	r24
    4b44:	9f 4f       	sbci	r25, 0xFF	; 255
    4b46:	64 2f       	mov	r22, r20
    4b48:	77 27       	eor	r23, r23
    4b4a:	0e 94 29 25 	call	0x4a52	; 0x4a52 <__udivmodhi4>
    4b4e:	80 5d       	subi	r24, 0xD0	; 208
    4b50:	8a 33       	cpi	r24, 0x3A	; 58
    4b52:	0c f0       	brlt	.+2      	; 0x4b56 <itoa+0x2c>
    4b54:	89 5d       	subi	r24, 0xD9	; 217
    4b56:	81 93       	st	Z+, r24
    4b58:	cb 01       	movw	r24, r22
    4b5a:	00 97       	sbiw	r24, 0x00	; 0
    4b5c:	a1 f7       	brne	.-24     	; 0x4b46 <itoa+0x1c>
    4b5e:	16 f4       	brtc	.+4      	; 0x4b64 <itoa+0x3a>
    4b60:	5d e2       	ldi	r21, 0x2D	; 45
    4b62:	51 93       	st	Z+, r21
    4b64:	10 82       	st	Z, r1
    4b66:	c9 01       	movw	r24, r18
    4b68:	0c 94 f0 27 	jmp	0x4fe0	; 0x4fe0 <strrev>

00004b6c <dtoa_prf>:
    4b6c:	a9 e0       	ldi	r26, 0x09	; 9
    4b6e:	b0 e0       	ldi	r27, 0x00	; 0
    4b70:	ec eb       	ldi	r30, 0xBC	; 188
    4b72:	f5 e2       	ldi	r31, 0x25	; 37
    4b74:	0c 94 41 25 	jmp	0x4a82	; 0x4a82 <__prologue_saves__+0x8>
    4b78:	6a 01       	movw	r12, r20
    4b7a:	12 2f       	mov	r17, r18
    4b7c:	a0 2e       	mov	r10, r16
    4b7e:	be 2c       	mov	r11, r14
    4b80:	2b e3       	ldi	r18, 0x3B	; 59
    4b82:	20 17       	cp	r18, r16
    4b84:	18 f4       	brcc	.+6      	; 0x4b8c <dtoa_prf+0x20>
    4b86:	2c e3       	ldi	r18, 0x3C	; 60
    4b88:	92 2e       	mov	r9, r18
    4b8a:	02 c0       	rjmp	.+4      	; 0x4b90 <dtoa_prf+0x24>
    4b8c:	90 2e       	mov	r9, r16
    4b8e:	93 94       	inc	r9
    4b90:	ae 01       	movw	r20, r28
    4b92:	4f 5f       	subi	r20, 0xFF	; 255
    4b94:	5f 4f       	sbci	r21, 0xFF	; 255
    4b96:	27 e0       	ldi	r18, 0x07	; 7
    4b98:	09 2d       	mov	r16, r9
    4b9a:	0e 94 18 27 	call	0x4e30	; 0x4e30 <__ftoa_engine>
    4b9e:	bc 01       	movw	r22, r24
    4ba0:	89 81       	ldd	r24, Y+1	; 0x01
    4ba2:	e8 2e       	mov	r14, r24
    4ba4:	ff 24       	eor	r15, r15
    4ba6:	c7 01       	movw	r24, r14
    4ba8:	89 70       	andi	r24, 0x09	; 9
    4baa:	90 70       	andi	r25, 0x00	; 0
    4bac:	01 97       	sbiw	r24, 0x01	; 1
    4bae:	11 f4       	brne	.+4      	; 0x4bb4 <dtoa_prf+0x48>
    4bb0:	ad e2       	ldi	r26, 0x2D	; 45
    4bb2:	09 c0       	rjmp	.+18     	; 0x4bc6 <dtoa_prf+0x5a>
    4bb4:	b1 fe       	sbrs	r11, 1
    4bb6:	02 c0       	rjmp	.+4      	; 0x4bbc <dtoa_prf+0x50>
    4bb8:	ab e2       	ldi	r26, 0x2B	; 43
    4bba:	05 c0       	rjmp	.+10     	; 0x4bc6 <dtoa_prf+0x5a>
    4bbc:	b0 fc       	sbrc	r11, 0
    4bbe:	02 c0       	rjmp	.+4      	; 0x4bc4 <dtoa_prf+0x58>
    4bc0:	a0 e0       	ldi	r26, 0x00	; 0
    4bc2:	01 c0       	rjmp	.+2      	; 0x4bc6 <dtoa_prf+0x5a>
    4bc4:	a0 e2       	ldi	r26, 0x20	; 32
    4bc6:	e3 fe       	sbrs	r14, 3
    4bc8:	3b c0       	rjmp	.+118    	; 0x4c40 <dtoa_prf+0xd4>
    4bca:	aa 23       	and	r26, r26
    4bcc:	11 f4       	brne	.+4      	; 0x4bd2 <dtoa_prf+0x66>
    4bce:	23 e0       	ldi	r18, 0x03	; 3
    4bd0:	01 c0       	rjmp	.+2      	; 0x4bd4 <dtoa_prf+0x68>
    4bd2:	24 e0       	ldi	r18, 0x04	; 4
    4bd4:	21 17       	cp	r18, r17
    4bd6:	10 f0       	brcs	.+4      	; 0x4bdc <dtoa_prf+0x70>
    4bd8:	20 e0       	ldi	r18, 0x00	; 0
    4bda:	02 c0       	rjmp	.+4      	; 0x4be0 <dtoa_prf+0x74>
    4bdc:	12 1b       	sub	r17, r18
    4bde:	21 2f       	mov	r18, r17
    4be0:	eb 2c       	mov	r14, r11
    4be2:	b4 fe       	sbrs	r11, 4
    4be4:	02 c0       	rjmp	.+4      	; 0x4bea <dtoa_prf+0x7e>
    4be6:	32 2f       	mov	r19, r18
    4be8:	0a c0       	rjmp	.+20     	; 0x4bfe <dtoa_prf+0x92>
    4bea:	f6 01       	movw	r30, r12
    4bec:	32 2f       	mov	r19, r18
    4bee:	80 e2       	ldi	r24, 0x20	; 32
    4bf0:	02 c0       	rjmp	.+4      	; 0x4bf6 <dtoa_prf+0x8a>
    4bf2:	81 93       	st	Z+, r24
    4bf4:	31 50       	subi	r19, 0x01	; 1
    4bf6:	33 23       	and	r19, r19
    4bf8:	e1 f7       	brne	.-8      	; 0x4bf2 <dtoa_prf+0x86>
    4bfa:	c2 0e       	add	r12, r18
    4bfc:	d1 1c       	adc	r13, r1
    4bfe:	aa 23       	and	r26, r26
    4c00:	19 f0       	breq	.+6      	; 0x4c08 <dtoa_prf+0x9c>
    4c02:	f6 01       	movw	r30, r12
    4c04:	a1 93       	st	Z+, r26
    4c06:	6f 01       	movw	r12, r30
    4c08:	f6 01       	movw	r30, r12
    4c0a:	31 96       	adiw	r30, 0x01	; 1
    4c0c:	e2 fe       	sbrs	r14, 2
    4c0e:	05 c0       	rjmp	.+10     	; 0x4c1a <dtoa_prf+0xae>
    4c10:	9e e4       	ldi	r25, 0x4E	; 78
    4c12:	d6 01       	movw	r26, r12
    4c14:	9c 93       	st	X, r25
    4c16:	81 e4       	ldi	r24, 0x41	; 65
    4c18:	04 c0       	rjmp	.+8      	; 0x4c22 <dtoa_prf+0xb6>
    4c1a:	9e e6       	ldi	r25, 0x6E	; 110
    4c1c:	d6 01       	movw	r26, r12
    4c1e:	9c 93       	st	X, r25
    4c20:	81 e6       	ldi	r24, 0x61	; 97
    4c22:	11 96       	adiw	r26, 0x01	; 1
    4c24:	8c 93       	st	X, r24
    4c26:	91 83       	std	Z+1, r25	; 0x01
    4c28:	32 96       	adiw	r30, 0x02	; 2
    4c2a:	df 01       	movw	r26, r30
    4c2c:	83 2f       	mov	r24, r19
    4c2e:	90 e2       	ldi	r25, 0x20	; 32
    4c30:	02 c0       	rjmp	.+4      	; 0x4c36 <dtoa_prf+0xca>
    4c32:	9d 93       	st	X+, r25
    4c34:	81 50       	subi	r24, 0x01	; 1
    4c36:	88 23       	and	r24, r24
    4c38:	e1 f7       	brne	.-8      	; 0x4c32 <dtoa_prf+0xc6>
    4c3a:	e3 0f       	add	r30, r19
    4c3c:	f1 1d       	adc	r31, r1
    4c3e:	40 c0       	rjmp	.+128    	; 0x4cc0 <dtoa_prf+0x154>
    4c40:	e2 fe       	sbrs	r14, 2
    4c42:	42 c0       	rjmp	.+132    	; 0x4cc8 <dtoa_prf+0x15c>
    4c44:	aa 23       	and	r26, r26
    4c46:	11 f4       	brne	.+4      	; 0x4c4c <dtoa_prf+0xe0>
    4c48:	23 e0       	ldi	r18, 0x03	; 3
    4c4a:	01 c0       	rjmp	.+2      	; 0x4c4e <dtoa_prf+0xe2>
    4c4c:	24 e0       	ldi	r18, 0x04	; 4
    4c4e:	21 17       	cp	r18, r17
    4c50:	10 f0       	brcs	.+4      	; 0x4c56 <dtoa_prf+0xea>
    4c52:	20 e0       	ldi	r18, 0x00	; 0
    4c54:	02 c0       	rjmp	.+4      	; 0x4c5a <dtoa_prf+0xee>
    4c56:	12 1b       	sub	r17, r18
    4c58:	21 2f       	mov	r18, r17
    4c5a:	eb 2c       	mov	r14, r11
    4c5c:	b4 fe       	sbrs	r11, 4
    4c5e:	02 c0       	rjmp	.+4      	; 0x4c64 <dtoa_prf+0xf8>
    4c60:	92 2f       	mov	r25, r18
    4c62:	0a c0       	rjmp	.+20     	; 0x4c78 <dtoa_prf+0x10c>
    4c64:	f6 01       	movw	r30, r12
    4c66:	92 2f       	mov	r25, r18
    4c68:	80 e2       	ldi	r24, 0x20	; 32
    4c6a:	02 c0       	rjmp	.+4      	; 0x4c70 <dtoa_prf+0x104>
    4c6c:	81 93       	st	Z+, r24
    4c6e:	91 50       	subi	r25, 0x01	; 1
    4c70:	99 23       	and	r25, r25
    4c72:	e1 f7       	brne	.-8      	; 0x4c6c <dtoa_prf+0x100>
    4c74:	c2 0e       	add	r12, r18
    4c76:	d1 1c       	adc	r13, r1
    4c78:	aa 23       	and	r26, r26
    4c7a:	19 f0       	breq	.+6      	; 0x4c82 <dtoa_prf+0x116>
    4c7c:	f6 01       	movw	r30, r12
    4c7e:	a1 93       	st	Z+, r26
    4c80:	6f 01       	movw	r12, r30
    4c82:	f6 01       	movw	r30, r12
    4c84:	31 96       	adiw	r30, 0x01	; 1
    4c86:	e2 fe       	sbrs	r14, 2
    4c88:	08 c0       	rjmp	.+16     	; 0x4c9a <dtoa_prf+0x12e>
    4c8a:	89 e4       	ldi	r24, 0x49	; 73
    4c8c:	d6 01       	movw	r26, r12
    4c8e:	8c 93       	st	X, r24
    4c90:	8e e4       	ldi	r24, 0x4E	; 78
    4c92:	11 96       	adiw	r26, 0x01	; 1
    4c94:	8c 93       	st	X, r24
    4c96:	86 e4       	ldi	r24, 0x46	; 70
    4c98:	07 c0       	rjmp	.+14     	; 0x4ca8 <dtoa_prf+0x13c>
    4c9a:	89 e6       	ldi	r24, 0x69	; 105
    4c9c:	d6 01       	movw	r26, r12
    4c9e:	8c 93       	st	X, r24
    4ca0:	8e e6       	ldi	r24, 0x6E	; 110
    4ca2:	11 96       	adiw	r26, 0x01	; 1
    4ca4:	8c 93       	st	X, r24
    4ca6:	86 e6       	ldi	r24, 0x66	; 102
    4ca8:	81 83       	std	Z+1, r24	; 0x01
    4caa:	32 96       	adiw	r30, 0x02	; 2
    4cac:	df 01       	movw	r26, r30
    4cae:	89 2f       	mov	r24, r25
    4cb0:	20 e2       	ldi	r18, 0x20	; 32
    4cb2:	02 c0       	rjmp	.+4      	; 0x4cb8 <dtoa_prf+0x14c>
    4cb4:	2d 93       	st	X+, r18
    4cb6:	81 50       	subi	r24, 0x01	; 1
    4cb8:	88 23       	and	r24, r24
    4cba:	e1 f7       	brne	.-8      	; 0x4cb4 <dtoa_prf+0x148>
    4cbc:	e9 0f       	add	r30, r25
    4cbe:	f1 1d       	adc	r31, r1
    4cc0:	10 82       	st	Z, r1
    4cc2:	2e ef       	ldi	r18, 0xFE	; 254
    4cc4:	3f ef       	ldi	r19, 0xFF	; 255
    4cc6:	af c0       	rjmp	.+350    	; 0x4e26 <dtoa_prf+0x2ba>
    4cc8:	16 16       	cp	r1, r22
    4cca:	17 06       	cpc	r1, r23
    4ccc:	1c f0       	brlt	.+6      	; 0x4cd4 <dtoa_prf+0x168>
    4cce:	41 e0       	ldi	r20, 0x01	; 1
    4cd0:	50 e0       	ldi	r21, 0x00	; 0
    4cd2:	03 c0       	rjmp	.+6      	; 0x4cda <dtoa_prf+0x16e>
    4cd4:	ab 01       	movw	r20, r22
    4cd6:	4f 5f       	subi	r20, 0xFF	; 255
    4cd8:	5f 4f       	sbci	r21, 0xFF	; 255
    4cda:	aa 20       	and	r10, r10
    4cdc:	19 f4       	brne	.+6      	; 0x4ce4 <dtoa_prf+0x178>
    4cde:	80 e0       	ldi	r24, 0x00	; 0
    4ce0:	90 e0       	ldi	r25, 0x00	; 0
    4ce2:	03 c0       	rjmp	.+6      	; 0x4cea <dtoa_prf+0x17e>
    4ce4:	8a 2d       	mov	r24, r10
    4ce6:	90 e0       	ldi	r25, 0x00	; 0
    4ce8:	01 96       	adiw	r24, 0x01	; 1
    4cea:	20 e0       	ldi	r18, 0x00	; 0
    4cec:	30 e0       	ldi	r19, 0x00	; 0
    4cee:	aa 23       	and	r26, r26
    4cf0:	11 f0       	breq	.+4      	; 0x4cf6 <dtoa_prf+0x18a>
    4cf2:	21 e0       	ldi	r18, 0x01	; 1
    4cf4:	30 e0       	ldi	r19, 0x00	; 0
    4cf6:	24 0f       	add	r18, r20
    4cf8:	35 1f       	adc	r19, r21
    4cfa:	28 0f       	add	r18, r24
    4cfc:	39 1f       	adc	r19, r25
    4cfe:	81 2f       	mov	r24, r17
    4d00:	90 e0       	ldi	r25, 0x00	; 0
    4d02:	28 17       	cp	r18, r24
    4d04:	39 07       	cpc	r19, r25
    4d06:	14 f0       	brlt	.+4      	; 0x4d0c <dtoa_prf+0x1a0>
    4d08:	20 e0       	ldi	r18, 0x00	; 0
    4d0a:	02 c0       	rjmp	.+4      	; 0x4d10 <dtoa_prf+0x1a4>
    4d0c:	12 1b       	sub	r17, r18
    4d0e:	21 2f       	mov	r18, r17
    4d10:	4b 2d       	mov	r20, r11
    4d12:	50 e0       	ldi	r21, 0x00	; 0
    4d14:	ca 01       	movw	r24, r20
    4d16:	80 71       	andi	r24, 0x10	; 16
    4d18:	90 70       	andi	r25, 0x00	; 0
    4d1a:	b4 fc       	sbrc	r11, 4
    4d1c:	0d c0       	rjmp	.+26     	; 0x4d38 <dtoa_prf+0x1cc>
    4d1e:	b3 fc       	sbrc	r11, 3
    4d20:	0b c0       	rjmp	.+22     	; 0x4d38 <dtoa_prf+0x1cc>
    4d22:	f6 01       	movw	r30, r12
    4d24:	32 2f       	mov	r19, r18
    4d26:	40 e2       	ldi	r20, 0x20	; 32
    4d28:	02 c0       	rjmp	.+4      	; 0x4d2e <dtoa_prf+0x1c2>
    4d2a:	41 93       	st	Z+, r20
    4d2c:	31 50       	subi	r19, 0x01	; 1
    4d2e:	33 23       	and	r19, r19
    4d30:	e1 f7       	brne	.-8      	; 0x4d2a <dtoa_prf+0x1be>
    4d32:	c2 0e       	add	r12, r18
    4d34:	d1 1c       	adc	r13, r1
    4d36:	01 c0       	rjmp	.+2      	; 0x4d3a <dtoa_prf+0x1ce>
    4d38:	32 2f       	mov	r19, r18
    4d3a:	aa 23       	and	r26, r26
    4d3c:	19 f0       	breq	.+6      	; 0x4d44 <dtoa_prf+0x1d8>
    4d3e:	f6 01       	movw	r30, r12
    4d40:	a1 93       	st	Z+, r26
    4d42:	6f 01       	movw	r12, r30
    4d44:	89 2b       	or	r24, r25
    4d46:	11 f0       	breq	.+4      	; 0x4d4c <dtoa_prf+0x1e0>
    4d48:	13 2f       	mov	r17, r19
    4d4a:	0a c0       	rjmp	.+20     	; 0x4d60 <dtoa_prf+0x1f4>
    4d4c:	f6 01       	movw	r30, r12
    4d4e:	13 2f       	mov	r17, r19
    4d50:	80 e3       	ldi	r24, 0x30	; 48
    4d52:	02 c0       	rjmp	.+4      	; 0x4d58 <dtoa_prf+0x1ec>
    4d54:	81 93       	st	Z+, r24
    4d56:	11 50       	subi	r17, 0x01	; 1
    4d58:	11 23       	and	r17, r17
    4d5a:	e1 f7       	brne	.-8      	; 0x4d54 <dtoa_prf+0x1e8>
    4d5c:	c3 0e       	add	r12, r19
    4d5e:	d1 1c       	adc	r13, r1
    4d60:	09 2d       	mov	r16, r9
    4d62:	06 0f       	add	r16, r22
    4d64:	ba 80       	ldd	r11, Y+2	; 0x02
    4d66:	90 e1       	ldi	r25, 0x10	; 16
    4d68:	89 2e       	mov	r8, r25
    4d6a:	91 2c       	mov	r9, r1
    4d6c:	8e 20       	and	r8, r14
    4d6e:	9f 20       	and	r9, r15
    4d70:	e4 fe       	sbrs	r14, 4
    4d72:	04 c0       	rjmp	.+8      	; 0x4d7c <dtoa_prf+0x210>
    4d74:	f1 e3       	ldi	r31, 0x31	; 49
    4d76:	bf 16       	cp	r11, r31
    4d78:	09 f4       	brne	.+2      	; 0x4d7c <dtoa_prf+0x210>
    4d7a:	01 50       	subi	r16, 0x01	; 1
    4d7c:	10 16       	cp	r1, r16
    4d7e:	14 f0       	brlt	.+4      	; 0x4d84 <dtoa_prf+0x218>
    4d80:	01 e0       	ldi	r16, 0x01	; 1
    4d82:	03 c0       	rjmp	.+6      	; 0x4d8a <dtoa_prf+0x21e>
    4d84:	09 30       	cpi	r16, 0x09	; 9
    4d86:	08 f0       	brcs	.+2      	; 0x4d8a <dtoa_prf+0x21e>
    4d88:	08 e0       	ldi	r16, 0x08	; 8
    4d8a:	9b 01       	movw	r18, r22
    4d8c:	77 ff       	sbrs	r23, 7
    4d8e:	02 c0       	rjmp	.+4      	; 0x4d94 <dtoa_prf+0x228>
    4d90:	20 e0       	ldi	r18, 0x00	; 0
    4d92:	30 e0       	ldi	r19, 0x00	; 0
    4d94:	cb 01       	movw	r24, r22
    4d96:	01 96       	adiw	r24, 0x01	; 1
    4d98:	82 1b       	sub	r24, r18
    4d9a:	93 0b       	sbc	r25, r19
    4d9c:	fe 01       	movw	r30, r28
    4d9e:	31 96       	adiw	r30, 0x01	; 1
    4da0:	e8 0f       	add	r30, r24
    4da2:	f9 1f       	adc	r31, r25
    4da4:	8e e2       	ldi	r24, 0x2E	; 46
    4da6:	f8 2e       	mov	r15, r24
    4da8:	3b 01       	movw	r6, r22
    4daa:	60 1a       	sub	r6, r16
    4dac:	71 08       	sbc	r7, r1
    4dae:	8a 2d       	mov	r24, r10
    4db0:	90 e0       	ldi	r25, 0x00	; 0
    4db2:	44 27       	eor	r20, r20
    4db4:	55 27       	eor	r21, r21
    4db6:	48 1b       	sub	r20, r24
    4db8:	59 0b       	sbc	r21, r25
    4dba:	8f ef       	ldi	r24, 0xFF	; 255
    4dbc:	2f 3f       	cpi	r18, 0xFF	; 255
    4dbe:	38 07       	cpc	r19, r24
    4dc0:	19 f4       	brne	.+6      	; 0x4dc8 <dtoa_prf+0x25c>
    4dc2:	d6 01       	movw	r26, r12
    4dc4:	fd 92       	st	X+, r15
    4dc6:	6d 01       	movw	r12, r26
    4dc8:	62 17       	cp	r22, r18
    4dca:	73 07       	cpc	r23, r19
    4dcc:	2c f0       	brlt	.+10     	; 0x4dd8 <dtoa_prf+0x26c>
    4dce:	62 16       	cp	r6, r18
    4dd0:	73 06       	cpc	r7, r19
    4dd2:	14 f4       	brge	.+4      	; 0x4dd8 <dtoa_prf+0x26c>
    4dd4:	80 81       	ld	r24, Z
    4dd6:	01 c0       	rjmp	.+2      	; 0x4dda <dtoa_prf+0x26e>
    4dd8:	80 e3       	ldi	r24, 0x30	; 48
    4dda:	21 50       	subi	r18, 0x01	; 1
    4ddc:	30 40       	sbci	r19, 0x00	; 0
    4dde:	31 96       	adiw	r30, 0x01	; 1
    4de0:	24 17       	cp	r18, r20
    4de2:	35 07       	cpc	r19, r21
    4de4:	24 f0       	brlt	.+8      	; 0x4dee <dtoa_prf+0x282>
    4de6:	d6 01       	movw	r26, r12
    4de8:	8d 93       	st	X+, r24
    4dea:	6d 01       	movw	r12, r26
    4dec:	e6 cf       	rjmp	.-52     	; 0x4dba <dtoa_prf+0x24e>
    4dee:	26 17       	cp	r18, r22
    4df0:	37 07       	cpc	r19, r23
    4df2:	49 f4       	brne	.+18     	; 0x4e06 <dtoa_prf+0x29a>
    4df4:	b5 e3       	ldi	r27, 0x35	; 53
    4df6:	bb 15       	cp	r27, r11
    4df8:	28 f0       	brcs	.+10     	; 0x4e04 <dtoa_prf+0x298>
    4dfa:	bb 16       	cp	r11, r27
    4dfc:	21 f4       	brne	.+8      	; 0x4e06 <dtoa_prf+0x29a>
    4dfe:	81 14       	cp	r8, r1
    4e00:	91 04       	cpc	r9, r1
    4e02:	09 f4       	brne	.+2      	; 0x4e06 <dtoa_prf+0x29a>
    4e04:	81 e3       	ldi	r24, 0x31	; 49
    4e06:	f6 01       	movw	r30, r12
    4e08:	81 93       	st	Z+, r24
    4e0a:	d6 01       	movw	r26, r12
    4e0c:	81 2f       	mov	r24, r17
    4e0e:	90 e2       	ldi	r25, 0x20	; 32
    4e10:	02 c0       	rjmp	.+4      	; 0x4e16 <dtoa_prf+0x2aa>
    4e12:	9c 93       	st	X, r25
    4e14:	81 50       	subi	r24, 0x01	; 1
    4e16:	11 96       	adiw	r26, 0x01	; 1
    4e18:	88 23       	and	r24, r24
    4e1a:	d9 f7       	brne	.-10     	; 0x4e12 <dtoa_prf+0x2a6>
    4e1c:	e1 0f       	add	r30, r17
    4e1e:	f1 1d       	adc	r31, r1
    4e20:	10 82       	st	Z, r1
    4e22:	20 e0       	ldi	r18, 0x00	; 0
    4e24:	30 e0       	ldi	r19, 0x00	; 0
    4e26:	c9 01       	movw	r24, r18
    4e28:	29 96       	adiw	r28, 0x09	; 9
    4e2a:	ee e0       	ldi	r30, 0x0E	; 14
    4e2c:	0c 94 5d 25 	jmp	0x4aba	; 0x4aba <__epilogue_restores__+0x8>

00004e30 <__ftoa_engine>:
    4e30:	28 30       	cpi	r18, 0x08	; 8
    4e32:	08 f0       	brcs	.+2      	; 0x4e36 <__ftoa_engine+0x6>
    4e34:	27 e0       	ldi	r18, 0x07	; 7
    4e36:	33 27       	eor	r19, r19
    4e38:	da 01       	movw	r26, r20
    4e3a:	99 0f       	add	r25, r25
    4e3c:	31 1d       	adc	r19, r1
    4e3e:	87 fd       	sbrc	r24, 7
    4e40:	91 60       	ori	r25, 0x01	; 1
    4e42:	00 96       	adiw	r24, 0x00	; 0
    4e44:	61 05       	cpc	r22, r1
    4e46:	71 05       	cpc	r23, r1
    4e48:	39 f4       	brne	.+14     	; 0x4e58 <__ftoa_engine+0x28>
    4e4a:	32 60       	ori	r19, 0x02	; 2
    4e4c:	2e 5f       	subi	r18, 0xFE	; 254
    4e4e:	3d 93       	st	X+, r19
    4e50:	30 e3       	ldi	r19, 0x30	; 48
    4e52:	2a 95       	dec	r18
    4e54:	e1 f7       	brne	.-8      	; 0x4e4e <__ftoa_engine+0x1e>
    4e56:	08 95       	ret
    4e58:	9f 3f       	cpi	r25, 0xFF	; 255
    4e5a:	30 f0       	brcs	.+12     	; 0x4e68 <__ftoa_engine+0x38>
    4e5c:	80 38       	cpi	r24, 0x80	; 128
    4e5e:	71 05       	cpc	r23, r1
    4e60:	61 05       	cpc	r22, r1
    4e62:	09 f0       	breq	.+2      	; 0x4e66 <__ftoa_engine+0x36>
    4e64:	3c 5f       	subi	r19, 0xFC	; 252
    4e66:	3c 5f       	subi	r19, 0xFC	; 252
    4e68:	3d 93       	st	X+, r19
    4e6a:	91 30       	cpi	r25, 0x01	; 1
    4e6c:	08 f0       	brcs	.+2      	; 0x4e70 <__ftoa_engine+0x40>
    4e6e:	80 68       	ori	r24, 0x80	; 128
    4e70:	91 1d       	adc	r25, r1
    4e72:	df 93       	push	r29
    4e74:	cf 93       	push	r28
    4e76:	1f 93       	push	r17
    4e78:	0f 93       	push	r16
    4e7a:	ff 92       	push	r15
    4e7c:	ef 92       	push	r14
    4e7e:	19 2f       	mov	r17, r25
    4e80:	98 7f       	andi	r25, 0xF8	; 248
    4e82:	96 95       	lsr	r25
    4e84:	e9 2f       	mov	r30, r25
    4e86:	96 95       	lsr	r25
    4e88:	96 95       	lsr	r25
    4e8a:	e9 0f       	add	r30, r25
    4e8c:	ff 27       	eor	r31, r31
    4e8e:	e2 55       	subi	r30, 0x52	; 82
    4e90:	ff 4f       	sbci	r31, 0xFF	; 255
    4e92:	99 27       	eor	r25, r25
    4e94:	33 27       	eor	r19, r19
    4e96:	ee 24       	eor	r14, r14
    4e98:	ff 24       	eor	r15, r15
    4e9a:	a7 01       	movw	r20, r14
    4e9c:	e7 01       	movw	r28, r14
    4e9e:	05 90       	lpm	r0, Z+
    4ea0:	08 94       	sec
    4ea2:	07 94       	ror	r0
    4ea4:	28 f4       	brcc	.+10     	; 0x4eb0 <__ftoa_engine+0x80>
    4ea6:	36 0f       	add	r19, r22
    4ea8:	e7 1e       	adc	r14, r23
    4eaa:	f8 1e       	adc	r15, r24
    4eac:	49 1f       	adc	r20, r25
    4eae:	51 1d       	adc	r21, r1
    4eb0:	66 0f       	add	r22, r22
    4eb2:	77 1f       	adc	r23, r23
    4eb4:	88 1f       	adc	r24, r24
    4eb6:	99 1f       	adc	r25, r25
    4eb8:	06 94       	lsr	r0
    4eba:	a1 f7       	brne	.-24     	; 0x4ea4 <__ftoa_engine+0x74>
    4ebc:	05 90       	lpm	r0, Z+
    4ebe:	07 94       	ror	r0
    4ec0:	28 f4       	brcc	.+10     	; 0x4ecc <__ftoa_engine+0x9c>
    4ec2:	e7 0e       	add	r14, r23
    4ec4:	f8 1e       	adc	r15, r24
    4ec6:	49 1f       	adc	r20, r25
    4ec8:	56 1f       	adc	r21, r22
    4eca:	c1 1d       	adc	r28, r1
    4ecc:	77 0f       	add	r23, r23
    4ece:	88 1f       	adc	r24, r24
    4ed0:	99 1f       	adc	r25, r25
    4ed2:	66 1f       	adc	r22, r22
    4ed4:	06 94       	lsr	r0
    4ed6:	a1 f7       	brne	.-24     	; 0x4ec0 <__ftoa_engine+0x90>
    4ed8:	05 90       	lpm	r0, Z+
    4eda:	07 94       	ror	r0
    4edc:	28 f4       	brcc	.+10     	; 0x4ee8 <__ftoa_engine+0xb8>
    4ede:	f8 0e       	add	r15, r24
    4ee0:	49 1f       	adc	r20, r25
    4ee2:	56 1f       	adc	r21, r22
    4ee4:	c7 1f       	adc	r28, r23
    4ee6:	d1 1d       	adc	r29, r1
    4ee8:	88 0f       	add	r24, r24
    4eea:	99 1f       	adc	r25, r25
    4eec:	66 1f       	adc	r22, r22
    4eee:	77 1f       	adc	r23, r23
    4ef0:	06 94       	lsr	r0
    4ef2:	a1 f7       	brne	.-24     	; 0x4edc <__ftoa_engine+0xac>
    4ef4:	05 90       	lpm	r0, Z+
    4ef6:	07 94       	ror	r0
    4ef8:	20 f4       	brcc	.+8      	; 0x4f02 <__ftoa_engine+0xd2>
    4efa:	49 0f       	add	r20, r25
    4efc:	56 1f       	adc	r21, r22
    4efe:	c7 1f       	adc	r28, r23
    4f00:	d8 1f       	adc	r29, r24
    4f02:	99 0f       	add	r25, r25
    4f04:	66 1f       	adc	r22, r22
    4f06:	77 1f       	adc	r23, r23
    4f08:	88 1f       	adc	r24, r24
    4f0a:	06 94       	lsr	r0
    4f0c:	a9 f7       	brne	.-22     	; 0x4ef8 <__ftoa_engine+0xc8>
    4f0e:	84 91       	lpm	r24, Z+
    4f10:	10 95       	com	r17
    4f12:	17 70       	andi	r17, 0x07	; 7
    4f14:	41 f0       	breq	.+16     	; 0x4f26 <__ftoa_engine+0xf6>
    4f16:	d6 95       	lsr	r29
    4f18:	c7 95       	ror	r28
    4f1a:	57 95       	ror	r21
    4f1c:	47 95       	ror	r20
    4f1e:	f7 94       	ror	r15
    4f20:	e7 94       	ror	r14
    4f22:	1a 95       	dec	r17
    4f24:	c1 f7       	brne	.-16     	; 0x4f16 <__ftoa_engine+0xe6>
    4f26:	e4 e5       	ldi	r30, 0x54	; 84
    4f28:	f0 e0       	ldi	r31, 0x00	; 0
    4f2a:	68 94       	set
    4f2c:	15 90       	lpm	r1, Z+
    4f2e:	15 91       	lpm	r17, Z+
    4f30:	35 91       	lpm	r19, Z+
    4f32:	65 91       	lpm	r22, Z+
    4f34:	95 91       	lpm	r25, Z+
    4f36:	05 90       	lpm	r0, Z+
    4f38:	7f e2       	ldi	r23, 0x2F	; 47
    4f3a:	73 95       	inc	r23
    4f3c:	e1 18       	sub	r14, r1
    4f3e:	f1 0a       	sbc	r15, r17
    4f40:	43 0b       	sbc	r20, r19
    4f42:	56 0b       	sbc	r21, r22
    4f44:	c9 0b       	sbc	r28, r25
    4f46:	d0 09       	sbc	r29, r0
    4f48:	c0 f7       	brcc	.-16     	; 0x4f3a <__ftoa_engine+0x10a>
    4f4a:	e1 0c       	add	r14, r1
    4f4c:	f1 1e       	adc	r15, r17
    4f4e:	43 1f       	adc	r20, r19
    4f50:	56 1f       	adc	r21, r22
    4f52:	c9 1f       	adc	r28, r25
    4f54:	d0 1d       	adc	r29, r0
    4f56:	7e f4       	brtc	.+30     	; 0x4f76 <__ftoa_engine+0x146>
    4f58:	70 33       	cpi	r23, 0x30	; 48
    4f5a:	11 f4       	brne	.+4      	; 0x4f60 <__ftoa_engine+0x130>
    4f5c:	8a 95       	dec	r24
    4f5e:	e6 cf       	rjmp	.-52     	; 0x4f2c <__ftoa_engine+0xfc>
    4f60:	e8 94       	clt
    4f62:	01 50       	subi	r16, 0x01	; 1
    4f64:	30 f0       	brcs	.+12     	; 0x4f72 <__ftoa_engine+0x142>
    4f66:	08 0f       	add	r16, r24
    4f68:	0a f4       	brpl	.+2      	; 0x4f6c <__ftoa_engine+0x13c>
    4f6a:	00 27       	eor	r16, r16
    4f6c:	02 17       	cp	r16, r18
    4f6e:	08 f4       	brcc	.+2      	; 0x4f72 <__ftoa_engine+0x142>
    4f70:	20 2f       	mov	r18, r16
    4f72:	23 95       	inc	r18
    4f74:	02 2f       	mov	r16, r18
    4f76:	7a 33       	cpi	r23, 0x3A	; 58
    4f78:	28 f0       	brcs	.+10     	; 0x4f84 <__ftoa_engine+0x154>
    4f7a:	79 e3       	ldi	r23, 0x39	; 57
    4f7c:	7d 93       	st	X+, r23
    4f7e:	2a 95       	dec	r18
    4f80:	e9 f7       	brne	.-6      	; 0x4f7c <__ftoa_engine+0x14c>
    4f82:	10 c0       	rjmp	.+32     	; 0x4fa4 <__ftoa_engine+0x174>
    4f84:	7d 93       	st	X+, r23
    4f86:	2a 95       	dec	r18
    4f88:	89 f6       	brne	.-94     	; 0x4f2c <__ftoa_engine+0xfc>
    4f8a:	06 94       	lsr	r0
    4f8c:	97 95       	ror	r25
    4f8e:	67 95       	ror	r22
    4f90:	37 95       	ror	r19
    4f92:	17 95       	ror	r17
    4f94:	17 94       	ror	r1
    4f96:	e1 18       	sub	r14, r1
    4f98:	f1 0a       	sbc	r15, r17
    4f9a:	43 0b       	sbc	r20, r19
    4f9c:	56 0b       	sbc	r21, r22
    4f9e:	c9 0b       	sbc	r28, r25
    4fa0:	d0 09       	sbc	r29, r0
    4fa2:	98 f0       	brcs	.+38     	; 0x4fca <__ftoa_engine+0x19a>
    4fa4:	23 95       	inc	r18
    4fa6:	7e 91       	ld	r23, -X
    4fa8:	73 95       	inc	r23
    4faa:	7a 33       	cpi	r23, 0x3A	; 58
    4fac:	08 f0       	brcs	.+2      	; 0x4fb0 <__ftoa_engine+0x180>
    4fae:	70 e3       	ldi	r23, 0x30	; 48
    4fb0:	7c 93       	st	X, r23
    4fb2:	20 13       	cpse	r18, r16
    4fb4:	b8 f7       	brcc	.-18     	; 0x4fa4 <__ftoa_engine+0x174>
    4fb6:	7e 91       	ld	r23, -X
    4fb8:	70 61       	ori	r23, 0x10	; 16
    4fba:	7d 93       	st	X+, r23
    4fbc:	30 f0       	brcs	.+12     	; 0x4fca <__ftoa_engine+0x19a>
    4fbe:	83 95       	inc	r24
    4fc0:	71 e3       	ldi	r23, 0x31	; 49
    4fc2:	7d 93       	st	X+, r23
    4fc4:	70 e3       	ldi	r23, 0x30	; 48
    4fc6:	2a 95       	dec	r18
    4fc8:	e1 f7       	brne	.-8      	; 0x4fc2 <__ftoa_engine+0x192>
    4fca:	11 24       	eor	r1, r1
    4fcc:	ef 90       	pop	r14
    4fce:	ff 90       	pop	r15
    4fd0:	0f 91       	pop	r16
    4fd2:	1f 91       	pop	r17
    4fd4:	cf 91       	pop	r28
    4fd6:	df 91       	pop	r29
    4fd8:	99 27       	eor	r25, r25
    4fda:	87 fd       	sbrc	r24, 7
    4fdc:	90 95       	com	r25
    4fde:	08 95       	ret

00004fe0 <strrev>:
    4fe0:	dc 01       	movw	r26, r24
    4fe2:	fc 01       	movw	r30, r24
    4fe4:	67 2f       	mov	r22, r23
    4fe6:	71 91       	ld	r23, Z+
    4fe8:	77 23       	and	r23, r23
    4fea:	e1 f7       	brne	.-8      	; 0x4fe4 <strrev+0x4>
    4fec:	32 97       	sbiw	r30, 0x02	; 2
    4fee:	04 c0       	rjmp	.+8      	; 0x4ff8 <strrev+0x18>
    4ff0:	7c 91       	ld	r23, X
    4ff2:	6d 93       	st	X+, r22
    4ff4:	70 83       	st	Z, r23
    4ff6:	62 91       	ld	r22, -Z
    4ff8:	ae 17       	cp	r26, r30
    4ffa:	bf 07       	cpc	r27, r31
    4ffc:	c8 f3       	brcs	.-14     	; 0x4ff0 <strrev+0x10>
    4ffe:	08 95       	ret

00005000 <_exit>:
    5000:	f8 94       	cli

00005002 <__stop_program>:
    5002:	ff cf       	rjmp	.-2      	; 0x5002 <__stop_program>
